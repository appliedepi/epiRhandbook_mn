[{"path":"index.html","id":"section","chapter":"","heading":"","text":"","code":""},{"path":"index.html","id":"r-ыг-тархвар-судлал-нийгмийн-эрүүл-мэндэд-ашиглах-нь","chapter":"","heading":"R-ыг тархвар судлал, нийгмийн эрүүл мэндэд ашиглах нь","text":"Энэхүү ном дараах зорилтуудтай:Эпи R кодын түргэн лавлагаа хэлбэрээр туслахНийтлэг тархвар судлалын асуудлуудыг шийдвэрлэхэд чиглэсэн даалгавар-төвт жишээнүүдээр хангахR луу шилжиж буй тархвар судлаачдад туслахИнтернет холболт муутай орчинд офлайн хувилбар[Download handbook data] ашиглан хандах боломжтой** \nТархвар судлаачид тархвар судлаачиддаа зориулж бичивБид дэлхийн өнцөг булан бүрд буй тархвар судлаачид бөгөөд энэ номыг өөрсдийн мэргэжил нэгтнүүддээ санал болгохын тулд чөлөөт цагаараа бичлээ. Та бүгдийн санал хүсэлт, урмын үгийг хүлээн авахад таатай байна:Маягт санал хүсэлтийн маягтИмэйл epiRhandbook@gmail.com эсвэл жиргээ @epiRhandbookМанай Github repository руу асуудлаа (Issues) оруулах","code":""},{"path":"index.html","id":"энэхүү-гарын-авлагыг-хэрхэн-ашиглах-вэ","chapter":"","heading":"Энэхүү гарын авлагыг хэрхэн ашиглах вэ","text":"Номын гарчгуудын агуулгыг харах, эсвэл хайлтыг ашиглана ууКодыг хуулахын тулд “хуулах” товчийг дарна уу[Жишээний датаг][Гарын авлага болон дата татаж авах] ашиглан дагаж хийж болноДэлгэрэнгүй материалыг хуудас бүрийн “Нэмэлт материал” хэсгээс үзнэ үүОфлайн хувилбар[Гарын авлага болон дата татаж авах] хуудаснаас зааврыг харна уу.","code":""},{"path":"index.html","id":"талархал","chapter":"","heading":"Талархал","text":"Энэхүү гарын авлагыг дэлхий даяарх эпидемиологичид өөрсдийн орон нутаг, муж, үндэсний эрүүл мэндийн байгууллагууд, Дэлхийн эрүүл мэндийн байгууллага (ДЭМБ), Médecins Sans Frontières / Хил хязгааргүй эмч нар (MSF), эмнэлэг, их сургуулиуд зэрэгт ажиллаж буй туршлагаас үндэслэн хамтын ажиллагааны үр дүнд бүтээсэн болно.Энэхүү гарын авлага нь ямар нэгэн байгууллагын гаргаж буй бүтээл биш юм. Хэдийгээр бид номны агуулга үнэн зөв байхыг хичээсэн ч энэхүү номонд багтсан агуулгад баталгаа өгөхгүй.","code":""},{"path":"index.html","id":"оролцогчид","chapter":"","heading":"Оролцогчид","text":"Ерөнхий редактор: Neale BatraТөслийн үндсэн баг: Neale Batra, Alex Spina, Amrish Baidjoe, Pat Keating, Henry Laurenson-Schafer, Finlay CampbellЗохиогчид: Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Aminata Ndiaye, Liza Coyer, Jonathan Polonsky, Yurie Izawa, Chris Bailey, Daniel Molling, Isha Berry, Emma Buajitti, Mathilde Mousset, Sara Hollis, Wen LinХянагчид: Pat Keating, Annick Lenglet, Margot Charette, Danielly Xavier, Esther Kukielka, Michelle Sloan, Aybüke Koyuncu, Rachel Burke, Kate Kelsey, Berhe Etsay, John Rossow, Mackenzie Zendt, James Wright, Laura Haskins, Flavio Finger, Tim Taylor, Jae Hyoung Tim Lee, Brianna Bradley, Wayne Enanoria, Manual Albela Miranda, Molly Mantus, Pattama Ulrich, Joseph Timothy, Adam Vaughan, Olivia Varsaneux, Lionel Monteiro, Joao MuiangaЗураг/дүрслэлүүд: Calder Fong","code":""},{"path":"index.html","id":"санхүүжилт-дэмжлэг","chapter":"","heading":"Санхүүжилт, дэмжлэг","text":"Гарын авлагад дэлхийн талбарын эпидемиологийн сургалтын хөтөлбөрүүдийн (FETPs) сүлжээ болох TEPHINET-ээс COVID-19 яаралтай хариу арга хэмжээний чадавхийг бэхжүүлэх буцалтгүй тусламжаар санхүүжилт авсан.Захиргааны дэмжлэгийг EPIET төгсөгчдийн сүлжээ ([EAN] (https://epietalumni.net/)) үзүүлсэн бөгөөд нэн ялангуяа Annika Wendland-д талархал илэрхийлж байна. EPIET бол Европын интервенц эпидемиологийн сургалтын хөтөлбөр юм.Энэхүү гарын авлагыг боловсруулахад дэмжлэг үзүүлсэн Хил Хязгааргүй Эмч нар (MSF) байгууллагын Амстердамын үйл ажиллагааны төвд (OCA) тусгайлан талархал илэрхийлж байна.Энэхүү бүтээлийг Олон улсын эрүүл мэндийн ажлын хэсгийн хөтөлбөр болох TEPHINET-ээр дамжуулан Өвчний хяналт, урьдчилан сэргийлэлтийн төвүүдээс (CDC) NU2GGH001873 дугаартай Хамтран ажиллах гэрээний дагуу санхүүжүүлсэн. Бүтээлийн агуулгыг зөвхөн зохиогчид хариуцах бөгөөд агуулга нь Өвчний хяналт, урьдчилан сэргийлэлтийн төвүүд, Эрүүл мэнд, хүн амын яам, Олон улсын эрүүл мэндийн ажлын хэсэг, Inc. эсвэл TEPHINET-ийн албан ёсны үзэл бодлыг илэрхийлэхгүй болно.","code":""},{"path":"index.html","id":"сэдэл","chapter":"","heading":"Сэдэл","text":"Гарын авлагын агуулгыг хөгжүүлэх мэдлэгээр хангасан олон тооны хичээл, виньетүүдийг тус тусын хуудсанд оруулсан болно.Ерөнхийдөө дараахь эх сурвалжууд энэхүү гарын авлагад нөлөө үзүүлсэн:“R4Epis” төсөл (MSF, RECON хоёрын хамтын ажиллагаа)R Эпидемикийн Консорциум (RECON)R-ыг Дата шинжлэх ухаанд ном (R4DS)bookdown: Ном, мэргэжлийн баримт бичгүүдийг R Markdown ашиглан зохиох ньNetlify энэхүү вэб хуудсыг байршуулдаг","code":""},{"path":"index.html","id":"ашиглалтын-нөхцөл-ба-лиценз","chapter":"","heading":"Ашиглалтын нөхцөл ба Лиценз","text":"","code":""},{"path":"index.html","id":"лиценз","chapter":"","heading":"Лиценз","text":"work licensed Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.Академик курсууд, эпидемиологийн сургалтын хөтөлбөрүүд энэхүү гарын авлагыг ашиглан суралцагчиддаа хичээл заах нээллттэй. Хэрэв танд энэхүү номыг ашиглах зорилтын тань талаар асуулт байвал epirhandbook@gmail.com имэйлээр илгээнэ үү.","code":""},{"path":"index.html","id":"ишлэл","chapter":"","heading":"Ишлэл","text":"Batra, Neale, et al. Epidemiologist R Handbook. 2021. ","code":""},{"path":"index.html","id":"хувь-нэмрээ-оруулах","chapter":"","heading":"Хувь нэмрээ оруулах","text":"Хэрэв та номын агуулгад хувь нэмрээ оруулахыг хүсч байвал Github-ын Issues хэсгээр эсвэл имэйлээр бидэнтэй холбоо бариарай. Бид номын шинэчлэлийн хуваарийг боловсруулан, хэрхэн хувь нэмрээ оруулах зааврыг бэлдэж байна.EpiRhandbook төсөл нь Contributor-ын ёс зүйн дүрэмтэй болохыг анхаарна уу. Энэхүү төсөлд хувь нэмэр оруулснаар та үүний нөхцлийг дагаж мөрдөхийг зөвшөөрч байна.","code":""},{"path":"редакцийн-болон-техникийн-тэмдэглэл.html","id":"редакцийн-болон-техникийн-тэмдэглэл","chapter":"1 Редакцийн болон техникийн тэмдэглэл","heading":"1 Редакцийн болон техникийн тэмдэглэл","text":"Энэ хуудсанд энэхүү гарын авлагыг бүтээх явцад бидний барьсан философийн арга барил, хэв маяг, редакцийн тодорхой шийдвэрүүдийг тайлбарласан болно.","code":""},{"path":"редакцийн-болон-техникийн-тэмдэглэл.html","id":"арга-барил-загвар","chapter":"1 Редакцийн болон техникийн тэмдэглэл","heading":"1.1 Арга барил, загвар","text":"Энэхүү номын уншигчдын хүрээ маш өргөн байх боломжтой. R-ийг анхлан сурч буй хүмүүс хэрэглэх нь гарцаагүй бөгөөд мөн туршлагатай R хэрэглэгчид ч шилдэг туршлага, зөвлөгөөг хайн унших болно. Тиймээс энэхүү ном ойлгомжтой бөгөөд товч тодорхой байх ёстой. Тийм болохоор бид R анхлан сурж буй хүн кодыг ашиглаж, тухайн код юу хийж буйг ойлгох хэмжээний дөнгөж хангалттай бичгэн тайлбар хийхийг зорьсон.Өөр хэдэн зүйл:Энэ бол харьцангуй богино жишээтэй кодын лавлагаа ном юм - R эсвэл өгөгдлийн шинжлэх ухааны талаарх гүнзгий сурах бичиг бишЭнэ бол хэрэглээний тархвар судлалд хэрэглэгдэх R гарын авлага - хэрэглээний тархвар судлалын шинжлэх ухаан эсвэл аргачлалын гарын авлага бишЭнэхүү ном амьд ном байхыг зорьж буй - тодорхой үйлдэл хийхэд хамгийн тохиромжтой R багцууд өөрчлөгдөх нь түгээмэл бөгөөд бид энэхүү гарын авлагад алийг нь тусгах талаар хэлэлцүүлгийг таатай хүлээн авах болно","code":""},{"path":"редакцийн-болон-техникийн-тэмдэглэл.html","id":"r-багцууд","chapter":"1 Редакцийн болон техникийн тэмдэглэл","heading":"R багцууд","text":"Маш олон сонголтуудR сурахад хамгийн төвөгтэй талуудын нэг нь тухайн даалгаварт яг аль R багцыг ашиглахаа мэдэх явдал юм. Нэг даалгавар гүйцэтгэхийн тулд маш их код бичсэний дараа тухайн даалгаврыг ганцхан мөр кодоор хийчихдэг R багц байдгийг мэдэх нь түгээмэл.Бид энэхүү гарын авлагад даалгавар бүрийг гүйцэтгэх хоёроос доошгүй аргыг санал болгохыг хичээсэн: нэг нь туршиж үзсэн, найдвартай арга (магадгүй суурь R эсвэл tidyverse), нөгөө нь тухайн даалгаварт тусгайлан зориулж бүтээсэн R багц. Өгөгдсөн багцыг татаж авах боломжгүй эсвэл өөр шалтгаанаар ажиллахгүй байж болох учир бид уншигчдыг хэд хэдэн сонголттой байлгахыг хүссэн.Аль багцыг ашиглахаа сонгохдоо бид олон нийтийн зүгээс туршиж, шалгаж үзсэн, энгийн ажлын үед хэрэглэгддэг багцуудын тоог багасгадаг, тогтвортой (ойр ойрхон өөрчлөгддөггүй), тухайн даалгаврыг энгийн бөгөөд тодорхой гүйцэтгэдэг R багцууд болон арга барилуудыг урьдал болгосон.Энэхүү гарын авлага ерөнхийдөө tidyverse-ийн R багцууд, функцуудыг голчлон хэрэглэсэн болно. Tidyverse бол үндсэн дүрэм, өгөгдлийн бүтцийн хувьд ижил, өгөгдлийн шинжлэх ухаанд зориулагдсан R багцуудын цуглуулга юм. Бүх tidyverse-ийн багцуудыг tidyverse багц ашиглан суулгаж эсвэл ачаалж болно. Дэлгэрэнгүйг tidyverse вэбсайт дээрээс уншина уу.Бид мөн шаардлагатай тохиолдолд ашиглаж болох суурь R ашигласан кодын сонголтыг оруулсан. Суурь R (base R) гэдэг нь R суулгах явцад түүнтэй хамт ирдэг багцууд, функцуудыг хэлж буй. Үүний учир нь энэ номын зарим уншигчид нэмэлт багц татаж авах найдвартай интернетгүй байж магадгүй юм.Функцийг багцтай ил тод холбох ньR-ийн зарим хичээлүүдийн кодонд нэг функцыг ашиглаж буй боловч тухайн функц ямар багцаас ашиглагдаж буйг харуулдаггүй нь нэлээд төвөгтэй байдаг. Бид ийм нөхцөл байдлаас зайлсхийхийг хичээсэн.Номын өгүүлэл текстэнд багцын нэрүүд тодоор (ж.нь dplyr) бичигдсэн бөгөөд функцууд дараах байдлаар бичигдсэн: mutate(). Ойролцоох текст дэх багцыг дурдах эсвэл кодонд багцыг ийм байдлаар (dplyr::mutate()) тодорхой зааж өгөх замаар тухайн функц нь ямар багцаас гаралтай болохыг тодорхой харуулахыг бид хичээсэн. Энэ нь илүү ажил мэт санагдаж болох ч бид үүнийг албаар ингэж харуулж байгаа болно.[R-ын суурь] хэсгээс багцууд, функцуудын талаар дэлгэрэнгүй мэдээлэл авч болно.","code":""},{"path":"редакцийн-болон-техникийн-тэмдэглэл.html","id":"кодын-загвар","chapter":"1 Редакцийн болон техникийн тэмдэглэл","heading":"Кодын загвар","text":"Бид гарын авлагадаа “шинэ мөрнүүд”-ийг тогтмол ашигласнаар бидний код “урт” мэт харагдана. Бид үүнийг хэд хэдэн шалтгааны улмаас хийж байна:Бид кодын жижиг хэсэг бүрийн хажууд # тэмдэг ашиглан тайлбар бичиж болноЕрөнхийдөө урт (босоо) кодыг уншихад илүү амар байдагНарийхан дэлгэц дээр уншихад илүү амар (хажуу тийш нь гүйлгэх шаардлагагүй)Догол мөрөөс харахад ямар аргументууд аль функцэд хамааралтай болохыг мэдэхэд илүү хялбар болноҮүний үр дүнд дараах байдлаар бичигдэж болох код:…ингэж бичигдэнэ:Шинэ мөр эсвэл догол мөрнүүд ерөнхийдөө R кодод нөлөөлдөггүй. Код бичихдээ таслалын дараа шинэ мөр эхлүүлбэл догол мөрийг автоматаар ашиглах болно.Бид мөн уншихад илүү хялбар байдаг тул хоосон зайг ихээр ашигладаг (жишээлбэл n=1 биш n = 1). Таны кодыг уншиж буй хүмүүсээ бодоорой!","code":"\nlinelist %>% \n  group_by(hospital) %>%  # мөрүүдийг эмнэлгээр бүлэглэх\n  slice_max(date, n = 1, with_ties = F) # хэрвээ (огнооны) давхцал байвал эхний мөрийг нь сонгох\nlinelist %>% \n  group_by(hospital) %>% # мөрүүдийг эмнэлгээр бүлэглэх\n  slice_max(\n    date,                # бүлэг тус бүрийн хамгийн сүүлийн (өндөр) огноо бүхий мөрийг үлдээх\n    n = 1,               # хамгийн өндөр ганцхан мөрийг үлдээх \n    with_ties = F)       # хэрвээ (огнооны) давхцал байвал эхний мөрийг нь сонгох"},{"path":"редакцийн-болон-техникийн-тэмдэглэл.html","id":"нэр-томъёо","chapter":"1 Редакцийн болон техникийн тэмдэглэл","heading":"Нэр томъёо","text":"Энэхүү гарын авлагад бид “хувьсагч (variables)”, “ажиглалт (observations)” гэхийн оронд ерөнхийдөө “багана (columns)” ба “мөр (rows)”-ийг ашигласан. Энэхүү “цэгцтэй өгөгдөл” гэсэн материалд тайлбарласнаар ихэнх эпидемиологийн статистикийн өгөгдлийн багц нь бүтцийн хувьд мөр, багана, утгуудаас бүрддэг.Хувьсагч нь ижил үндсэн шинж чанарыг хэмжсэн утгыг агуулдаг (насны бүлэг, үр дүн, эхлэх огноо гэх мэт). Ажиглалт нь нэг нэгжээр хэмжигдэх бүх утгыг агуулдаг (жишээлбэл, хүн, байршил эсвэл лабораторийн сорьц). Тиймээс иймэрхүү шинж чанарыг бодитоор тодорхойлоход төвөгтэй байж магадгүй юм.“Цэгцтэй” өгөгдлийн багцад багана бүр хувьсагч, мөр бүр ажиглалт, нүд бүр нэг утгатай байна. Хэдий тийм боловч таны ашиглаж буй зарим өгөгдлийн багц энэ загварт тохирохгүй байх нь элбэг - жишээ нь “өргөн” форматтай өгөгдлийн багц нь хэд хэдэн баганад хуваагдсан хувьсагчтай байж болно ([Pivoting data] хуудсан дээрх жишээг үзнэ үү). Үүний нэгэн адил ажиглалт мөн хэд хэдэн мөрөнд хуваагдсан байж болдог.Энэхүү гарын авлагын ихэнх нь өгөгдлийг удирдах, өөрчлөх тухай байгаа тул хийсвэр ойлголтууд болох ажиглалт, хувьсагчаас илүүтэй тодорхой ойлголтууд болох мөр, баганаар өгөгдлийн бүтцийг дурдах нь илүү ойлгомжтой юм. Үүнд хамаарахгүй зүйлүүд нь голчлон өгөгдлийн дүн шинжилгээний талаарх хуудсуудад гарч ирэх бөгөөд дүн шинжилгээний хувьд та хувьсагч, ажиглалт гэсэн ойлголтуудтай түлхүү тулгарах болно.","code":""},{"path":"редакцийн-болон-техникийн-тэмдэглэл.html","id":"тэмдэглэл","chapter":"1 Редакцийн болон техникийн тэмдэглэл","heading":"Тэмдэглэл","text":"Энэхүү гарын авлагад дурдагдах тэмдэглэлийн төрлүүд энд байна:ТЭМДЭГЛЭЛ: Энэ бол тэмдэглэл.ЗӨВЛӨГӨӨ: Энэ бол зөвлөгөө.СЭРЭМЖЛҮҮЛЭГ: Энэ бол сэрэмжлүүлэх тэмдэглэл.АЮУЛ: Энэ бол анхааруулга.","code":""},{"path":"редакцийн-болон-техникийн-тэмдэглэл.html","id":"редакцийн-шийдвэр","chapter":"1 Редакцийн болон техникийн тэмдэглэл","heading":"1.2 Редакцийн шийдвэр","text":"Доорх хүснэгтээр бид багц болон функцын сонголтын талаархи редакцийн чухал шийдвэрүүдийг хянан дагаж байна. Хэрэв та санал нийлэхгүй байгаа эсвэл шинэ багц/функц санал болгохыг хүсвэл манай Github хуудсан дээр нэгдэж харилцан яриа эхлүүлнэ үү.Багц, функц болон бусад редакцийн шийдвэрийн хүснэгт","code":""},{"path":"редакцийн-болон-техникийн-тэмдэглэл.html","id":"гол-өөрчлөлт","chapter":"1 Редакцийн болон техникийн тэмдэглэл","heading":"1.3 Гол өөрчлөлт","text":"","code":""},{"path":"редакцийн-болон-техникийн-тэмдэглэл.html","id":"session-мэдээлэл-r-rstudio-багцууд","chapter":"1 Редакцийн болон техникийн тэмдэглэл","heading":"1.4 Session мэдээлэл (R, RStudio, багцууд)","text":"Энэхүү гарын авлагыг гаргах явцад ашигласан R, RStudio, R багцын хувилбаруудын талаархи мэдээллийг доор өгөв.","code":"\nsessioninfo::session_info()## - Session info -----------------------------------------------------------\n##  setting  value\n##  version  R version 4.1.2 (2021-11-01)\n##  os       Windows 10 x64 (build 19044)\n##  system   x86_64, mingw32\n##  ui       RStudio\n##  language (EN)\n##  collate  Mongolian_Mongolia.1251\n##  ctype    Mongolian_Mongolia.1251\n##  tz       Asia/Ulaanbaatar\n##  date     2022-01-05\n##  rstudio  2021.09.0+351 Ghost Orchid (desktop)\n##  pandoc   2.14.0.3 @ C:/Program Files/RStudio/bin/pandoc/ (via rmarkdown)\n## \n## - Packages ---------------------------------------------------------------\n##  package              * version     date (UTC) lib source\n##  abind                * 1.4-5       2016-07-21 [1] CRAN (R 4.1.0)\n##  ada                    2.0-5       2016-05-13 [1] CRAN (R 4.1.1)\n##  adagio                 0.8.4       2021-04-30 [1] CRAN (R 4.1.0)\n##  ade4                   1.7-18      2021-09-16 [1] CRAN (R 4.1.1)\n##  anytime                0.3.9       2020-08-27 [1] CRAN (R 4.1.0)\n##  ape                    5.6         2021-12-21 [1] CRAN (R 4.1.2)\n##  apyramid             * 0.1.2       2020-05-08 [1] CRAN (R 4.1.0)\n##  assertthat             0.2.1       2019-03-21 [1] CRAN (R 4.1.0)\n##  aweek                * 1.0.2       2021-01-04 [1] CRAN (R 4.1.0)\n##  backports              1.4.1       2021-12-13 [1] CRAN (R 4.1.2)\n##  base64enc              0.1-3       2015-07-28 [1] CRAN (R 4.1.0)\n##  bayestestR             0.11.5      2021-10-30 [1] CRAN (R 4.1.1)\n##  BiocManager            1.30.16     2021-06-15 [1] CRAN (R 4.1.1)\n##  bit                  * 4.0.4       2020-08-04 [1] CRAN (R 4.1.0)\n##  bit64                  4.0.5       2020-08-30 [1] CRAN (R 4.1.0)\n##  blob                   1.2.2       2021-07-23 [1] CRAN (R 4.1.0)\n##  bookdown               0.24        2021-09-02 [1] CRAN (R 4.1.1)\n##  boot                 * 1.3-28      2021-05-03 [2] CRAN (R 4.1.2)\n##  broom                * 0.7.11      2022-01-03 [1] CRAN (R 4.1.2)\n##  broom.helpers          1.5.0       2021-12-07 [1] CRAN (R 4.1.2)\n##  bslib                  0.3.1       2021-10-06 [1] CRAN (R 4.1.1)\n##  cachem                 1.0.6       2021-08-19 [1] CRAN (R 4.1.1)\n##  car                    3.0-12      2021-11-06 [1] CRAN (R 4.1.1)\n##  carData                3.0-4       2020-05-22 [1] CRAN (R 4.1.0)\n##  cellranger             1.1.0       2016-07-27 [1] CRAN (R 4.1.0)\n##  checkmate              2.0.0       2020-02-06 [1] CRAN (R 4.1.0)\n##  class                  7.3-19      2021-05-03 [2] CRAN (R 4.1.2)\n##  classInt               0.4-3       2020-04-07 [1] CRAN (R 4.1.0)\n##  cli                    3.1.0       2021-10-27 [1] CRAN (R 4.1.1)\n##  clock                  0.6.0       2021-12-02 [1] CRAN (R 4.1.2)\n##  coda                   0.19-4      2020-09-30 [1] CRAN (R 4.1.0)\n##  codetools              0.2-18      2020-11-04 [2] CRAN (R 4.1.2)\n##  colorspace             2.0-2       2021-06-24 [1] CRAN (R 4.1.0)\n##  commonmark             1.7         2018-12-01 [1] CRAN (R 4.1.0)\n##  corrr                * 0.4.3       2020-11-24 [1] CRAN (R 4.1.1)\n##  cowplot                1.1.1       2020-12-30 [1] CRAN (R 4.1.0)\n##  crayon                 1.4.2       2021-10-29 [1] CRAN (R 4.1.1)\n##  crosstalk              1.2.0       2021-11-04 [1] CRAN (R 4.1.1)\n##  curl                   4.3.2       2021-06-23 [1] CRAN (R 4.1.0)\n##  curry                  0.1.1       2016-09-28 [1] CRAN (R 4.1.0)\n##  data.table             1.14.2      2021-09-27 [1] CRAN (R 4.1.1)\n##  datawizard             0.2.2       2022-01-04 [1] CRAN (R 4.1.2)\n##  DBI                  * 1.1.2       2021-12-20 [1] CRAN (R 4.1.2)\n##  dbplyr                 2.1.1       2021-04-06 [1] CRAN (R 4.1.0)\n##  deldir                 1.0-6       2021-10-23 [1] CRAN (R 4.1.1)\n##  Deriv                  4.1.3       2021-02-24 [1] CRAN (R 4.1.1)\n##  DiagrammeR             1.0.6.1     2020-05-08 [1] CRAN (R 4.1.0)\n##  dichromat              2.0-0       2013-01-24 [1] CRAN (R 4.1.0)\n##  digest                 0.6.29      2021-12-01 [1] CRAN (R 4.1.2)\n##  distcrete              1.0.3       2017-11-23 [1] CRAN (R 4.1.0)\n##  distributional         0.2.2       2021-02-02 [1] CRAN (R 4.1.1)\n##  doBy                 * 4.6.11      2021-07-13 [1] CRAN (R 4.1.1)\n##  doParallel             1.0.16      2020-10-16 [1] CRAN (R 4.1.0)\n##  downlit                0.4.0       2021-10-29 [1] CRAN (R 4.1.1)\n##  dplyr                * 1.0.7       2021-06-18 [1] CRAN (R 4.1.0)\n##  dsr                  * 0.2.2       2019-08-23 [1] CRAN (R 4.1.1)\n##  DT                   * 0.20        2021-11-15 [1] CRAN (R 4.1.1)\n##  e1071                  1.7-9       2021-09-16 [1] CRAN (R 4.1.1)\n##  ecmwfr               * 1.3.0       2020-07-13 [1] CRAN (R 4.1.1)\n##  ellipsis               0.3.2       2021-04-29 [1] CRAN (R 4.1.0)\n##  epicontacts            1.2.0       2021-08-31 [1] Github (reconhub/epicontacts@facf491)\n##  epikit               * 0.1.2       2020-09-07 [1] CRAN (R 4.1.0)\n##  epitrix                0.2.2       2019-01-15 [1] CRAN (R 4.1.0)\n##  evaluate               0.14        2019-05-28 [1] CRAN (R 4.1.0)\n##  evd                    2.3-3       2018-04-25 [1] CRAN (R 4.1.1)\n##  expm                   0.999-6     2021-01-13 [1] CRAN (R 4.1.0)\n##  fabletools           * 0.3.2       2021-11-29 [1] CRAN (R 4.1.2)\n##  FactoClass             1.2.7       2018-10-01 [1] CRAN (R 4.1.0)\n##  fansi                  0.5.0       2021-05-25 [1] CRAN (R 4.1.0)\n##  farver                 2.1.0       2021-02-28 [1] CRAN (R 4.1.0)\n##  fastLink             * 0.6.0       2020-04-29 [1] CRAN (R 4.1.0)\n##  fastmap                1.1.0       2021-01-25 [1] CRAN (R 4.1.0)\n##  feasts               * 0.2.2       2021-06-03 [1] CRAN (R 4.1.1)\n##  ff                   * 4.0.5       2021-10-29 [1] CRAN (R 4.1.1)\n##  flextable            * 0.6.10      2021-11-15 [1] CRAN (R 4.1.1)\n##  forcats              * 0.5.1       2021-01-27 [1] CRAN (R 4.1.0)\n##  foreach                1.5.1       2020-10-15 [1] CRAN (R 4.1.0)\n##  forecast             * 8.15        2021-06-01 [1] CRAN (R 4.1.0)\n##  foreign                0.8-81      2020-12-22 [2] CRAN (R 4.1.2)\n##  fracdiff               1.5-1       2020-01-24 [1] CRAN (R 4.1.0)\n##  frailtypack          * 3.5.0       2021-12-20 [1] CRAN (R 4.1.2)\n##  fs                   * 1.5.2       2021-12-08 [1] CRAN (R 4.1.2)\n##  future                 1.23.0      2021-10-31 [1] CRAN (R 4.1.1)\n##  future.apply           1.8.1       2021-08-10 [1] CRAN (R 4.1.0)\n##  gdata                  2.18.0      2017-06-06 [1] CRAN (R 4.1.0)\n##  gdtools                0.2.3       2021-01-06 [1] CRAN (R 4.1.0)\n##  generics               0.1.1       2021-10-25 [1] CRAN (R 4.1.1)\n##  gghighlight            0.3.2       2021-06-05 [1] CRAN (R 4.1.0)\n##  ggplot2              * 3.3.5       2021-06-25 [1] CRAN (R 4.1.0)\n##  ggpubr               * 0.4.0       2020-06-27 [1] CRAN (R 4.1.0)\n##  ggrepel                0.9.1       2021-01-15 [1] CRAN (R 4.1.0)\n##  ggsignif               0.6.3       2021-09-09 [1] CRAN (R 4.1.1)\n##  ggtext                 0.1.1       2020-12-17 [1] CRAN (R 4.1.0)\n##  globals                0.14.0      2020-11-22 [1] CRAN (R 4.1.0)\n##  glue                   1.6.0       2021-12-17 [1] CRAN (R 4.1.2)\n##  gmodels                2.18.1      2018-06-25 [1] CRAN (R 4.1.0)\n##  goftest                1.2-3       2021-10-07 [1] CRAN (R 4.1.1)\n##  grates                 0.3.0       2021-10-21 [1] CRAN (R 4.1.1)\n##  gridExtra              2.3         2017-09-09 [1] CRAN (R 4.1.0)\n##  gridtext               0.1.4       2020-12-10 [1] CRAN (R 4.1.0)\n##  gt                     0.3.1       2021-08-07 [1] CRAN (R 4.1.0)\n##  gtable                 0.3.0       2019-03-25 [1] CRAN (R 4.1.0)\n##  gtools                 3.9.2       2021-06-06 [1] CRAN (R 4.1.0)\n##  gtsummary            * 1.5.0       2021-10-16 [1] CRAN (R 4.1.1)\n##  haven                  2.4.3       2021-08-04 [1] CRAN (R 4.1.0)\n##  here                 * 1.0.1       2020-12-13 [1] CRAN (R 4.1.0)\n##  highcharter            0.9.4       2022-01-03 [1] CRAN (R 4.1.2)\n##  highr                  0.9         2021-04-16 [1] CRAN (R 4.1.0)\n##  hms                    1.1.1       2021-09-26 [1] CRAN (R 4.1.1)\n##  htmltools              0.5.2       2021-08-25 [1] CRAN (R 4.1.1)\n##  htmlwidgets            1.5.4       2021-09-08 [1] CRAN (R 4.1.1)\n##  httr                   1.4.2       2020-07-20 [1] CRAN (R 4.1.0)\n##  i2extras               0.1.2       2021-07-08 [1] CRAN (R 4.1.0)\n##  igraph                 1.2.10      2021-12-15 [1] CRAN (R 4.1.2)\n##  imputeTS             * 3.2         2021-01-16 [1] CRAN (R 4.1.0)\n##  incidence              1.7.3       2020-11-04 [1] CRAN (R 4.1.0)\n##  incidence2             1.2.3       2021-11-07 [1] CRAN (R 4.1.1)\n##  insight                0.14.5      2021-10-16 [1] CRAN (R 4.1.1)\n##  ipred                  0.9-12      2021-09-15 [1] CRAN (R 4.1.1)\n##  iterators              1.0.13      2020-10-15 [1] CRAN (R 4.1.0)\n##  janitor              * 2.1.0       2021-01-05 [1] CRAN (R 4.1.0)\n##  jquerylib              0.1.4       2021-04-26 [1] CRAN (R 4.1.0)\n##  jsonlite               1.7.2       2020-12-09 [1] CRAN (R 4.1.0)\n##  kableExtra             1.3.4       2021-02-20 [1] CRAN (R 4.1.0)\n##  KernSmooth             2.23-20     2021-05-03 [2] CRAN (R 4.1.2)\n##  km.ci                  0.5-2       2009-08-30 [1] CRAN (R 4.1.0)\n##  KMsurv                 0.1-5       2012-12-03 [1] CRAN (R 4.1.0)\n##  knitr                  1.37        2021-12-16 [1] CRAN (R 4.1.2)\n##  labeling               0.4.2       2020-10-20 [1] CRAN (R 4.1.0)\n##  labelled               2.9.0       2021-10-29 [1] CRAN (R 4.1.1)\n##  lattice                0.20-45     2021-09-22 [2] CRAN (R 4.1.2)\n##  lava                   1.6.10      2021-09-02 [1] CRAN (R 4.1.1)\n##  lazyeval               0.2.2       2019-03-15 [1] CRAN (R 4.1.0)\n##  LearnBayes             2.15.1      2018-03-18 [1] CRAN (R 4.1.0)\n##  lifecycle              1.0.1       2021-09-24 [1] CRAN (R 4.1.1)\n##  linelist             * 0.0.40.9000 2021-08-26 [1] Github (reconhub/linelist@cae034d)\n##  listenv                0.8.0       2019-12-05 [1] CRAN (R 4.1.0)\n##  lmtest               * 0.9-39      2021-11-07 [1] CRAN (R 4.1.1)\n##  lpSolve                5.6.15      2020-01-24 [1] CRAN (R 4.1.0)\n##  lubridate            * 1.8.0       2021-10-07 [1] CRAN (R 4.1.1)\n##  lwgeom                 0.2-8       2021-10-06 [1] CRAN (R 4.1.1)\n##  magrittr               2.0.1       2020-11-17 [1] CRAN (R 4.1.0)\n##  MASS                 * 7.3-54      2021-05-03 [2] CRAN (R 4.1.2)\n##  matchmaker             0.1.1       2020-02-21 [1] CRAN (R 4.1.0)\n##  Matrix               * 1.3-4       2021-06-01 [2] CRAN (R 4.1.2)\n##  memoise                2.0.1       2021-11-26 [1] CRAN (R 4.1.1)\n##  mgcv                   1.8-38      2021-10-06 [2] CRAN (R 4.1.2)\n##  mice                 * 3.14.0      2021-11-24 [1] CRAN (R 4.1.1)\n##  microbenchmark         1.4.9       2021-11-09 [1] CRAN (R 4.1.1)\n##  modelr                 0.1.8       2020-05-19 [1] CRAN (R 4.1.0)\n##  munsell                0.5.0       2018-06-12 [1] CRAN (R 4.1.0)\n##  naniar               * 0.6.1       2021-05-14 [1] CRAN (R 4.1.1)\n##  nlme                   3.1-153     2021-09-07 [2] CRAN (R 4.1.2)\n##  nnet                   7.3-16      2021-05-03 [2] CRAN (R 4.1.2)\n##  officer              * 0.4.1       2021-11-14 [1] CRAN (R 4.1.1)\n##  openxlsx               4.2.5       2021-12-14 [1] CRAN (R 4.1.2)\n##  pacman                 0.5.1       2019-03-11 [1] CRAN (R 4.1.0)\n##  parallelly             1.30.0      2021-12-17 [1] CRAN (R 4.1.2)\n##  parameters           * 0.15.0      2021-10-18 [1] CRAN (R 4.1.1)\n##  PerformanceAnalytics * 2.0.4       2020-02-06 [1] CRAN (R 4.1.0)\n##  PHEindicatormethods  * 1.3.2       2020-06-25 [1] CRAN (R 4.1.0)\n##  pillar                 1.6.4       2021-10-18 [1] CRAN (R 4.1.1)\n##  pkgconfig              2.0.3       2019-09-22 [1] CRAN (R 4.1.0)\n##  plotly                 4.10.0      2021-10-09 [1] CRAN (R 4.1.1)\n##  plotrix                3.8-2       2021-09-08 [1] CRAN (R 4.1.1)\n##  plyr                   1.8.6       2020-03-03 [1] CRAN (R 4.1.0)\n##  png                    0.1-7       2013-12-03 [1] CRAN (R 4.1.0)\n##  polyclip               1.10-0      2019-03-14 [1] CRAN (R 4.1.0)\n##  polyCub                0.8.0       2021-01-27 [1] CRAN (R 4.1.1)\n##  pROC                   1.18.0      2021-09-03 [1] CRAN (R 4.1.1)\n##  prodlim                2019.11.13  2019-11-17 [1] CRAN (R 4.1.0)\n##  progressr              0.10.0      2021-12-19 [1] CRAN (R 4.1.2)\n##  proxy                  0.4-26      2021-06-07 [1] CRAN (R 4.1.0)\n##  purrr                * 0.3.4       2020-04-17 [1] CRAN (R 4.1.0)\n##  quadprog               1.5-8       2019-11-20 [1] CRAN (R 4.1.0)\n##  Quandl                 2.11.0      2021-08-11 [1] CRAN (R 4.1.0)\n##  quantmod             * 0.4.18      2020-12-09 [1] CRAN (R 4.1.0)\n##  R6                     2.5.1       2021-08-19 [1] CRAN (R 4.1.1)\n##  raster                 3.5-11      2021-12-23 [1] CRAN (R 4.1.2)\n##  RColorBrewer           1.1-2       2014-12-07 [1] CRAN (R 4.1.0)\n##  Rcpp                 * 1.0.7       2021-07-07 [1] CRAN (R 4.1.0)\n##  readr                * 2.1.1       2021-11-30 [1] CRAN (R 4.1.2)\n##  readxl               * 1.3.1       2019-03-13 [1] CRAN (R 4.1.0)\n##  RecordLinkage        * 0.4-12.1    2020-08-25 [1] CRAN (R 4.1.1)\n##  remotes                2.4.2       2021-11-30 [1] CRAN (R 4.1.2)\n##  repr                   1.1.4       2022-01-04 [1] CRAN (R 4.1.2)\n##  reprex                 2.0.1       2021-08-05 [1] CRAN (R 4.1.0)\n##  rio                  * 0.5.29      2021-11-22 [1] CRAN (R 4.1.1)\n##  rlang                  0.99.0.9000 2021-10-18 [1] https://epiforecasts.r-universe.dev (R 4.1.1)\n##  rlist                  0.4.6.2     2021-09-03 [1] CRAN (R 4.1.1)\n##  rmarkdown              2.11        2021-09-14 [1] CRAN (R 4.1.1)\n##  rootSolve              1.8.2.3     2021-09-29 [1] CRAN (R 4.1.1)\n##  rpart                  4.1-15      2019-04-12 [2] CRAN (R 4.1.2)\n##  rprojroot              2.0.2       2020-11-15 [1] CRAN (R 4.1.0)\n##  RSQLite              * 2.2.9       2021-12-06 [1] CRAN (R 4.1.2)\n##  rstatix              * 0.7.0       2021-02-13 [1] CRAN (R 4.1.0)\n##  rstudioapi             0.13        2020-11-12 [1] CRAN (R 4.1.1)\n##  rvest                  1.0.2       2021-10-16 [1] CRAN (R 4.1.1)\n##  s2                     1.0.7       2021-09-28 [1] CRAN (R 4.1.1)\n##  sass                   0.4.0       2021-05-12 [1] CRAN (R 4.1.0)\n##  scales               * 1.1.1       2020-05-11 [1] CRAN (R 4.1.0)\n##  scatterplot3d          0.3-41      2018-03-14 [1] CRAN (R 4.1.0)\n##  see                  * 0.6.8       2021-10-03 [1] CRAN (R 4.1.1)\n##  sessioninfo            1.2.2       2021-12-06 [1] CRAN (R 4.1.2)\n##  sf                   * 1.0-5       2021-12-17 [1] CRAN (R 4.1.2)\n##  skimr                * 2.1.3       2021-03-07 [1] CRAN (R 4.1.0)\n##  slider               * 0.2.2       2021-07-01 [1] CRAN (R 4.1.0)\n##  snakecase              0.11.0      2019-05-25 [1] CRAN (R 4.1.0)\n##  sp                   * 1.4-6       2021-11-14 [1] CRAN (R 4.1.1)\n##  spatstat               2.3-0       2021-12-12 [1] CRAN (R 4.1.2)\n##  spatstat.core          2.3-2       2021-11-26 [1] CRAN (R 4.1.1)\n##  spatstat.data          2.1-2       2021-12-17 [1] CRAN (R 4.1.2)\n##  spatstat.geom          2.3-1       2021-12-10 [1] CRAN (R 4.1.2)\n##  spatstat.linnet        2.3-1       2021-12-11 [1] CRAN (R 4.1.2)\n##  spatstat.sparse        2.1-0       2021-12-17 [1] CRAN (R 4.1.2)\n##  spatstat.utils         2.3-0       2021-12-12 [1] CRAN (R 4.1.2)\n##  spData                 2.0.1       2021-10-14 [1] CRAN (R 4.1.1)\n##  spdep                  1.1-13      2021-12-14 [1] CRAN (R 4.1.2)\n##  stars                * 0.5-5       2021-12-19 [1] CRAN (R 4.1.2)\n##  statmod                1.4.36      2021-05-10 [1] CRAN (R 4.1.1)\n##  stinepack              1.4         2018-07-30 [1] CRAN (R 4.1.0)\n##  stringdist           * 0.9.8       2021-09-09 [1] CRAN (R 4.1.1)\n##  stringi                1.7.6       2021-11-29 [1] CRAN (R 4.1.1)\n##  stringr              * 1.4.0       2019-02-10 [1] CRAN (R 4.1.0)\n##  survC1               * 1.0-3       2021-02-10 [1] CRAN (R 4.1.1)\n##  surveillance         * 1.19.1      2021-03-31 [1] CRAN (R 4.1.1)\n##  survival             * 3.2-13      2021-08-24 [2] CRAN (R 4.1.2)\n##  survminer              0.4.9       2021-03-09 [1] CRAN (R 4.1.0)\n##  survMisc               0.5.5       2018-07-05 [1] CRAN (R 4.1.0)\n##  svglite                2.0.0       2021-02-20 [1] CRAN (R 4.1.0)\n##  systemfonts            1.0.3       2021-10-13 [1] CRAN (R 4.1.1)\n##  tensor                 1.5         2012-05-05 [1] CRAN (R 4.1.0)\n##  terra                  1.4-22      2021-11-24 [1] CRAN (R 4.1.1)\n##  tibble               * 3.1.6       2021-11-07 [1] CRAN (R 4.1.1)\n##  tidyquant            * 1.0.3       2021-03-05 [1] CRAN (R 4.1.0)\n##  tidyr                * 1.1.4       2021-09-27 [1] CRAN (R 4.1.1)\n##  tidyselect             1.1.1       2021-04-30 [1] CRAN (R 4.1.0)\n##  tidyverse            * 1.3.1       2021-04-15 [1] CRAN (R 4.1.0)\n##  timeDate               3043.102    2018-02-21 [1] CRAN (R 4.1.0)\n##  tmaptools            * 3.1-1       2021-01-19 [1] CRAN (R 4.1.1)\n##  trending             * 0.0.3       2021-04-19 [1] CRAN (R 4.1.0)\n##  tseries                0.10-49     2021-11-16 [1] CRAN (R 4.1.1)\n##  tsibble              * 1.1.1       2021-12-03 [1] CRAN (R 4.1.2)\n##  TTR                  * 0.24.3      2021-12-12 [1] CRAN (R 4.1.2)\n##  tzdb                   0.2.0       2021-10-27 [1] CRAN (R 4.1.1)\n##  units                * 0.7-2       2021-06-08 [1] CRAN (R 4.1.0)\n##  UpSetR                 1.4.0       2019-05-22 [1] CRAN (R 4.1.0)\n##  urca                   1.3-0       2016-09-06 [1] CRAN (R 4.1.0)\n##  utf8                   1.2.2       2021-07-24 [1] CRAN (R 4.1.0)\n##  uuid                   1.0-3       2021-11-01 [1] CRAN (R 4.1.1)\n##  vctrs                  0.3.8       2021-04-29 [1] CRAN (R 4.1.0)\n##  viridis                0.6.2       2021-10-13 [1] CRAN (R 4.1.1)\n##  viridisLite            0.4.0       2021-04-13 [1] CRAN (R 4.1.0)\n##  visdat                 0.5.3       2019-02-15 [1] CRAN (R 4.1.1)\n##  visNetwork             2.1.0       2021-09-29 [1] CRAN (R 4.1.1)\n##  warp                   0.2.0       2020-10-21 [1] CRAN (R 4.1.0)\n##  webshot                0.5.2       2019-11-22 [1] CRAN (R 4.1.0)\n##  withr                  2.4.3       2021-11-30 [1] CRAN (R 4.1.2)\n##  wk                     0.6.0       2022-01-03 [1] CRAN (R 4.1.2)\n##  writexl              * 1.4.0       2021-04-20 [1] CRAN (R 4.1.1)\n##  xfun                   0.29        2021-12-14 [1] CRAN (R 4.1.2)\n##  XML                    3.99-0.8    2021-09-17 [1] CRAN (R 4.1.1)\n##  xml2                   1.3.3       2021-11-30 [1] CRAN (R 4.1.2)\n##  xtable               * 1.8-4       2019-04-21 [1] CRAN (R 4.1.0)\n##  xts                  * 0.12.1      2020-09-09 [1] CRAN (R 4.1.0)\n##  yaml                   2.2.1       2020-02-01 [1] CRAN (R 4.1.0)\n##  yardstick            * 0.0.9       2021-11-22 [1] CRAN (R 4.1.1)\n##  zip                    2.2.0       2021-05-31 [1] CRAN (R 4.1.0)\n##  zoo                  * 1.8-9       2021-03-09 [1] CRAN (R 4.1.0)\n## \n##  [1] C:/Users/Temuulen/Documents/R/win-library/4.1\n##  [2] C:/Program Files/R/R-4.1.2/library\n## \n## --------------------------------------------------------------------------"},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"гарын-авлага-өгөгдлийг-татаж-авах","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"2 Гарын авлага, өгөгдлийг татаж авах","text":"","code":""},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"офлайн-гарын-авлагыг-татаж-авах","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"2.1 Офлайн гарын авлагыг татаж авах","text":"Та энэ гарын авлагын офлайн хувилбарыг HTML файл хэлбэрээр татаж авах\nболомжтой бөгөөд ингэснээр та интернет холболтгүй болсон ч гэсэн вэб\nхөтөч дээрээ файлыг үзэх боломжтой болно. Хэрэв та Epi R гарын авлагыг\nофлайнаар ашиглах гэж байгаа бол дараах хэдэн зүйлийг анхаарах хэрэгтэй:Файлыг нээхэд зурагнууд болон агуулгын хүснэгтийг ачаалахад ганц\nхоёр минут шаардагдаж магадгүйФайлыг нээхэд зурагнууд болон агуулгын хүснэгтийг ачаалахад ганц\nхоёр минут шаардагдаж магадгүйОфлайн гарын авлага нь арай өөр бүтэцтэй - зүүн талд нь агуулгын\nхүснэгт бүхий маш урт хуудастай. Тодорхой нэр томъёо хайхын тулд\nCtrl+f (Cmd-f) командыг ашиглана уу.Офлайн гарын авлага нь арай өөр бүтэцтэй - зүүн талд нь агуулгын\nхүснэгт бүхий маш урт хуудастай. Тодорхой нэр томъёо хайхын тулд\nCtrl+f (Cmd-f) командыг ашиглана уу.\\[Санал болгож буй багцууд\\] хуудсыг үзээд интернет холболт\nтасрахаас өмнө тохирох R багцуудыг суулгаж болно\\[Санал болгож буй багцууд\\] хуудсыг үзээд интернет холболт\nтасрахаас өмнө тохирох R багцуудыг суулгаж болноБүх жишээ өгөгдлийг агуулсан манай R багц epirhandbook-ийг\nсуулгаарай (суулгах процессыг доор тайлбарласан болно)Бүх жишээ өгөгдлийг агуулсан манай R багц epirhandbook-ийг\nсуулгаарай (суулгах процессыг доор тайлбарласан болно)Гарын авлага татаж авах хоёр арга бий::","code":""},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"татаж-авах-линкийг-ашиглах","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"Татаж авах линкийг ашиглах","text":"Түргэн хандахын тулд энэ\nхолбоос\nдээр хулганы баруун товчийг дараад “Save link ”-г сонгоно уу.Хэрэв Mac дээр бол Cmd+дарна уу. Хэрэв гар утас дээр байгаа бол\nхолбоосыг дараад “Save link”-г сонгоно уу. Гарын авлага нь таны\nтөхөөрөмжид татагдах болно. Хэрэв raw HTML кодтой дэлгэц гарч ирвэл\nдээрх зааврыг дагаж мөрдсөн эсэхээ шалгах эсвэл 2-р аргыг туршиж\nүзээрэй.","code":""},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"манай-r-багцыг-ашиглах","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"Манай R багцыг ашиглах","text":"Бид epirhandbook нэртэй R багцыг санал болгож байна. Энэ багц нь\nгарын авлагын файлыг манай Github репозитороос таны компьютерт татаж\nавдаг download_book() функцийг агуулдаг.Мөн энэ багц нь бүх жишээ өгөгдлийг таны компьютерт татаж авдаг\nget_data() функцийг агуулдаг.Github репозитори\nappliedepi-ээс манай R\nбагц epirhandbook-ийг суулгахын тулд дараах кодыг ажиллуулна уу. Энэ\nбагц нь CRAN дээр байдаггүй тул Github-аас суулгахын тулд\np_install_gh() тусгай функцийг ашиглана уу.Та одоогийн R session-дээ ашиглахын тулд багцыг ачаална уу:Дараа нь гарын авлагыг компьютер дээрээ татаж авахын тулд энэхүү багцын\ndownload_book() (хоосон хаалттай нь) функцийг ажиллуулна уу. Хэрэв та\nRStudio-дээр ажиллаж байгаа бол хадгалагдах байршлыг сонгох боломжтой\nцонх гарч ирнэ.","code":"\n# Epi R Handbook багцын хамгийн сүүлийн хувилбарыг суулга\npacman::p_install_gh(\"appliedepi/epirhandbook\")\n# ашиглахын тулд багцыг ачаал\npacman::p_load(epirhandbook)\n# офлайн гарын авлагыг компьютер дээрээ татаж ав\ndownload_book()"},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"дагаж-ажиллахын-тулд-өгөгдлийг-татаж-авах","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"2.2 Дагаж ажиллахын тулд өгөгдлийг татаж авах","text":"Гарын авлагын хуудсыг “дагаж ажиллахын” тулд та жишээ өгөгдөл, гаралтыг\nтатаж авах боломжтой.","code":""},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"манай-r-багцыг-ашиглах-1","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"Манай R багцыг ашиглах","text":"Бүх өгөгдлийг татаж авах хамгийн хялбар арга бол манай R багц\nepirhandbook-ийг суулгах явдал юм. Энэ багц нь бүх жишээ өгөгдлийг\nтаны сонгосон хавтсанд хадгалдаг get_data() функцийг агуулдаг.Манай R багц epirhandbook-ийг суулгахын тулд дараах кодыг ажиллуулна\nуу. Энэ багц нь CRAN дээр байдаггүй тул үүнийг суулгахын тулд\np_install_gh() функцийг ашиглана. Оролт нь манай Github байгууллага\n(“appliedepi”) болон epirhandbook багцыг харуулж байна.Та одоогийн R session-дээ ашиглахын тулд багцыг ачаална уу:Үүний дараа нь get_data() функцийг ашиглан жишээ өгөгдлийг компьютер\nдээрээ татаж аваарай. Бүх жишээ өгөгдлийг авахын тулд\nget_data(\"\")-ийг ажиллуулна эсвэл зөвхөн нэг файлыг авахын тулд\nишлэл дотор тухайн файлын нэрийг өргөтгөлийн хамт оруулна уу.Өгөгдлийг багцтай аль хэдийн татаж авсан бөгөөд үүнийг компьютер дээрх\nхавтас руу шилжүүлэх шаардлагатай. Хадгалах хавтасны байршлыг сонгох\nболомжийг олгодог попап цонх гарч ирнэ. 30 орчим файл (жишээ өгөгдөл,\nжишээ гаралтыг оруулаад) байгаа тул танд шинэ “data” фолдер үүсгэхийг\nсанал болгож байна.Та get_data() функцыг ашиглан файлыг компьютер дээрээ хадгалсан хэдий\nч үүнийг R руу импортлох шаардлагатай хэвээр байх болно. Дэлгэрэнгүй\nмэдээллийг \\[Импорт ба экспорт\\] хуудаснаас үзнэ үү.Хэрэв та хүсвэл энэ гарын авлагад ашигласан бүх өгөгдлийг манай Github\nрепозиторийн “data”\nхавтсанд\nүзэх боломжтой.","code":"\n# Epi R Handbook багцын хамгийн сүүлийн хувилбарыг суулга\npacman::p_install_gh(\"appliedepi/epirhandbook\")\n# ашиглахын тулд багцыг ачаал\npacman::p_load(epirhandbook)\n# бүх жишээ өгөгдлийг компьютер дээрх хавтас руу татаж ав\nget_data(\"all\")\n\n# зөвхөн linelist жишээний өгөгдлийг компьютер дээрх хавтаст татаж ав\nget_data(file = \"linelist_cleaned.rds\")\n# тодорхой файлыг компьютер дээрх хавтас руу татаж ав\nget_data(\"linelist_cleaned.rds\")"},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"нэг-нэгээр-нь-татаж-авах","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"Нэг нэгээр нь татаж авах","text":"Энэ сонголт нь манай Github репозитороос тухайн файлд зориулагдсан линк\nэсвэл R командын тусламжтайгаар өгөгдлийг нэг нэгээр нь татаж авах\nболомжийг олгох юм. Зарим файлын төрлүүд татаж авах товчлуурыг\nзөвшөөрдөг бол заримыг нь R командын тусламжтайгаар татаж авах\nболомжтой.","code":""},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"тохиолдлын-linelist","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"Тохиолдлын linelist","text":"Энэ бол outbreaks багц дахь дадлагын өгөгдлийн багц болох\nebola_sim-ийг гарын авлагын баг өргөжүүлсэн Эбола вирусын зохиомол\nдэгдэлтийн өгөгдөл юм.“Боловсруулаагүй”\nlinelist (.xlsx) татаж авахын тулд дарна уу.\n“Боловсруулаагүй” linelist нь замбараагүй өгөгдөл бүхий Excel\nхүснэгт юм. Үүнийг ашиглан \\[Өгөгдөл цэвэрлэх ба үндсэн функцууд\\]\nхуудсыг дагаж ажиллана уу.“Боловсруулаагүй”\nlinelist (.xlsx) татаж авахын тулд дарна уу.\n“Боловсруулаагүй” linelist нь замбараагүй өгөгдөл бүхий Excel\nхүснэгт юм. Үүнийг ашиглан \\[Өгөгдөл цэвэрлэх ба үндсэн функцууд\\]\nхуудсыг дагаж ажиллана уу.“Цэвэр”\nlinelist (.rds) татаж авахын тулд дарна уу. Энэ гарын авлагын\nэнэхүү linelist-ийг ашиглаж буй бусад бүх хуудсан дээр энэ файлыг\nашиглана уу. Энэхүү .rds файл нь баганын төрлүүдийг хадгалдаг R-ын\nөвөрмөц файлын төрөл юм. Энэ файлыг ашигласнаар өгөгдлийг R руу\nимпортлосны дараа хамгийн бага цэвэрлэгээ хийх болно.“Цэвэр”\nlinelist (.rds) татаж авахын тулд дарна уу. Энэ гарын авлагын\nэнэхүү linelist-ийг ашиглаж буй бусад бүх хуудсан дээр энэ файлыг\nашиглана уу. Энэхүү .rds файл нь баганын төрлүүдийг хадгалдаг R-ын\nөвөрмөц файлын төрөл юм. Энэ файлыг ашигласнаар өгөгдлийг R руу\nимпортлосны дараа хамгийн бага цэвэрлэгээ хийх болно.Бусад холбогдох файлууд:“Цэвэр”\nlinelist-ийг Excel файл болгон татаж авахын тулд дарна уу“Цэвэр”\nlinelist-ийг Excel файл болгон татаж авахын тулд дарна ууЦэвэрлэх хуудасны нэг хэсэг нь “цэвэрлэх толь бичиг” (.csv файл)\nашигладаг. Та дараах командуудыг ажиллуулснаар үүнийг R руу шууд\nачаалж болно:Цэвэрлэх хуудасны нэг хэсэг нь “цэвэрлэх толь бичиг” (.csv файл)\nашигладаг. Та дараах командуудыг ажиллуулснаар үүнийг R руу шууд\nачаалж болно:","code":"\npacman::p_load(rio) # rio багцыг суулгах/ачаалах\n\n# файлыг Github-аас шууд импортлох\ncleaning_dict <- import(\"https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/case_linelists/cleaning_dict.csv\")"},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"data_malaria","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"Хумхаагийн тоон өгөгдөл","text":"Энэхүү өгөгдөл нь хумхаа өвчний тохиолдлыг насны бүлэг, байгууламж,\nөдрөөр нь гаргасан зохиомол тоонууд болно. Энэхүү .rds файл нь баганын\nтөрлүүдийг хадгалдаг R-ын өвөрмөц файлын төрөл юм. Энэ файлыг\nашигласнаар өгөгдлийг R руу импортлосны дараа хамгийн бага цэвэрлэгээ\nхийх болно.\nХумхаа өвчний тоон өгөгдлийг татаж авахын тулд дарна уу (.rds файл) ","code":""},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"ликерт-хэмжүүртэй-өгөгдөл","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"Ликерт-хэмжүүртэй өгөгдөл","text":"Эдгээр нь \\[Хүн ам зүйн пирамидууд ба Ликерт-хэмжүүр\\] хуудсан дээр\nашиглагдсан Ликерт-загварын судалгааны зохиомол өгөгдөл юм. Та дараах\nкомандуудыг ажиллуулснаар эдгээр өгөгдлийг R руу шууд ачаалж болно:","code":"\npacman::p_load(rio) # rio багцыг суулгах/ачаалах\n\n# файлыг Github-аас шууд импортлох\nlikert_data <- import(\"https://raw.githubusercontent.com/nsbatra/Epi_R_handbook/master/data/likert_data.csv\")"},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"flexdashboard","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"Flexdashboard","text":"Доорх нь \\[R Markdown бүхий хяналтын самбар\\] хуудастай холбоотой файлын\nлинкүүд:Дэгдэлтийн хяналтын самбарын R Markdown-ийг татаж авахын тулд энэ\nхолбоос\nдээр хулганы баруун товчийг дараад (Mac дээр Cmd+дарна уу) “Save\nlink ” сонгоно уу.Дэгдэлтийн хяналтын самбарын R Markdown-ийг татаж авахын тулд энэ\nхолбоос\nдээр хулганы баруун товчийг дараад (Mac дээр Cmd+дарна уу) “Save\nlink ” сонгоно уу.HTML хяналтын самбарыг татаж авахын тулд энэ\nхолбоос\nдээр хулганы баруун товчийг дараад (Cmd+Mac дээр дарна уу) “Save\nlink ” сонгоно уу.HTML хяналтын самбарыг татаж авахын тулд энэ\nхолбоос\nдээр хулганы баруун товчийг дараад (Cmd+Mac дээр дарна уу) “Save\nlink ” сонгоно уу.","code":""},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"хавьтал-мөшгөлт","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"Хавьтал мөшгөлт","text":"Хавьтал мөшгөлт хуудас нь\nGo.Data-аас\nавсан өгөгдлийн жишээг ашиглан хавьтал мөшгөлтийн мэдээллийн анализыг\nхаруулсан. Энэхүү хуудас дээр ашигласан өгөгдлийг дараах холбоосууд дээр\nдарж .rds файл хэлбэрээр татаж авах боломжтой:\nТохиолдлын судалгааны өгөгдлийг татаж авахын тулд дарна уу (.rds файл)\n\nХавьтлын бүртгэлийн өгөгдлийг татаж авахын тулд дарна уу (.rds файл)\n\nХавьтлын хяналтын өгөгдлийг татаж авахын тулд дарна уу (.rds файл) ТЭМДЭГЛЭЛ: Бусад програм хангамж (жишээ нь KoBo, DHIS2 Tracker,\nCommCare)-аас авсан тогтсон бүтэцтэй хавьтал мөшгөлтийн өгөгдөл өөр\nхарагдаж магадгүй юм. Хэрэв та энэ хуудсанд өөр жишээ өгөгдөл эсвэл\nагуулгыг оруулахыг хүсч байвал бидэнтэй холбоо барина\nуу.ЗӨВЛӨГӨӨ: Хэрэв та Go.Data ашиглаж байгаа бөгөөд өөрийн API-тай\nхолбогдохыг хүсч байвал Импорт, экспортын хуудас (API\nхэсэг) болон Go.Data Community \nPractice-г үзнэ\nүү.","code":""},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"gis","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"GIS","text":"Шэйпфайл (shapefile) нь олон дэд файлуудтай бөгөөд эдгээр нь бүгд өөр\nөөр файлын өргөтгөлтэй байдаг. Нэг файл “.shp” өргөтгөлтэй байхад бусад\nнь “.dbf”, “.prj” гэх мэт өргөтгөлтэй байж болно.\\[GIS-ийн үндсэн ойлголтууд\\] хуудас дээр байгаа Хүмүүнлэгийн өгөгдлийн\nсолилцооны вэбсайтын холбоос байгаа бөгөөд та энэхүү вэбсайтаас\nшэйпфайлуудыг зип хэлбэрээр шууд татаж авах боломжтой.Жишээлбэл, эрүүл мэндийн байгууллагын онооны өгөгдлийг\nэндээс\nтатаж авах боломжтой.\n“hotosm_sierra_leone_health_facilities_points_shp.zip” файлыг татаж авна\nуу. Энэхүү файл таны компьютерт хадгалагдсаны дараа фолдерыг “задлах”\n(unzip) хэрэгтэй. Та өөр өөр өргөтгөлтэй хэд хэдэн файлыг харах болно\n(жишээ нь “.shp”, “.prj”, “.shx”) - эдгээрийг бүгдийг нь таны компьютер\nдээрх нэг хавтсанд хадгалах ёстой. Дараа нь R руу импортлохын тулд\nфайлын зам болон “.shp” файлын нэрийг sf багцын st_read() функц\nруу оруулна уу (\\[GIS-ийн үндсэн ойлголтууд\\] хуудсанд тайлбарласны\nдагуу).Хэрвээ та 1-р сонголтын дагуу бүх жишээ өгөгдлийг татаж авсан бол (манай\nR багц epirhandbook-ээр) тэр дотор бүх шэйпфайлууд орсон байгаа.Эсвэл та шэйпфайлуудыг R Handbook Github “data” хавтсаас татаж авах\nболомжтой (“gis” дэд хавтсыг үзнэ үү). Ингэж татах үедээ та дэд файл\nбүрийг тус тусад нь компьютер дээрээ татаж авах хэрэгтэй гэдгийг\nсанаарай. Github дээр файл тус бүр дээр дарж, “Download” товчийг дарж\nтатаж аваарай. Доор “sle_adm3” шэйпфайл нь хэрхэн олон файлаас бүрдэж\nбуйг харуулж буй бөгөөд эдгээр файл тус бүрийг Github-аас татаж авах\nшаардлагатай.","code":""},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"удмын-мод","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"Удмын мод","text":"Удмын мод-ны талаарх хуудсыг үзнэ үү. Shigella sonnei-ийн\n299 сорьцын бүтэн геномын дарааллыг тогтоож гаргасан удмын модны Ньюик\n(Newick) файл ба сорьцын бусад холбогдох өгөгдөл (текст файл болгон\nхөрвүүлсэн). Бельгийн Salmonella, Shigella сорьцууд, тэдгээрийн үр\nдүнгийн өгөгдлийг ECDC EUPHEM-ийн суралцагчийн төслийн хүрээнд Бельгийн\nүндэсний лавлагаа лабораториос өгсөн бөгөөд энэхүү судалгааны үр дүн мөн\nхэвлэгдэх болно. Олон улсын өгөгдөл олон нийтийн өгөгдлийн сан (NCBI)\nдээр нээлттэй хэлбэрээр байрладаг бөгөөд өмнө нь хэвлэгдэж байсан.“Shigella_tree.txt” удмын модны файлыг татаж авахын тулд энэ\nлинк\nдээр хулганы баруун товчийг дараад (Mac дээр Cmd+дарж) “Save link\n” сонгоно уу.“Shigella_tree.txt” удмын модны файлыг татаж авахын тулд энэ\nлинк\nдээр хулганы баруун товчийг дараад (Mac дээр Cmd+дарж) “Save link\n” сонгоно уу.Сорьц тус бүрийн нэмэлт мэдээллийг агуулсан\n“sample_data_Shigella_tree.csv” файлыг татаж авахын тулд энэ\nлинк\nдээр хулганы баруун товчийг дараад (Mac дээр Cmd+дарж) “Save link\n” сонгоно уу.Сорьц тус бүрийн нэмэлт мэдээллийг агуулсан\n“sample_data_Shigella_tree.csv” файлыг татаж авахын тулд энэ\nлинк\nдээр хулганы баруун товчийг дараад (Mac дээр Cmd+дарж) “Save link\n” сонгоно уу.Шинээр үүсгэсэн дэд модыг харахын тулд энэ\nлинк\nдээр хулганы баруун товчийг дараад (Cmd+Mac дээр дарна уу) “Save\nlink ” сонгоно уу. Таны компьютерт .txt файл татагдах болно.Шинээр үүсгэсэн дэд модыг харахын тулд энэ\nлинк\nдээр хулганы баруун товчийг дараад (Cmd+Mac дээр дарна уу) “Save\nlink ” сонгоно уу. Таны компьютерт .txt файл татагдах болно.Та хуудсан дээр тайлбарласны дагуу .txt файлыг ape багцын\nread.tree() функц ашиглан импортлох боломжтой.","code":"\nape::read.tree(\"Shigella_tree.txt\")"},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"стандартчилал","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"Стандартчилал","text":"\\[Стандартчилсан түвшин\\]-ий талаарх хуудсыг үзнэ үү. Та дараах\nкомандуудыг ашиглан интернет дээрх манай Github репозитороос өөрийн R\nsession рүү өгөгдлийг шууд ачаалах боломжтой:","code":"\n# rio багцыг суулгах/ачаалах\npacman::p_load(rio) \n\n##############\n# A улс\n##############\n# А улсын хүн ам зүйн мэдээллийг Github-аас шууд импортлох\nA_demo <- import(\"https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/standardization/country_demographics.csv\")\n\n# А улсын нас баралтын мэдээллийг Github-аас шууд импортлох\nA_deaths <- import(\"https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/standardization/deaths_countryA.csv\")\n\n##############\n# B улс\n##############\n# B улсын хүн ам зүйн мэдээллийг Github-аас шууд импортлох\nB_demo <- import(\"https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/standardization/country_demographics_2.csv\")\n\n# B улсын нас баралтын мэдээллийг Github-аас шууд импортлох\nB_deaths <- import(\"https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/standardization/deaths_countryB.csv\")\n\n\n###############\n# Лавлагаа хүн ам\n###############\n# Дэлхийн стандартчилсан хүн ам зүйн мэдээллийг Github-аас шууд импортлох\nstandard_pop_data <- import(\"https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/standardization/world_standard_population_by_sex.csv\")"},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"data_outbreak","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"Цагийн цуврал (time series) ба дэгдэлт илрүүлэлт","text":"Цагийн цуврал ба дэгдэлт илрүүлэлт хуудсыг үзнэ үү.\nБид surveillance R багцад байдаг Германд 2002-2011 онд бүртгэгдсэн\nCampylobacter-ийн тохиолдлуудыг ашигладаг. (nb. Сургалтын зорилгоор\nэнэхүү өгөгдлийн 2011 оны сүүлийн 3 сарын өгөгдлийг устгаж эх\nхувилбараас нь өөрчилсөн болно)\nГерман дахь Campylobacter өгөгдлийг татаж авахын тулд дарна уу (.xlsx)\nБид мөн Германы 2002-2011 оны цаг уурын мэдээллийг ашигладаг (температур\nнь цельсийн градус, борооны хэмжээ нь миллиметрээр). Эдгээрийг Европын\nХолбооны Коперникус хиймэл дагуулын дахин шинжилгээний өгөгдлийн сангаас\necmwfr багц ашиглан татаж авсан болно. Та эдгээрийг бүгдийг нь татаж\nаваад цагийн цувралын хуудсанд тайлбарласны дагуу stars::read_stars()\nфункцыг ашиглан импортолж болно.\n2002 оны Германы цаг агаарыг татаж авахын тулд дарна уу (.nc файл) \n2003 оны Германы цаг агаарыг татаж авахын тулд дарна уу (.nc файл) \n2004 оны Германы цаг агаарыг татаж авахын тулд дарна уу (.nc файл) \n2005 оны Германы цаг агаарыг татаж авахын тулд дарна уу (.nc файл) \n2006 оны Германы цаг агаарыг татаж авахын тулд дарна уу (.nc файл) \n2007 оны Германы цаг агаарыг татаж авахын тулд дарна уу (.nc файл) \n2008 оны Германы цаг агаарыг татаж авахын тулд дарна уу (.nc файл) \n2009 оны Германы цаг агаарыг татаж авахын тулд дарна уу (.nc файл) \n2010 оны Германы цаг агаарыг татаж авахын тулд дарна уу (.nc файл) \n2011 оны Германы цаг агаарыг татаж авахын тулд дарна уу (.nc файл) ","code":""},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"data_survey","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"Асуумж судалгааны (survey) дүн шинжилгээ","text":"Асуумж судалгааны дүн\nшинжилгээ хийх хуудасны\nхувьд бид MSF OCA асуумж судалгааны загвар дээр үндэслэн нас баралтын\nталаархи зохиомол өгөгдлийг ашигласан. Энэхүү зохиомол өгөгдлийг\n“R4Epis” төслийн хүрээнд үүсгэсэн болно.\nЗохиомол асуумж судалгааны өгөгдлийг татаж авахын тулд дарна уу (.xlsx)\n\nЗохиомол асуумж судалгааны өгөгдлийн толь бичгийг татаж авахын тулд\nдарна уу (.xlsx) \nЗохиомол асуумж судалгааны хүн амын мэдээллийг татаж авахын тулд дарна\nуу (.xlsx) ","code":""},{"path":"гарын-авлага-өгөгдлийг-татаж-авах.html","id":"data_shiny","chapter":"2 Гарын авлага, өгөгдлийг татаж авах","heading":"Shiny","text":"\\[Shiny бүхий хяналтын самбар\\] дээрх хуудас нь хумхаа өвчний өгөгдлийг\nхаруулах энгийн аппликейшн бүтээснийг харуулав.Shiny аппликейшн үүсгэдэг R файлуудыг татаж авахын тулд:Та\n\nэнд дараад Shiny аппликейшний UI болон Серверийн кодыг агуулсан app.R\nфайлыг татаж авна уу. Та\n\nэнд дараад facility_count_data.rds файлыг татаж авна уу.  Энэ\nфайл нь Shiny аппликейшний хумхаа өвчний өгөгдлийг агуулж буй. ()\nфайлын замыг зөв ажиллуулахын тулд та үүнийг “data” хавтсанд хадгалах\nхэрэгтэй байж магадгүй гэдгийг анхаарна уу.Та\n\nэнд дарж global.R файлыг татаж авна уу.  Хуудсанд тайлбарласны\nдагуу энэ файлыг аппликейшнээ нээхээс өмнө ажиллуулах шаардлагатай.Та\n\nэнд дарж global.R скриптэд ашиглагддаг plot_epicurve.R файлыг татаж авна\nуу.  () файлын замыг зөв ажиллуулахын тулд та үүнийг\n“funcs” хавтсанд хадгалах хэрэгтэй байж магадгүй гэдгийг анхаарна уу.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"r-суурь-ойлголтууд","chapter":"3 R суурь ойлголтууд","heading":"3 R суурь ойлголтууд","text":"Тавтай морилно уу!Энэхүү бүлэгт бид R-ын талаарх үндсэн ойлголтуудыг авч үзнэ. Энэ нь дэлгэрэнгүй заавар болох зорилгогүй бөгөөд танд R-ын талаар анхан шатны мэдлэгийг өгч, мөн өмнө ашиглаж байсан хүмүүст ой санамжаа сэргээхэд тустай байх болно. Сургалтын материалууд хэсэгт илүү дэлгэрэнгүй сургалтын линкүүд буй.Энэ хуудасны зарим хэсгийг R4Epis төслийн зөвшөөрлөөр бага зэрэг өөрчлөн авч ашигласан.STATA, SAS, эсвэл Excel-ээс R руу шилжих зөвлөмжийг \\[R руу шилжих\\] хуудаснаас үзнэ үү.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"яагаад-r-г-ашиглана-гэж","chapter":"3 R суурь ойлголтууд","heading":"3.1 Яагаад R-г ашиглана гэж?","text":"R төслийн вэбсайтад дурдсанчлан R бол статистикийн тооцоолол, график хийхэд зориулсан програмчлалын хэл, түүний орчин юм. R нь маш уян хатан, өргөтгөх боломжтой, хөгжил нь хэрэглэгчдээрээ удирдуулдаг программ юм.ЗардалR ашиглахад үнэгүй! Чөлөөт, нээлттэй эх сурвалжийн эргэн тойрон өндөр ёс зүйтэй байдаг.Давтагдах чадварДата менежмент, дата анализийг програмчлалын хэлээр (Excel эсвэл бусад голчлон товчлуур дээр дардаг/гараар хийдэг хэрэгслүүдтэй харьцуулахад) хийх нь давтагдах чадварыг сайжруулж, алдааг илрүүлэхэд амар болж, таны ажлын ачааллыг хөнгөвчилдөг.Хамт олонR хэрэглэгчдийн хамт олон маш том бөгөөд нэгэндээ үргэлж туслан хамтран ажилладаг. Амьдрал дээр тулгарч буй олон асуудлыг шийдвэрлэх шинэ багц, хэрэгслүүд өдөр бүр гарч, тэдгээрийг нь R хэрэглэгчид хэрэглэж үзэн байнга шалгаж байдаг. Үүний нэг жишээ болох R-Ladies нь дэлхий даяар салбартай, R хэрэглэгчдийн хамгийн том байгууллагуудын нэг бөгөөд гол зорилго нь R хэрэглэгчдийн дундах жендэрийн олон талт байдлыг хангах, дэмжих явдал юм. Таны ойролцоо ч салбар нь байдаг байж магадгүй!","code":""},{"path":"r-суурь-ойлголтууд.html","id":"гол-нэр-томъёо","chapter":"3 R суурь ойлголтууд","heading":"3.2 Гол нэр томъёо","text":"RStudio - RStudio бол R-ийг ашиглахад хялбар болгож буй хэрэглэгчийн график интерфэйс (GUI) юм. Дэлгэрэнгүйг RStudio хэсгээс уншина уу.Объектууд - Таны R-д хадгалдаг бүх зүйл - датасетүүд, хувьсагч, тосгоны нэрсийн жагсаалт, хүн амын нийт тоо, тэр ч байтугай график гэх мэт гаралтууд - нь нэр оноогдсон объект бөгөөд тэрхүү нэрийг ашиглан дараагийн командуудад дуудаж болдог. Дэлгэрэнгүйг Объектууд хэсгээс уншина уу.Функцууд - Функц нь оролтыг хүлээн авч, хувиргасан гаралтыг буцааж өгдөг кодын үйлдэл юм. Дэлгэрэнгүйг Функц хэсгээс уншина уу.Багцууд - R багц гэдэг нь функцүүдийн нэгдэл юм. Дэлгэрэнгүй мэдээллийг Багц хэсгээс уншина уу.Скриптүүд - Скрипт бол таны командуудыг агуулсан файл юм. Дэлгэрэнгүйг Скриптүүд хэсгээс уншина уу","code":""},{"path":"r-суурь-ойлголтууд.html","id":"learning","chapter":"3 R суурь ойлголтууд","heading":"3.3 Сургалтын материалууд","text":"","code":""},{"path":"r-суурь-ойлголтууд.html","id":"rstudio-доторх-материалууд","chapter":"3 R суурь ойлголтууд","heading":"RStudio доторх материалууд","text":"Тусламжийн баримт бичигR багц болон функцуудын талаархи баримт бичгийг RStudio-гийн “Help” таб дээрээс хайж болно. Энэ нь Files, Plots болон Packages бүхий хэсэгт байдаг (ихэвчлэн баруун доод хэсэгт). Хурдан хандая гэвэл та R консол дотор асуултын тэмдгийн дараа тухайн багц эсвэл функцын нэрийг бичсэнээр хамааралтай Help хуудсыг нээж болно. Ингэхдээ хаалтгүйгээр бичнэ үү.Жишээлбэл: ?filter эсвэл ?diagrammeR.Интерактив хичээлүүдRStudio дотор R-ийг интерактив байдлаар сурах хэд хэдэн арга байдаг.RStudio өөрөө learnr хэмээх R багцаар ажилладаг Tutorial хэсгийг санал болгодог. Ердөө л энэ багцыг суулгаад RStudio-ийн баруун дээд хэсэгт байрлах “Tutorial” табыг ашиглан хичээлээ нээнэ үү (Environment болон History табуудыг агуулсан хэсэг).R багц swirlнь R консол дотор ажиллаж болох интерактив курсуудыг санал болгодог. Энэ багцыг суулгаад ачаалсны дараа R консол дээр swirl() (хоосон хаалттай) командыг ажиллуулна уу. Таны консол дээр асуулт гарч ирэх болно. Консол дээрээ бичээд хариулна уу. Ийм байдлаар таны сонгосон хичээлийг удирдан явуулах болно.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"cheatsheets","chapter":"3 R суурь ойлголтууд","heading":"Cheatsheets","text":"RStudio вэбсайт дээр олон PDF “cheatsheets” байдаг, жишээлбэл:Факторын forcats багцФакторын forcats багцОгноо, цагийн lubridate багцОгноо, цагийн lubridate багцСтрингүүдийн stringr багцСтрингүүдийн stringr багцДавтагдах үйлдлүүдэд зориулсан purrr багцДавтагдах үйлдлүүдэд зориулсан purrr багцДата импортлохДата импортлохdplyr багцын дата хувиргах cheatsheetdplyr багцын дата хувиргах cheatsheetR Markdown (PDF, Word, Powerpoint гэх мэт баримт бичиг үүсгэхийн тулд)R Markdown (PDF, Word, Powerpoint гэх мэт баримт бичиг үүсгэхийн тулд)Shiny (интерактив вэб апп бүтээх)Shiny (интерактив вэб апп бүтээх)Дата зураглалын ggplot2 багцДата зураглалын ggplot2 багцКартографи (GIS)Картографи (GIS)leaflet багц (интерактив газрын зураг)leaflet багц (интерактив газрын зураг)Python-ийг R-тай хамт ашиглах (reticulate багц)Python-ийг R-тай хамт ашиглах (reticulate багц)Энэ бол Excel хэрэглэгчдэд зориулагдсан онлайн материал.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"twitter","chapter":"3 R суурь ойлголтууд","heading":"Twitter","text":"R нь маш идэвхтэй жиргээчдийн хамт олонтой бөгөөд эндээс та R-тай холбоотой төрөл бүрийн зөвлөгөө, товчлол, мэдээ авч болно. Эдгээр хаягуудыг дагана уу:Биднийг дагаарай! @epiRhandbookӨдөрт нэг R функц @rfuntionaday хэмээх энэ хаяг бол маш сайн мэдээлэлтэйДата шинжлэх ухаанд R-ыг @rstats4dsRStudio @RStudioRStudio зөвлөгөөнүүд @rstudiotipsR-Bloggers @RbloggersR-ladies @RLadiesGlobalHadley Wickham @hadleywickhamМөн:#epitwitter болон #rstats","code":""},{"path":"r-суурь-ойлголтууд.html","id":"үнэгүй-онлайн-материалууд","chapter":"3 R суурь ойлголтууд","heading":"Үнэгүй онлайн материалууд","text":"Hadley Wickham, Garrett Grolemund нарын бичсэн Дата шинжлэх ухаанд R-ыг ном нь энэ чиглэлийн хамгийн гол сурах бичиг юм.R4Epis төслийн вэбсайт нь “MSF-ийн яаралтай тусламжийн нөхцөлд тохиолддог дэгдэлтийн түгээмэл төрлүүд болон хүн амд суурилсан асуумж судалгааны дата цэвэрлэх, анализ хийх, тайлан гаргахад зориулсан стандартчилагдсан хэрэгслүүдийг боловсруулах” зорилготой юм. Та эндээс R-ын анхан шатны сургалтын материалууд, дэгдэлт, асуумж судалгааны RMarkdown тайлангийн загвар болон тэдгээрийг ашиглаж эхлэхэд туслах хичээлүүдийг олж болно.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"англи-хэлээс-бусад-хэл","chapter":"3 R суурь ойлголтууд","heading":"Англи хэлээс бусад хэл","text":"Materiales de RStudio en EspañolIntroduction à R et au tidyverse (Francais)","code":""},{"path":"r-суурь-ойлголтууд.html","id":"суулгалт","chapter":"3 R суурь ойлголтууд","heading":"3.4 Суулгалт","text":"","code":""},{"path":"r-суурь-ойлголтууд.html","id":"r-болон-rstudio","chapter":"3 R суурь ойлголтууд","heading":"R болон RStudio","text":"R хэрхэн суулгах вэhttps://www.r-project.org/ вэбсайт руу орж өөрийн компьютерт тохирсон R-ын хамгийн сүүлийн хувилбарыг татаж авна уу.RStudio хэрхэн суулгах вэhttps://rstudio.com/products/rstudio/download/ вэбсайт руу орж өөрийн компьютерт тохирсон RStudio-гийн хамгийн сүүлийн үеийн үнэгүй хувилбарыг татаж авна уу.Зөвшөөрлүүд\nТа R ба RStudio-г өөрийн унших (read), бичих (write) зөвшөөрөлтэй драйвт суулгах ёстойг анхаарна уу. Тэгэхгүй бол таны R багцуудыг суулгах явцад (түгээмэл тохиолддог) сөргөөр нөлөөлөх болно. Хэрэв танд асуудал тулгарвал RStudio нээх лого дээр хулганы баруун товчийг дараад “Run administrator” сонгон нээхийг оролдоно уу. Бусад зөвлөмжийг \\[Сүлжээний драйв дээрх R\\] хуудаснаас олж болно.R болон RStudio-г хэрхэн шинэчлэх вэR-ийг эхлүүлэх үед консол дээр таны R программын хувилбар харагддаг. Мөн та sessionInfo() функцийг ажиллуулан харж болно.R-г шинэчлэхийн тулд дээр дурдсан вэбсайт руу орж R-г дахин суулгаарай. Өөрөөр installr багцын (Windows дээр) installr::updateR() функцыг ажиллуулснаар шинэчилж болно. Энэ функц нь танд хамгийн сүүлийн үеийн R хувилбарыг татаж авах, багцуудаа шинэ R хувилбар болгон шинэчлэхэд туслах харилцах цонхыг нээх болно. Дэлгэрэнгүй мэдээллийг installr баримт бичгээс олж болно.Ингэж суулгасны дараа R-ын хуучин хувилбар таны компьютер дээр байсаар байх болно гэдгийг анхаарна уу. Та RStudio дээрх “Tools” -> “Global Options” дээр дарж R хувилбарыг сонгож R-ын хуучин хувилбарыг (хуучин “суулгац”) түр ажиллуулж болно. Энэ үйлдэл нь та R-ын хамгийн сүүлийн хувилбарт зориулан шинэчлэгдээгүй байгаа багцыг ашиглах шаардлагатай үед хэрэг болдог.RStudio-г шинэчлэхийн тулд та дээрх вэбсайт руу орж RStudio-г дахин татаж авах боломжтой. Өөр нэг сонголт нь RStudio дотор “Help” -> “Check Updates” дээр дарах бөгөөд гэвч энэ нь хамгийн сүүлийн үеийн шинэчлэлтийг харуулахгүй байж магадгүй.Энэхүү гарын авлагыг бүтээхэд R, RStudio эсвэл багцуудын аль хувилбарыг ашигласан болохыг харахын тулд \\[Редакцийн болон техникийн тэмдэглэл\\] хуудсыг үзнэ үү.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"суулгах-шаардлагатай-болж-магадгүй-бусад-програм-хангамж","chapter":"3 R суурь ойлголтууд","heading":"Суулгах шаардлагатай болж магадгүй бусад програм хангамж","text":"TinyTeX (RMarkdown-ыг PDF болгон нэгтгэхэд зориулсан)Pandoc (RMarkdown-ыг нэгтгэхэд зориулсан)RTools (R-ын багцуудыг угсрахад зориулсан)phantomjs (халдварын гинжин хэлхээ гэх мэт хөдөлгөөнт сүлжээнүүдийн хөдөлгөөнгүй зургийг хадгалахад зориулсан)","code":""},{"path":"r-суурь-ойлголтууд.html","id":"tinytex","chapter":"3 R суурь ойлголтууд","heading":"TinyTex","text":"TinyTex бол LaTeX-ийн custom түгээлт бөгөөд R-аас PDF үүсгэхэд хэрэгтэй байдаг. Дэлгэрэнгүй мэдээллийг https://yihui.org/tinytex/ харна уу.R-аас TinyTex-ийг суулгахын тулд:","code":"\ninstall.packages('tinytex')\ntinytex::install_tinytex()\n# TinyTeX-ийг устгахын тулд tinytex::uninstall_tinytex() ажиллуулна"},{"path":"r-суурь-ойлголтууд.html","id":"pandoc","chapter":"3 R суурь ойлголтууд","heading":"Pandoc","text":"Pandoc бол баримт бичиг хөрвүүлэгч, R-аас тусдаа програм хангамж юм. Энэ нь RStudio-той цуг ирдэг тул тусад нь татаж авах шаардлагагүй. Pandoc нь Rmarkdown-ыг .pdf гэх мэт формат руу хөрвүүлэх, комплекс үйлдлүүд хийхэд тусалдаг.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"rtools","chapter":"3 R суурь ойлголтууд","heading":"RTools","text":"RTools бол R-д зориулсан багц үүсгэх програм хангамжийн цуглуулга юм.Энэ вэбсайтаас суулгана: https://cran.r-project.org/bin/windows/Rtools/","code":""},{"path":"r-суурь-ойлголтууд.html","id":"phantomjs","chapter":"3 R суурь ойлголтууд","heading":"phantomjs","text":"Энэ нь ихэвчлэн вэб хуудсуудын “screenshot” авахад ашиглагддаг. Жишээлбэл, та epicontacts багц ашиглан халдварын гинжин хэлхээ хийх үед интерактив, динамик HTML файлыг гаргадаг. Хэрэв та үүнээс статик зураг авахыг хүсч байвал энэ үйл явцыг автоматжуулахын тулд webshotбагцыг ашиглаж болно. Үүний тулд “phantomjs” програм шаардлагатай. Та webshot багцаар дамжуулан webshot::install_phantomjs() командын тусламжтайгаар phantomjs-ийг суулгаж болно.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"rstudio","chapter":"3 R суурь ойлголтууд","heading":"3.5 RStudio","text":"","code":""},{"path":"r-суурь-ойлголтууд.html","id":"rstudio-чиг-баримжаа","chapter":"3 R суурь ойлголтууд","heading":"RStudio чиг баримжаа","text":"Эхлээд RStudio-г нээ. Тэдний лого нь хоорондоо маш төстэй харагддаг тул та R биш RStudio-г нээж байгаа эсэхээ шалгаарай.RStudio-ийг ажиллуулахын тулд та компьютер дээрээ R суулгасан байх ёстой (суулгах зааврыг дээрээс үзнэ үү).RStudio нь R ашиглахыг хялбарчилж буй интерфэйс юм (GUI). Та R-ыг машины хөдөлгүүр, гол ажлыг нь хийж байгаа гэж, харин RStudio-г тухайн хөдөлгүүрийг урагшлуулахад тусалдаг машины их бие (суудал, дагалдах хэрэгсэл гэх мэт) гэж ойлгож болно! Та RStudio хэрэглэгчийн интерфэйсийн бүрэн cheatsheet-ийг (PDF) эндээс үзэх боломжтой.Хамгийн эхний байдлаар RStudio нь дөрвөн тэгш өнцөгт самбарыг харуулдаг.ЗӨВЛӨГӨӨ: Хэрэв таны RStudio зүүн талдаа ганцхан дэлгэцтэй байгаа бол энэ нь та скриптүүд хараахан нээгээгүй байгаатай холбоотой юм.Үүсвэр самбар (Source pane)\nЭхний байдлаар зүүн дээд буланд байдаг энэ самбар нь скриптүүдээ засварлах, ажиллуулах, хадгалах зай юм. Скриптүүд нь таны ажиллуулахыг хүссэн командуудыг агуулдаг. Энэ самбар нь мөн датасетүүд (датафрэйм) харуулах боломжтой.Stata хэрэглэгчдийн хувьд энэ самбар нь таны -file болон Data Editor цонхтой төстэй юм.R консол самбар (Console pane)RStudio дотор R консол нь зүүн эсвэл зүүн доод хэсэгт эхний байдлаар байрладаг бөгөөд R-ын “хөдөлгүүр”-ийн гэр юм. Энэ нь командуудын ажилладаг хэсэг бөгөөд график бус гаралт, алдаа/анхааруулах мессеж гарч ирдэг. Та R консолд командуудыг шууд оруулж ажиллуулж болох боловч скриптээс командыг ажиллуулахад хадгалагдаж үлддэг шиг эдгээр командууд хадгалагддаггүй гэдгийг ойлгоорой.Хэрэв та Stata мэддэг бол R консол нь Command Window болон Results Window-тэй адил юм.Орчны самбар (Environment Pane)\nПрограм нээгдэх үед баруун дээд буланд байдаг энэ самбарыг ихэвчлэн тухайн ажиллаж буй үеийн R-ын орчинд буй объектуудын товч мэдээллийг харахад ашигладаг. Эдгээр объектууд нь импортолсон, өөрчлөгдсөн эсвэл үүсгэсэн датасетүүд, таны тодорхойлсон параметрүүд (жишээлбэл, тухайн анализад зориулсан тодорхой эпи долоо хоног), эсвэл анализ хийх үед тодорхойлсон векторууд эсвэл листүүд (жишээлбэл, бүс нутгийн нэрс) байж болно. Та датафрэймийн нэрний хажууд байгаа сумыг дарж хувьсагчдыг нь харах боломжтой.STATA-д энэ нь Variables Manager цонхтой хамгийн төстэй юм.Энэ самбарт мөн өмнө нь ажиллуулсан командуудыг харах боломжтой History таб орно. Мөн та learnr багцыг суулгасан бол интерактив R хичээл хийх боломжтой “Tutorial” таб энд байдаг. Эдгээрээс гадна энэхүү самбарт гадаад холболт хийхэд зориулсан “Connections” таб, Github-тай интерфэйс хийвэл гарч ирдэг “Git” хэмээх табуудыг агуулагддаг.Plots, Viewer, Packages, болон Help самбарБаруун доод хэсэгт хэд хэдэн чухал табууд байдаг. Газрын зураг зэргийг багтаасан түгээмэл график дүрслэлүүдийг Plot таб дээр харуулна. Интерактив эсвэл HTML гаралтууд нь Viewer табд гарч ирнэ. Help таб нь баримт бичиг, тусламжийн файлуудыг харуулдаг. Файлын самбар нь файл нээх эсвэл устгахад зориулагдсан хөтөч юм. Packages таб нь танд R багцыг харах, суулгах, шинэчлэх, устгах, ачаалах/буулгах, танд байгаа багцын хувилбарыг харах боломжийг олгодог. Багцын талаар илүү ихийг мэдэхийг хүсвэл доорх багц хэсгээс үзнэ үү.Энэ самбар нь Stata-гийн Plots Manager болон Project Manager цонхнуудтай төстэй мэдээлэл агуулдаг.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"rstudio-тохируулгууд","chapter":"3 R суурь ойлголтууд","heading":"RStudio тохируулгууд","text":"RStudio-ийн тохиргоо болон харагдах байдлыг Tools цэснээс Global Options-ийг сонгон өөрчилнө үү. Тэнд та харагдах байдал/дэвсгэр өнгө зэрэг үндсэн тохиргоонуудыг өөрчилж болно.Дахин эхлүүлэх (Restart)Хэрэв таны R гацвал Session цэс рүү ороод “Restart R” дээр дарж R-г дахин эхлүүлж болно. Энэ нь RStudio-г бүхэлд нь хааж, нээхээс зайлсхийдэг. Үүнийг хийснээр таны R орчинд байгаа бүх зүйл устах болно.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"гарын-товчлолууд-keyboard-shortcuts","chapter":"3 R суурь ойлголтууд","heading":"Гарын товчлолууд (Keyboard shortcuts)","text":"Зарим тун хэрэгтэй гарын товчлолуудыг доор харуулав. Энэхүү RStudio хэрэглэгчийн интерфэйсийн cheatsheet-ийн хоёр дахь хуудаснаас Windows, Mac, Linux-ийн бүх гарын товчлолыг үзнэ үү.ЗӨВЛӨГӨӨ: RStudio-ийн автоматаар дүүргэх үйлдлийг ашиглахын тулд бичихдээ Tab товчлуураа ашиглана уу. Ингэснээр функцын нэрийг буруу бичихээс урьдчилан сэргийлэх боломжтой юм. Бичлэгийн дундаа Tab товчийг дарснаар одоог хүртэл бичсэн байгаа зүйл дээр үндэслэн байж болох боломжит функцууд болон объектуудын жагсаалтыг гаргана.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"functions","chapter":"3 R суурь ойлголтууд","heading":"3.6 Функцууд","text":"Функцууд нь R-ыг ашиглах гол цөм болдог. Функцын тусламжтайгаар та төрөл бүрийн даалгавар, үйлдлүүдийг гүйцэтгэх боломжтой болж буй юм. Нэлээд олон функцууд R-тай хамт суулгагдан ирдэг бөгөөд бусад олон функцуудыг багц хэлбэрээр татаж авах боломжтойгоос (багцууд хэсэгт тайлбарласан) гадна та өөрийн хүссэн функцээ өөрөө бичиж болно!Энэхүү функцийн талаархи суурь ойлголтын хэсэгт дараах зүйлийг тайлбарласан болно:Функц гэж юу вэ, тэд хэрхэн ажилладаг талаарФункц гэж юу вэ, тэд хэрхэн ажилладаг талаарФункцын аргументууд гэж юу болох талаарФункцын аргументууд гэж юу болох талаарТодорхой функцийг ойлгоход хэрхэн тусламж авах талаарТодорхой функцийг ойлгоход хэрхэн тусламж авах талаарСинтаксийн талаархи товч тэмдэглэл: Энэхүү гарын авлагад функцуудыг код-текст маягаар нээлттэй хаалт бүхий бичсэн болно, жишээ нь: filter(). Багцууд хэсэгт тайлбарласны дагуу функцуудыг багцууд дотор татаж авдаг. Энэхүү гарын авлагад багцын нэрийг dplyr гэж байгаа шиг тодоор (bold) бичсэн. Заримдаа жишээ код дээр та функцын нэрийг багцын нэртэй хоёр цэгээр (::) буюу ийм байдлаар dplyr::filter() холбон бичсэн байхыг харж болно. Энэхүү холболтын зорилгыг багцууд хэсэгт тайлбарласан.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"энгийн-функцууд","chapter":"3 R суурь ойлголтууд","heading":"Энгийн функцууд","text":"Функц нь оролтыг хүлээн авч, тэдгээр оролтон дээр ямар нэгэн үйлдэл хийж, гаралт гаргадаг машинтай адил юм. Ямар гаралт байх нь тухайн функцээс хамаарна.Функцууд нь ихэвчлэн функцын хаалтанд байрлуулсан зарим объект дээр ажилладаг. Жишээлбэл, sqrt() функц нь тооны квадрат язгуурыг тооцоолно:Мөн функцэд оруулж буй объект нь датасетийн багана байж болно (бүх төрлийн объектуудын талаар дэлгэрэнгүйг Объектууд хэсгээс үзнэ үү). R нь олон тооны датасет хадгалах боломжтой тул та датасет болон баганыг хоёуланг нь зааж өгөх хэрэгтэй. Үүнийг хийх нэг арга бол $ тэмдэглэгээг ашиглан датасетийн нэр болон баганын нэрийг (dataset$column) холбох юм. Доорх жишээн дээр linelist хэмээх датасетийн age хэмээх тоон баганыг summary() функцэд оруулснаар тухайн баганы тоон болон дутуу утгуудын хураангуй мэдээлэл гарч байна.ТЭМДЭГЛЭЛ: Хөшигний цаана функц нь хэрэглэгчдэд зориулж нэг хялбар командад багтаасан комплекс нэмэлт кодуудын бүрдэл байдаг.","code":"\nsqrt(49)## [1] 7\n# 'linelist' датасетийн 'age' баганы хураангуй статистикүүдийг хэвлэх \nsummary(linelist$age)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n##    0.00    6.00   13.00   16.07   23.00   84.00      86"},{"path":"r-суурь-ойлголтууд.html","id":"олон-аргументтай-функцууд","chapter":"3 R суурь ойлголтууд","heading":"Олон аргументтай функцууд","text":"Функцууд нь ихэвчлэн таслалаар хоорондоо тусгаарлагдсан, функцын хаалтан дотор байрлах аргумент гэж нэрлэгддэг хэд хэдэн оролтыг шаарддаг.Зарим аргумент функцыг ажиллуулахын тулд заавал шаардлагатай байдаг бол зарим нь заавал байх шаардлагагүйЗарим аргумент функцыг ажиллуулахын тулд заавал шаардлагатай байдаг бол зарим нь заавал байх шаардлагагүйЗаавал байх шаардлагагүй аргументууд нь анхдагч утгатай байдагЗаавал байх шаардлагагүй аргументууд нь анхдагч утгатай байдагАргументууд нь тэмдэгт (character), тоон, логик (ҮНЭН/ХУДАЛ) болон бусад оролтыг авч болноАргументууд нь тэмдэгт (character), тоон, логик (ҮНЭН/ХУДАЛ) болон бусад оролтыг авч болноЭнд ердийн функцийн жишээ болгон oven_bake() гэсэн зохиомол функц байна. Энэ функц нь оролтын объектыг (жишээлбэл, датасет эсвэл энэ жишээнд байгаа шиг “dough”) авч, нэмэлт аргументуудаар тодорхойлсон (minutes = ба temperature =) үйлдлүүдийг гүйцэтгэж байна. Гаралтыг консол дээр шууд хэвлэх эсвэл оноох операторыг (<-) ашиглан объект болгон хадгалах боломжтой .Илүү бодитой жишээ дурдвал доорхи age_pyramid() команд нь тодорхой насны бүлгүүд болон gender гэх мэт хоёртын баганууд дээр үндэслэн насны пирамидын зургийг гаргадаг. Энэхүү функцэд хаалтан дотор нь таслалаар тусгаарлагдсан гурван аргумент өгөгдсөн байна. Аргументэд өгсөн утгууд нь linelist-ийг ашиглах датафрэймээр, age_cat5-ийг тоолох баганаар, gender-ийг пирамидыг өнгөөр хуваахад ашиглах хоёртын баганаар ашиглаж байна.Дээрх командыг аргумент бүр шинэ мөрөн дээр байх замаар урт болгон доорхтой адилаар бичиж болно. Ингэж кодоо бичих нь уншихад илүү хялбар, хэсэг тус бүрийг тайлбарлахын тулд #-тэй “тайлбар” бичихэд илүү хялбар болгодог (дэлгэрэнгүй тайлбар хийж явах нь сайн практик!). Энэхүү урт командыг ажиллуулахын тулд та тушаалыг бүхэлд нь тодруулан “Run” дээр дарах эсвэл курсороо эхний мөрөнд байрлуулаад Ctrl, Enter товчлууруудыг нэгэн зэрэг дарж болно.Аргументыг тодорхой дарааллаар бичсэн тохиолдолд (функцын баримт бичигт заасны дагуу) тухайн аргументын эхний хагасыг (жишээ нь, data =) бичих шаардлагагүй. Доорх код нь дээрхтэй яг ижил пирамид үүсгэдэг, учир нь энэхүү функц нь датафрэйм, age_group хувьсагч, split_by хувьсагчийн аргументуудыг яг ийм дараалалтайгаар хүлээж байдаг.Илүү комплекс age_pyramid() команд нь заавал шаардлагагүй дараахь аргументуудыг агуулж болно:Тооны оронд пропорцыг харуулах (анхдагч утга нь FALSE үед proportional = TRUE гэж өөрчилнө)Тооны оронд пропорцыг харуулах (анхдагч утга нь FALSE үед proportional = TRUE гэж өөрчилнө)Ашиглах хоёр өнгийг тодорхойлох (pal = гэдэг нь “palette” гэсэн үгийн товчлол бөгөөд хоёр өнгөний нэр бүхий вектороор хангагдсан байна. c() функц хэрхэн вектор үүсгэдэгийг объектууд хуудаснаас үзнэ үү)Ашиглах хоёр өнгийг тодорхойлох (pal = гэдэг нь “palette” гэсэн үгийн товчлол бөгөөд хоёр өнгөний нэр бүхий вектороор хангагдсан байна. c() функц хэрхэн вектор үүсгэдэгийг объектууд хуудаснаас үзнэ үү)ТЭМДЭГЛЭЛ: Аргументийн хоёр хэсгийг хоёуланг нь зааж өгсөн (жишээ нь proportional = TRUE) үед тухайн аргумент дарааллын хувьд хаана байрлах нь хамаагүй болно.","code":"\n# насны пирамид зурах\nage_pyramid(data = linelist, age_group = \"age_cat5\", split_by = \"gender\")\n# насны пирамид зурах\nage_pyramid(\n  data = linelist,        # тохиолдлын linelist хэрэглэх\n  age_group = \"age_cat5\", # насны бүлгийн баганыг зааж өгөх\n  split_by = \"gender\"     # 2 талтай пирамид зурахын тулд хүйсийн баганыг ашиглах\n  )\n# Энэ команд нь дээрхтэй яг ижил график үүсгэх болно\nage_pyramid(linelist, \"age_cat5\", \"gender\")\nage_pyramid(\n  linelist,                    # тохиолдлын linelist хэрэглэх\n  \"age_cat5\",                  # насны бүлгийн багана\n  \"gender\",                    # хүйсээр хуваах\n  proportional = TRUE,         # тооны оронд хувь хэрэглэх\n  pal = c(\"orange\", \"purple\")  # өнгөнүүд\n  )"},{"path":"r-суурь-ойлголтууд.html","id":"функц-бичих","chapter":"3 R суурь ойлголтууд","heading":"Функц бичих","text":"R бол функцэд чиглэсэн хэл тул та өөрийн функцийг бичих мэдлэгийг эзэмшсэн байх ёстой. Өөрөө функц бичих нь хэд хэдэн давуу талтай:Модульчлагдсан програмчлалыг хөнгөвчлөх - кодыг бие даасан, удирдах боломжтой хэсгүүдэд хуваадагМодульчлагдсан програмчлалыг хөнгөвчлөх - кодыг бие даасан, удирдах боломжтой хэсгүүдэд хуваадагАлдаа гаргах магадлал өндөртэй байдаг давтагдсан copy, paste хийхийг орлохАлдаа гаргах магадлал өндөртэй байдаг давтагдсан copy, paste хийхийг орлохКодын хэсгүүдэд мартагдахааргүй нэр өгөхКодын хэсгүүдэд мартагдахааргүй нэр өгөхФункцийг хэрхэн бичих талаар Функц бичих хуудсан дээр дэлгэрэнгүй авч үзсэн болно.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"packages","chapter":"3 R суурь ойлголтууд","heading":"3.7 Багцууд","text":"Багцууд нь функцуудээс бүрддэг.R багц гэдэг нь урьдчилан тодорхойлсон функцуудыг агуулсан код, баримт бичгийн нэгдэл юм. R-ын хэрэглэгчид тодорхой асуудлуудад зориулагдсан багцуудыг үргэлж хөгжүүлж байдаг бөгөөд таны ажилд тусалж чадах багц байгаа нь ч эргэлзээгүй! Та R ашиглах явцдаа хэдэн зуун багцыг суулгаж ашиглах болно.Анх R суулгахад түгээмэл, энгийн даалгавруудыг гүйцэтгэх чадвартай “base” багцууд болон функцууд хамт ирдэг. Гэвч олон R хэрэглэгчид өөрсдийн тусгай функцууд зохион багц болгосноор бусад хэрэглэгчид хэрэглэн функцуудын үйл ажиллагааг шалгах боломжтой болдог. Энэхүү гарын авлагад багцын нэрийг тодоор бичсэн. R -ын бага зэрэг төвөгтэй талуудын нэг нь тодорхой даалгаврыг биелүүлэхийн тулд олон функц, багцуудаас сонгох явдал байдаг.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"суулгах-ачаалах","chapter":"3 R суурь ойлголтууд","heading":"Суулгах, ачаалах","text":"Интернетээс компьютер дээрээ татаж авдаг (“суулгадаг”) багцуудад функцууд агуулагдсан байдаг. Багцыг татаж авсны дараа таны “library”-д хадгалагдах болно. Дараа нь та багцаа “ачаалах” замаар тухайн багцын агуулж буй функцыг R ашиглах үедээ хэрэглэх боломжтой.Та R-г өөрийн хувийн номын сан гэж бод: Та багц татаж авахад таны номын сан тухайн багцын функцүүд бүхий шинэ номтой болж байна гэсэн үг, улмаар та тухайн номны функц ашиглахыг хүсэх болгондоо тэр номыг номын сангаасаа зээлэх (“ачаалах”) ёстой.Дүгнээд хэлэхэд: R багцад байгаа функцийг ашиглахын тулд 2 алхамыг хэрэгжүүлэх ёстой:Багцыг (нэг удаа) суулгасан (installed) байх ёстойБагцыг (нэг удаа) суулгасан (installed) байх ёстойБагцыг ачаалах (load) ёстой (R ашиглах бүртээ)Багцыг ачаалах (load) ёстой (R ашиглах бүртээ)","code":""},{"path":"r-суурь-ойлголтууд.html","id":"таны-номын-сан-library","chapter":"3 R суурь ойлголтууд","heading":"Таны номын сан (library)","text":"Таны “номын сан” нь үнэндээ таны компьютер дээр суулгагдсан багц бүрийн хавтсыг агуулсан хавтас юм. R таны компьютерт хаана суусан болохыг олж мэдээд “win-library” нэртэй хавтас хайж олоорой. Жишээ нь: R\\win-library\\4.0 (4.0 бол R-ын хувилбар юм. Таны татаж авсан R-ын хувилбар бүр өөрийн номын сантай).Та .libPaths() (хоосон хаалттай) функцыг R консол дээр ажиллуулснаар таны номын сангийн файлын байршлыг харах боломжтой. Ялангуяа \\[сүлжээний хөтчүүд дээр R\\]-тай ажиллахад энэ нь онцгой ач холбогдолтой.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"cran-аас-суулгах","chapter":"3 R суурь ойлголтууд","heading":"CRAN-аас суулгах","text":"Ихэнх тохиолдолд R хэрэглэгчид CRAN-аас багц татаж авдаг. CRAN (Comprehensive R Archive Network - R-ын цогц архивын сүлжээ) нь R хэрэглэгчдийн нийтэлсэн R багцын олон нийтийн, онлайн агуулах юм.CRAN-аас багц татаж авахдаа вирус, аюулгүй байдлын талаар санаа зовж байна уу? Энэ сэдвээр энэ нийтлэлийг уншина уу.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"хэрхэн-суулгаж-ачаалах-вэ","chapter":"3 R суурь ойлголтууд","heading":"Хэрхэн суулгаж, ачаалах вэ?","text":"Энэхүү гарын авлагад бид pacman багцыг ашиглахыг санал болгож байна (“package manager” гэсэн үгийн товчлол). Энэхүү багц нь хэрэглэхэд хялбар p_load() хэмээх функцтэй бөгөөд энэхүү функц нь шаардлагатай бол багцыг суулгаж, одоогийн R сесст ачаалдаг.Синтакс нь маш энгийн. Хэрэглэх багцуудын нэрийг таслалаар тусгаарлан p_load() функцын хаалтанд жагсаан бичнэ. Доорх команд нь rio, tidyverse болон багцуудыг хараахан суулгаагүй байвал суулгаж, ашиглахаар ачаалах болно. Ингэснээр p_load() ашиглах арга нь скриптээ бусадтай хуваалцахыг хялбар, тодорхой болгодог. Багцын нэрүүдийн үсгийн том, жижгийн хэмжээ чухал гэдгийг анхаарна уу.Бид функцийн нэр (p_load())-ийн өмнө багцын нэрийг (pacman) хоёр цэгээр :: холбон бичдэг pacman::p_load() синтаксыг ашигласан болохыг анхаарна уу. Энэ синтаксыг ашигласнаар pacman багцыг (өмнө нь суулгасан үед) шууд ачаалж байгаа тул амар байдаг.Та мөн base R-ын алтернатив функцуудыг түгээмэл харах болно. Багц суулгах base R функц нь install.packages() юм. Суулгах багцын нэрийг хаалтнд ишлэл доторбичих ёстой. Хэрэв та нэг командаар олон багц суулгахыг хүсвэл тэдгээрийг c() тэмдэгтийн вектор дотор жагсаан бичнэ.Тэмдэглэл: энэ команд нь багцыг суулгадаг боловч одоогийн сешн дээр ашиглахаар ачаалдаггүй.Мөн point--click замаар багц суулгая гэвэл RStudio-ийн “Packages” таб дээр очоод “Install” дээр дарж хүссэн багцын нэрийг хайж олон суулгаж болдог.Суулгасны дараа багцыг ашиглахаар ачаалах base R функц нь library() юм. Энэ функц нь нэг удаад зөвхөн нэг багцыг ачаалах боломжтой (p_load() ашиглах өөр нэг шалтгаан). Та багцын нэрийг ишлэлтэй эсвэл ишлэлгүйгээр өгөх боломжтой.Багц суулгасан ба/эсвэл ачаалагдсан эсэхийг шалгахын тулд RStudio дахь Packages табыг үзэх боломжтой. Хэрэв багцыг суулгасан бол хувилбарын дугаараар тэнд харуулна. Хэрэв багцын өмнөх хайрцаг тэмдэглэгдсэн байвал тухайн багц нь одоогийн сешнд ачаалагдсан байна гэсэн үг.Github-аас суулгахЗарим тохиолдолд CRAN-д хараахан байхгүй байгаа багцыг суулгах шаардлагатай болдог. Эсвэл тодорхой багц CRAN дээр байгаа боловч тэрхүү илүү тогтвортой CRAN дээрх хувилбарт хараахан орж ирээгүй байгаа шинэ боломжуудтай хөгжлийн хувилбарыг хэрэглэх шаардлага гарч магад юм. Эдгээр нь ихэвчлэн github.com вэбсайт дээр олон нийтэд нээлттэй, үнэгүй кодын “репозитор”-д байршиж байдаг. Github-ын талаар дэлгэрэнгүйг гарын авлагын \\[Хувилбарын хяналт ба Git, Github ашиглан хамтран ажиллах\\] хуудаснаас уншина уу.Github-аас R багц татаж авахын тулд та pacman багцын p_load_gh() функцийг ашиглаж болох бөгөөд энэ функц нь шаардлагатай бол багцыг суулгаж, одоогийн R сешнд ашиглах боломжтой болгон ачаалах болно. Өөрөөр remotes эсвэл devtools багцыг ашиглан Github-аас багц суулгах боломжтой. pacman багцын бүх функцын талаар багцын баримт бичгээс уншина уу.Github-аас багц суулгахын тулд та дараах мэдээлэлтэй байх шаардлагатай:Репозитор эзэмшигчийн Github IDРепозитор эзэмшигчийн Github IDБагцыг агуулсан репозиторын нэрБагцыг агуулсан репозиторын нэр(заавал биш) Татаж авахыг хүсч буй “салбар”-ын нэр (хөгжлийн тусгай хувилбар)(заавал биш) Татаж авахыг хүсч буй “салбар”-ын нэр (хөгжлийн тусгай хувилбар)Доорх жишээнүүдэд ишлэл дэх эхний үг бол репозитор эзэмшигчийн Github ID бөгөөд ташуу зураасны дараа репозиторын нэр (багцын нэр) байгаа болно.Хэрэв та үндсэн салбараас өөр “салбар” (хувилбар) суулгахыг хүсвэл репозиторын нэрний ард “@” тэмдгийн дараа салбарын нэрийг нэмнэ үү.Хэрэв Github хувилбар болон таны компьютер дээрх хувилбаруудын хооронд ялгаа байхгүй бол ямар ч үйлдэл явагдахгүй. Та p_load_current_gh() функцыг update = TRUE аргументтэй ашиглан “хүчээр” дахин суулгаж болно. pacman тухай нэмэлтээр энэхүү онлайн винетээс уншина уу.ZIP эсвэл TAR файлаас суулгахТа URL ашиглан багцыг суулгаж болно:Эсвэл үүнийг зип файл хэлбэрээр компьютер дээрээ татаж аваад:Сонголт 1: remotes багцын install_local() функц ашигланСонголт 2: base R-ын install.packages() ашиглан, type = \"source\", repos = NULL хэмээн зааж файлын байршлыг ZIP файлд өгнө.","code":"\n# Хэрэглэх багцуудыг (хэрэв шаардлагатай бол) суулгаад ачаалах\npacman::p_load(rio, tidyverse, here)\n# base R ашиглан нэг багц суулгах\ninstall.packages(\"tidyverse\")\n\n# base R ашиглан олон багц суулгах\ninstall.packages(c(\"tidyverse\", \"rio\", \"here\"))\n# base R ашиглан багц ачаалах\nlibrary(tidyverse)\nlibrary(rio)\nlibrary(here)\n# epicontacts багцыг Github репозитороос нь суулгах/ачаалах\np_load_gh(\"reconhub/epicontacts\")\n# epicontacts багцын \"timeline\" салбарыг Github-аас суулгах/ачаалах\np_load_gh(\"reconhub/epicontacts@timeline\")\npackageurl <- \"https://cran.r-project.org/src/contrib/Archive/dsr/dsr_0.2.2.tar.gz\"\ninstall.packages(packageurl, repos=NULL, type=\"source\")\nremotes::install_local(\"~/Downloads/dplyr-master.zip\")\ninstall.packages(\"~/Downloads/dplyr-master.zip\", repos = NULL, type = \"source\")"},{"path":"r-суурь-ойлголтууд.html","id":"кодын-синтакс","chapter":"3 R суурь ойлголтууд","heading":"Кодын синтакс","text":"Энэхүү гарын авлагад ойлгомжтой болгох үүднээс зарим тохиолдолд функцүүдийн өмнө :: тэмдгийг ашиглан багцынх нь нэрийг дараах байдлаар бичсэн: package_name::function_name()Багцыг тухайн сешнд ачаалсны дараа багцыг ингэж зааж өгөх шаардлагагүй байдаг. Та зүгээр л function_name() ашиглаж болно. Гэсэн хэдий ч нэг функцын нэр нийтлэг хэлбэрээр олон багцад байж болдог бөгөөд энэ тохиолдолд багцын нэрийг бичиж дуудах нь тустай байдаг (жишээ нь plot()). Мөн багцын нэрийг ингэж бичихэд хэрэв тухайн багц ачаалагдаагүй байгаа бол багцыг ачаалах болно.","code":"\n# Энэ команд \"rio\" багцыг ашиглан түүний \"import()\" функцыг ашиглан датасет импорт хийж байна\nlinelist <- rio::import(\"linelist.xlsx\", which = \"Sheet1\")"},{"path":"r-суурь-ойлголтууд.html","id":"функцын-тусламж","chapter":"3 R суурь ойлголтууд","heading":"Функцын тусламж","text":"Тодорхой функцийн талаар дэлгэрэнгүй уншихын тулд та RStudio-ийн баруун доод хэсэгт байрлах Help таб дээрээс хайх боломжтой. Та мөн ?thefunctionname (асуултын тэмдгийн дараа функцийн нэрийг оруулна) гэсэн командыг ажиллуулснаар тухайн функцын тусламжийн хуудас нь Help таб дээр гарч ирнэ. Мөн онлайнаар тусламж хайж үзээрэй.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"багц-шинэчлэх","chapter":"3 R суурь ойлголтууд","heading":"Багц шинэчлэх","text":"Та багцыг дахин суулгах замаар шинэчлэх боломжтой. Та мөн RStudio-ийн Packages таб дээрх ногоон “Update” товчийг дарж аль багцууд шинэ хувилбартай болсныг харж болно. Багц шинэчлэх үед тодорхой функц хэрхэн ажилладаг талаар томоохон өөрчлөлт орсон тохиолдолд хуучин кодоо шинэчлэх шаардлагатай болж магадгүйг анхаарна уу!","code":""},{"path":"r-суурь-ойлголтууд.html","id":"багц-устгах","chapter":"3 R суурь ойлголтууд","heading":"Багц устгах","text":"pacman багцын p_delete() эсвэл base R-ын remove.packages() функц ашиглана уу. Эсвэл өөрийн library агуулсан хавтсыг компьютер дээрээ олоод багцын хавтсыг гараар устгаж болно.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"хамааралт-багц","chapter":"3 R суурь ойлголтууд","heading":"Хамааралт багц","text":"Багцууд нь ажиллахын тулд ихэвчлэн бусад багцуудыг ашигладаг. Эдгээрийг хамааралт багц (dependencies) гэж нэрлэдэг. Хэрэв хамааралт багцыг суулгаж чадахгүй бол үүнээс хамаарсан багцыг мөн суулгаж чадахгүй байж магадгүй юм.Тухайн багцын хамааралт багцуудыг p_depends() функц ашиглан харах ба p_depends_reverse() ашиглан тухайн багцад ямар багцууд хамааралтай болохыг харж болно.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"далдлах-функцууд","chapter":"3 R суурь ойлголтууд","heading":"Далдлах функцууд","text":"Хоёр ба түүнээс дээш багц ижил нэртэй функц агуулах нь түгээмэл тохиолддог. Жишээлбэл, dplyr багц нь filter() функцтэй байхад stats багц ч мөн ижил нэртэй функцтэй. Өгөгдмөл (default) filter() функц нь эдгээр багцыг R сешнд ачаалах дарааллаас хамаарна - хамгийн сүүлд ачаалагдсан filter() өгөгдмөл болох болно.Та энэхүү дарааллыг R Studio-ийн Environment табаас шалгаж болно - “Global Environment” гэсэн цэсийг дарж, багцын дарааллыг харна уу. Энэ жагсаалтын доод хэсэгт байгаа багцын функцууд нь жагсаалтын дээд хэсэгт байгаа багцуудын ижил нэртэй функцийг далдлах болно. Тодорхой багцыг анх ачаалах үед тухайн багцын функц өөр багцын функцийг далдалж байгаа тохиолдолд R консол дээр танд анхааруулах боловч үүнийг анзаарахгүй өнгөрөх нь элбэг байдаг.Далдлалтыг засах дараах аргууд байна:Командад багцын нэрийг зааж өгнө. Жишээлбэл, dplyr::filter() ашиглах.Командад багцын нэрийг зааж өгнө. Жишээлбэл, dplyr::filter() ашиглах.Багцыг ачаалах дарааллыг өөрчлөөд (жишээ нь p_load() дотор), шинэ R сешн эхлүүлнэ.Багцыг ачаалах дарааллыг өөрчлөөд (жишээ нь p_load() дотор), шинэ R сешн эхлүүлнэ.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"салгахбуулгах","chapter":"3 R суурь ойлголтууд","heading":"Салгах/буулгах","text":"Багцыг салгахын (буулгахын) тулд багцын нэрийг зөвөөр, зөвхөн нэг тодорхойлох цэгтэйгээр энэ командыг бичнэ. Энэ нь далдлах асуудлыг шийдэж чадахгүй байж болохыг анхаарна уу.","code":"\ndetach(package:PACKAGE_NAME_HERE, unload=TRUE)"},{"path":"r-суурь-ойлголтууд.html","id":"хуучин-хувилбар-суулгах","chapter":"3 R суурь ойлголтууд","heading":"Хуучин хувилбар суулгах","text":"Тодорхой багцын хуучин хувилбарыг суулгахын тулд энэ зааврыг үзнэ үү.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"санал-болгож-буй-багцууд","chapter":"3 R суурь ойлголтууд","heading":"Санал болгож буй багцууд","text":"Өдөр тутмын тархвар судлалын ажилд санал болгож буй багцуудын жагсаалтыг \\[Санал болгож буй багцуудын\\] хуудаснаас үзнэ үү.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"scripts","chapter":"3 R суурь ойлголтууд","heading":"3.8 Скриптүүд","text":"Скрипт бол програмчлалын үндсэн хэсэг юм. Скрипт гэдэг нь таны командуудыг (жишээ нь датасет үүсгэх, өөрчлөх, дүрслэлийг харуулах функцууд гэх мэт) хадгалдаг баримт бичиг юм. Та скриптийг хадгалаад дараа нь дахин ажиллуулж болно. Скриптэд командуудаа хадгалаад дараа нь скриптээсээ шууд ажиллуулах нь олон давуу талтай байдаг (командуудаа R консол “command line” дээр нэг нэгээр нь бичихийн оронд).Зөөвөрлөх чадвар - та скриптүүдээ илгээх замаар бусадтай хуваалцах боломжтойЗөөвөрлөх чадвар - та скриптүүдээ илгээх замаар бусадтай хуваалцах боломжтойДавтагдах чадвар - ингэснээр та болон бусад хүмүүс таны яг юу хийснийг мэдэх боломжтойДавтагдах чадвар - ингэснээр та болон бусад хүмүүс таны яг юу хийснийг мэдэх боломжтойХувилбарын хяналт - ингэснээр та өөрийн эсвэл хамтран ажиллагсдын хийсэн өөрчлөлтийг хянах боломжтойХувилбарын хяналт - ингэснээр та өөрийн эсвэл хамтран ажиллагсдын хийсэн өөрчлөлтийг хянах боломжтойТайлбар/тэмдэглэл - хийсэн зүйлээ хамтран ажиллагсаддаа тайлбарлахТайлбар/тэмдэглэл - хийсэн зүйлээ хамтран ажиллагсаддаа тайлбарлах","code":""},{"path":"r-суурь-ойлголтууд.html","id":"тайлбар-бичих","chapter":"3 R суурь ойлголтууд","heading":"Тайлбар бичих","text":"Скрипт дээр та R кодынхоо эргэн тойронд тэмдэглэл (“тайлбар”) оруулах боломжтой. Тайлбар бичих нь юу хийж байгаагаа ирээдүйн өөртөө болон бусад кодыг тань хэрэглэгчдэд тайлбарлахад тустай. Та чагт тэмдгийг (#) бичээд дараа нь тайлбараа бичиж болно. Тайлбарласан текст нь R кодоос өөр өнгөөр харагдах болно.#-тэмдгээс хойш бичигдсэн аливаа код ажиллахгүй. Тиймээс кодын өмнө # оруулах нь та устгахыг хүсэхгүй байгаа кодын мөрийг түр хаахад (“comment ”) ашигладаг арга юм. Та олон кодын мөрийг нэг дор тодруулж Ctrl+Shift+c (Mac дээр Cmd+Shift+c) товчийг дарснаар түр хааж/нээж болно.Юу хийж байгаагаа, яагаад хийж байгаагаа тайлбарлах.Юу хийж байгаагаа, яагаад хийж байгаагаа тайлбарлах.Кодыг логиктой хэсгүүдэд хуваахКодыг логиктой хэсгүүдэд хуваахӨөрийн хийж буй зүйлийн алхам тус бүрийн тайлбарыг кодтойгоо дагалдуулах (жишээлбэл дугаарласан алхамууд)Өөрийн хийж буй зүйлийн алхам тус бүрийн тайлбарыг кодтойгоо дагалдуулах (жишээлбэл дугаарласан алхамууд)","code":"\n# Тайлбар нь нэг мөрөнд дангаараа байж болно\n# дата импортлох\nlinelist <- import(\"linelist_raw.xlsx\") %>%   # тайлбар кодын дараа бас орж болно\n# filter(age > 50)                          # Үүнийг мөн тодорхой кодын мөрийг идэвхгүй болгох/хасахад ашиглаж болно \n  count()"},{"path":"r-суурь-ойлголтууд.html","id":"загвар","chapter":"3 R суурь ойлголтууд","heading":"Загвар","text":"Кодлох загварынхаа талаар тодорхой бодолтой байх нь чухал, ялангуяа багаар ажиллаж байгаа бол. Бид tidyverse загварын зааврын дагуу кодоо бичихийг зөвлөж байна. Мөн энэ загварт нийцэхэд тань туслах styler, lintr гэх мэт багцууд байдаг.Таны кодыг бусад хүн уншихад хялбар болгох цөөн хэдэн зөвлөмж:Объектуудыг нэрлэхдээ зөвхөн жижиг үсэг, тоо, доогуур зураас _ ашиглах, жишээ нь my_dataОбъектуудыг нэрлэхдээ зөвхөн жижиг үсэг, тоо, доогуур зураас _ ашиглах, жишээ нь my_dataSpace буюу зайг сайн ашиглах, операторуудыг тойруулаад n = 1 ба age_new <- age_old + 3 гэх мэтSpace буюу зайг сайн ашиглах, операторуудыг тойруулаад n = 1 ба age_new <- age_old + 3 гэх мэт","code":""},{"path":"r-суурь-ойлголтууд.html","id":"жишээ-скрипт","chapter":"3 R суурь ойлголтууд","heading":"Жишээ скрипт","text":"Богино R скриптийн жишээг доор харуулав. Та кодоо товч, ойлгомжтой тайлбарлах тусам хамтран ажиллагсад тань танд талархах болно гэдгийг санаарай!","code":""},{"path":"r-суурь-ойлголтууд.html","id":"r-markdown","chapter":"3 R суурь ойлголтууд","heading":"R markdown","text":"R markdown скрипт бол тухайн скрипт нь өөрөө гаралтын баримт бичиг (PDF, Word, HTML, Powerpoint гэх мэт) болдог R скриптийн төрөл юм. Эдгээр нь динамик, автомат тайланг гаргахад ихэвчлэн хэрэглэгддэг маш хэрэгцээтэй, олон талын хэрэгсэл юм. Энэ вэбсайт, гарын авлагыг хүртэл R markdown скриптээр хийдэг!R анхлан сурж буй хэрэглэгчид ч R Markdown-ийг ашиглаж болно гэдгийг хэлэх нь зүйтэй - сүрдэх зүйл байхгүй! Нэмж суралцахын тулд \\[R Markdown тайлан\\] хэмээх гарын авлагын хуудсыг үзнэ үү.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"r-notebook","chapter":"3 R суурь ойлголтууд","heading":"R notebook","text":"R markdown болон R notebook бичих хоёрын хооронд ялгаа байхгүй. Гэсэн хэдий ч ажиллагааны хувьд бага зэрэг ялгаатай байдаг. Дэлгэрэнгүй мэдээллийг энэ сайтаас үзнэ үү.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"shiny","chapter":"3 R суурь ойлголтууд","heading":"Shiny","text":"Shiny апп/вэбсайтууд нь app.R гэсэн нэртэй нэг скрипт дотор агуулагддаг. Энэ файл нь гурван бүрэлдэхүүн хэсэгтэй:Хэрэглэгчийн интерфэйс (ui)Хэрэглэгчийн интерфэйс (ui)Серверийн функцСерверийн функцshinyApp функцын дуудлагаshinyApp функцын дуудлага\\[Shiny хяналтын самбар\\] хэмээх гарын авлагын хуудсыг эсвэл энэ онлайн хичээлийг үзнэ үү: Shiny хичээлӨмнө нь дээрх файлыг хоёр файл болгон хуваадаг байсан (ui.R ба server.R).","code":""},{"path":"r-суурь-ойлголтууд.html","id":"код-эвхэх","chapter":"3 R суурь ойлголтууд","heading":"Код эвхэх","text":"Та өөрийн скриптийг уншихад хялбар болгохын тулд кодын хэсгийг эвхэж болно.Үүнийг хийхийн тулд # ашиглан текстийн гарчиг үүсгэж, гарчгаа бичээд зураас (-), чагт ( #) эсвэл тэнцүү (=) гэсэн тэмдгийг 4-ээс доошгүйг бичнэ. Ингэхэд зүүн талын “суваг” хэсэгт жижиг сум гарч ирнэ (мөрний дугаарын хажууд). Та энэ сум дээр дарахад гарчгийн доорх кодоос дараагийн гарчиг хүртэл эвхэгдэж оронд нь хоёр толгойтой сум гарч ирэх болно.Кодыг дэлгэхийн тулд суваг дээрх сум эсвэл хоёр толгойтой сумны дүрс дээр дахин дарна. Энэ хуудасны RStudio хэсэгт тайлбарласан шиг гарын товчлолууд бас байдаг.Чагт (#) ашиглан гарчиг үүсгэснээр та скриптийнхээ доод хэсэгт Агуулгын хүснэгтийг идэвхжүүлэх болно (доороос үзнэ үү). Та # тэмдгийг нэмж дэд гарчгууд үүсгэж болно, жишээ нь # нэгдүгээр шатны, ## хоёрдугаар шатны, ### гуравдугаар шатны гарчиг гэх мэт.Жишээ скриптийн хоёр хувилбарыг доор харуулав. Зүүн талд тайлбарласан гарчгууд бүхий эх хувь байна. Баруун талд гарчиг тус бүрийн ард дөрвөн зураас бичин тэдгээрийг эвхэгддэг болгосон. Тэдгээрийн хоёр нь эвхэгдсэн байгаа бөгөөд та доорх Агуулгын хүснэгтэд хэсэг бүрийг харуулсныг харж болно.Автоматаар эвхэх боломжтой кодын бусад хэсэгт функцүүдийн тодорхойлолт зэрэг { } хаалт бүхий “braced” бүсүүд эсвэл нөхцөлт блокууд (else statements) орно. Та код эвхэх тухай дэлгэрэнгүй мэдээллийг RStudio сайтаас уншиж болно.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"ажлын-директор","chapter":"3 R суурь ойлголтууд","heading":"3.9 Ажлын директор","text":"Ажлын директор нь R таны ажилд ашигладаг үндсэн хавтасны байршил бөгөөд R нь энэ хавтас дотор файлуудыг хайж, хадгалдаг. Зориудаар өөрчлөөгүй үед шинэ файлууд болон үр дүнг энэ байршилд шууд хадгалах бөгөөд эндээс импортлох файлуудыг (жишээ нь, датасет) мөн хайх болно.Ажлын директор нь RStudio Console самбарын дээд талд саарал текстээр харагдана. Та мөн getwd() функцыг (хашилтыг хоосон орхи) ажиллуулснаар одоогийн ашиглаж байгаа директорийг харж болно .","code":""},{"path":"r-суурь-ойлголтууд.html","id":"санал-болгож-буй-арга","chapter":"3 R суурь ойлголтууд","heading":"Санал болгож буй арга","text":"Та ажлын директорио хэрхэн ашиглах талаар бидний санал болгож буй аргын дэлгэрэнгүйг \\[R төслүүд\\] хуудаснаас үзнэ үү.\nӨөрийн ажлын директор болон файлын замыг удирдах нийтлэг, үр дүнтэй, асуудалгүй арга бол эдгээр 3 элементийг \\[R project\\]\\[R projects\\]-д чиглэсэн ажлын урсгалд нэгтгэх явдал юм.Таны бүх файлыг хадгалах R төсөл (\\[R төслүүд\\] дээрх хуудсыг үзнэ үү)Таны бүх файлыг хадгалах R төсөл (\\[R төслүүд\\] дээрх хуудсыг үзнэ үү)Файлуудыг олох багц (\\[Импорт, экспорт\\] дээрх хуудсыг үзнэ үү)Файлуудыг олох багц (\\[Импорт, экспорт\\] дээрх хуудсыг үзнэ үү)Файлуудыг импортлох/экспортлох rio багц (\\[Импорт, экспорт\\] дээрх хуудсыг үзнэ үү)Файлуудыг импортлох/экспортлох rio багц (\\[Импорт, экспорт\\] дээрх хуудсыг үзнэ үү)","code":""},{"path":"r-суурь-ойлголтууд.html","id":"командаар-тохируулах","chapter":"3 R суурь ойлголтууд","heading":"Командаар тохируулах","text":"Саяхныг хүртэл R сурч буй олон хүмүүст setwd() командаар скриптээ эхлүүлэхийг заадаг байсан. Оронд нь \\[R project\\]\\[R projects\\]-д чиглэсэн ажлын урсгалыг ашиглах талаар бодож үзээд setwd()-г ашиглахгүй байгаа шалтгааныг уншина уу. Товчхондоо, таны ажил таны хэрэглэж буй компьютертэй хамааралтай болж, файлуудыг импортлох, экспортлоход ашигладаг файлын замууд “хэврэг” болж, бусад компьютер дээр таны кодыг ашиглах, хамтран ажиллахад ихээхэн саад учруулдаг. Үүнээс зайлсхийх өөр хялбар аргууд байна!Дээр дурдсанчлан бид ихэнх тохиолдолд ийм аргыг хэрэглэхийг зөвлөдөггүй ч та setwd() командыг хүссэн хавтасныхаа файлын замыг ишлэл дотор бичсэнээр ашиглаж болно, жишээлбэл:АЮУЛ: Хэрэв файлын зам нь нэг компьютерт зориулагдсан бол setwd()-аар ажлын директор тохируулах нь “хэврэг” байж болно. Үүний оронд R Project-ийн үндсэн директортой харьцангуй холбоотой файлын замуудыг ашиглана уу (багцтай).","code":"\nsetwd(\"C:/Documents/R Files/My analysis\")"},{"path":"r-суурь-ойлголтууд.html","id":"гараар-тохируулах","chapter":"3 R суурь ойлголтууд","heading":"Гараар тохируулах","text":"Ажлын директорийг гараар тохируулахын тулд (setwd()-ийн товч дарахтай дүйцэхүйц) Session унадаг цэсийг товшиж “Set Working Directory”, дараа нь “Choose Directory” руу очно уу. Энэ нь тухайн R сессийн ажлын директорийг тохируулах болно. Тэмдэглэл: Хэрэв энэ аргыг хэрэглэж байгаа бол RStudio-г нээх болгондоо үүнийг гараар хийх шаардлагатай болно.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"r-төслийн-дотор","chapter":"3 R суурь ойлголтууд","heading":"R төслийн дотор","text":"Хэрэв R төслийг ашиглаж байгаа бол ажлын директор нь “.rproj” файлыг агуулсан R төслийн үндсэн хавтсыг ашиглах болно. Та R Project (“.rproj” өргөтгөлтэй файл) дээр дарж RStudio-г нээвэл энэ нь хэрэгжинэ.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"r-markdown-ы-ажлын-директор","chapter":"3 R суурь ойлголтууд","heading":"R markdown-ы ажлын директор","text":"R markdown скриптийн үндсэн ажлын директор нь Rmarkdown файлын (.Rmd) хадгалагдаж буй хавтас юм. Хэрэв R төсөл болон багцыг ашиглаж байгаа бол энэ нь хамаарахгүй бөгөөд \\[R төслүүд\\] хуудсанд тайлбарласны дагуу ажлын директор () байх болно.Хэрэв та бие даасан (R төсөл дотор биш) R markdown-ы ажлын директорийг setwd() ашиглан өөрчлөх гэж байвал энэ нь зөвхөн тухайн кодын хэсэгт хамаарна. R markdown дах бүх кодын хэсгүүдэд өөрчлөлт оруулахын тулд тохиргооны хэсгийг засварлаж root.dir = параметрийг доорх жишээ шиг нэмж оруулаарай:R markdown-ыг R төслийн дотор багцтай хамт ашиглах нь хамаагүй хялбар юм.","code":"\nknitr::opts_knit$set(root.dir = 'desired/directorypath')"},{"path":"r-суурь-ойлголтууд.html","id":"файлын-замууд-бичих","chapter":"3 R суурь ойлголтууд","heading":"Файлын замууд бичих","text":"R эхлэн суралцагчдын бухимдлын хамгийн түгээмэл эх үүсвэр (наад зах нь Windows машин дээр) бол магадгүй дата импортлох, экспортлох файлын замыг бичих явдал юм. \\[Импорт, экспорт\\] хуудсанд файлын замыг хэрхэн хамгийн сайн оруулах талаар дэлгэрэнгүй тайлбар байгаа боловч энд цөөн хэдэн гол санааг дурдав:Эвдэрсэн замуудДоорх нь “үнэмлэхүй” эсвэл “бүтэн хаяг” файлын замын жишээ юм. Хэрэв өөр компьютер ашиглавал эдгээр нь эвдрэх магадлалтай. Хэрэв та дундын/сүлжээний драйв ашиглаж байгаа бол үүнд хамаарахгүй.Налуу зураасны чиглэлХэрэв ташуу зураас файлын замд бичиж байгаа бол түүний чиглэлийг анхаараарай. Бүрэлдэхүүн хэсгүүдийг (“data/provincial.csv”) салгахын тулд урагшаа налуу зураасыг (/) ашиглана уу. Windows хэрэглэгчдийн хувьд файлын замыг арагшаа налуу зураасаар (\\) харуулдаг тул та налуу зураас бүрийн чиглэлийг өөрчлөх шаардлагатай болно. Хэрэв та \\[R төслүүд\\] хуудсанд тайлбарласны дагуу багцыг ашиглавал налуу зураасны чиглэл асуудал болохгүй.Харьцангуй файлын замуудБид ерөнхийдөө “харьцангуй” файлын замууд ашиглахыг зөвлөж байна, өөрөөр хэлбэл таны R төслийн үндсэн хавтастай харьцангуй холбоотой зам. Та үүнийг \\[R төслүүд\\] хуудсанд тайлбарласны дагуу багцыг ашиглан хийж болно. Харьцангуй файлын зам дараах байдлаар харагдаж болно:R төсөл дотор харьцангуй файлын замыг ашиглаж байсан ч та R төслөөс гадуур байгаа датаг үнэмлэхүй зам ашиглан импортолж/экспортолж болно.","code":"C:/Users/Name/Document/Analytic Software/R/Projects/Analysis2019/data/March2019.csv  \n# R төслийн data/linelist/clean/ дэд хавтаснаас csv лайнлист импортлох\nlinelist <- import(here(\"data\", \"clean\", \"linelists\", \"marin_country.csv\"))"},{"path":"r-суурь-ойлголтууд.html","id":"objects","chapter":"3 R суурь ойлголтууд","heading":"3.10 Объектууд","text":"R-д байгаа бүх зүйл нь объект бөгөөд R нь “объект-чиглэлтэй” (object-oriented) хэл юм. Доорх хэсгүүд дараах зүйлсийг тайлбарлах болно:Хэрхэн объект үүсгэх вэ (<-)Хэрхэн объект үүсгэх вэ (<-)Объектуудын төрлүүд (жишээ нь, датафрэймүүд, векторууд..)Объектуудын төрлүүд (жишээ нь, датафрэймүүд, векторууд..)Объектуудын дэд хэсгүүдэд (жишээ нь, датасетийн хувьсагчид) хэрхэн хандах вэОбъектуудын дэд хэсгүүдэд (жишээ нь, датасетийн хувьсагчид) хэрхэн хандах вэОбъектуудын ангилал (жишээлбэл, тоон, логик, бүхэл тоо, давхар тоо, тэмдэгт, фактор)Объектуудын ангилал (жишээлбэл, тоон, логик, бүхэл тоо, давхар тоо, тэмдэгт, фактор)","code":""},{"path":"r-суурь-ойлголтууд.html","id":"бүх-зүйл-объект","chapter":"3 R суурь ойлголтууд","heading":"Бүх зүйл объект","text":"Энэ хэсгийг R4Epis төслөөс ашигласан.R-д хадгалагдаж буй бүх зүйл - датасет, хувьсагч, тосгоны нэрсийн жагсаалт, нийт хүн амын тоо, тэр ч байтугай график гэх мэт гаралтууд нь нэр оноогдсон объектууд бөгөөд эдгээрийг дараагийн командуудад ашиглаж болдог.Тухайн объектод утга оноох үед объект бий болдог (доорх оноолтын хэсгийг үзнэ үү). Түүнд утга оноох үед тухайн объект Environment хэсэгт гарч ирнэ (RStudio-ийн баруун дээд хэсгийг харна уу). Ингэснээр түүнийг ажиллуулж, удирдаж, өөрчилж, дахин тодорхойлж болно.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"объектуудыг-тодорхойлох--","chapter":"3 R суурь ойлголтууд","heading":"Объектуудыг тодорхойлох (<-)","text":"Объектуудад <- операторын тусламжтайгаар тодорхой утгыг оноож үүсгэнэ.Та оноох оператор <- -ыг “гэж тодорхойлсон” гэсэн үг гэж бодож болно. Оноолтын командууд нь ерөнхийдөө дараах стандарт дараалалтай байдаг:объектын_нэр <- утга (эсвэл тодорхой утга үүсгэдэг процесс/тооцоолол)Жишээлбэл, та одоогийн эпидемиологийн тайлангийн долоо хоногийг дараагийн кодын лавлагааны объект болгон тэмдэглэхийг хүсч байж болох юм. Энэ жишээнд \"2018-W10\" гэсэн утгыг оноох үед current_week объект үүсч байна (ишлэл нь үүнийг тэмдэгтийн утга болгодог). Ингэснээр current_week объект RStudio Environment хэсэгт (баруун дээд талд) гарч ирэх ба дараагийн командуудад ашиглаж болно.R командууд болон тэдгээрийн гаралтыг доор харна уу.ТЭМДЭГЛЭЛ: R консолын гаралт дахь \\[1\\] нь ердөө л таныг гаралтын эхний зүйлийг харж байгааг илэрхийлж байгаа болно.АНХААРУУЛГА: Объектын утгыг дахин тодорхойлох оноолтын командыг ажиллуулснаар ямар ч үед тухайн объектын өмнөх утгыг дарж шинэ утга оноож болно. Тиймээс командуудыг гүйцэтгэх дараалал нь маш чухал юм.Дараах команд нь current_week утгыг дахин тодорхойлох болно:Тэнцүүгийн тэмдэг =Та R код дотор тэнцүүгийн тэмдэгтэй олон таарах болно:Хоёр объект эсвэл утгын хоорондох давхар тэнцүүгийн тэмдэг == “энэ нь үүнтэй тэнцүү юу?” гэсэн логик асуултыг тавьдаг.Хоёр объект эсвэл утгын хоорондох давхар тэнцүүгийн тэмдэг == “энэ нь үүнтэй тэнцүү юу?” гэсэн логик асуултыг тавьдаг.Та мөн функц дотор функцийн аргументуудын утгыг тодорхойлоход ашигладаг тэнцүүгийн тэмдгийг харах болно (үүний талаар дараагийн хэсгүүдээс уншина уу), жишээ нь max(age, na.rm = TRUE).Та мөн функц дотор функцийн аргументуудын утгыг тодорхойлоход ашигладаг тэнцүүгийн тэмдгийг харах болно (үүний талаар дараагийн хэсгүүдээс уншина уу), жишээ нь max(age, na.rm = TRUE).Мөн та объект үүсгэж, тодорхойлохын тулд <-ын оронд = нэг тэнцүү тэмдгийг ашиглаж болох боловч энэ үйлдлийг хийхийг бид зөвлөдөггүй. Үүнийг яагаад зөвлөдөггүй талаар эндээс уншиж болно.Мөн та объект үүсгэж, тодорхойлохын тулд <-ын оронд = нэг тэнцүү тэмдгийг ашиглаж болох боловч энэ үйлдлийг хийхийг бид зөвлөдөггүй. Үүнийг яагаад зөвлөдөггүй талаар эндээс уншиж болно.ДатасетүүдДатасет нь мөн объект (ихэвчлэн “датафрэйм”) бөгөөд тэдгээрийг импортлохдоо нэр өгөх ёстой. Доорх кодонд rio багцын import() функц ашиглан импортолсон CSV файлын утгыг linelist гэсэн объект руу оноож шинээр үүсгэж байна.Та \\[Импорт, экспорт\\] хэсгээс датасет импортлох, экспортлох талаар дэлгэрэнгүй унших боломжтой.АНХААРУУЛГА: Объектуудыг нэрлэх тухай товч тэмдэглэл:Объектын нэрэнд хоосон зай байх ёсгүй, гэхдээ зайны оронд доогуур зураас (_) эсвэл цэг (.) ашиглаж болно.Объектын нэрэнд хоосон зай байх ёсгүй, гэхдээ зайны оронд доогуур зураас (_) эсвэл цэг (.) ашиглаж болно.Объектын нэр нь үсгийн том жижгээр ялгагддаг (Dataset_A нь dataset_A-аас өөр гэсэн үг).Объектын нэр нь үсгийн том жижгээр ялгагддаг (Dataset_A нь dataset_A-аас өөр гэсэн үг).Объектын нэр үсгээр эхлэх ёстой (1, 2, 3 гэх мэт тоогоор эхэлж болохгүй).Объектын нэр үсгээр эхлэх ёстой (1, 2, 3 гэх мэт тоогоор эхэлж болохгүй).ГаралтуудХүснэгт, график гэх мэт гаралтууд нь гаралтыг хэрхэн объект болгон хадгалах, эсвэл хадгалахгүйгээр хэвлэх боломжтой жишээг харуулдаг. base R функц болох table() ашиглан хүйс, үр дүнгийн хүснэгтийг R консол дээр шууд хэвлэх боломжтой (хадгалахгүйгээр).Гэхдээ яг ижил хүснэгтийг нэрлэсэн объект болгон хадгалах боломжтой. Дараа нь хүсвэл үүнийг хэвлэж болно.БагануудДатасетийн баганууд нь мөн объектууд бөгөөд “Баганууд” хэсэгт доор тайлбарласны дагуу тодорхойлж, дахин бичиж, шинээр үүсгэж болно.Та шинэ багана үүсгэхийн тулд base R-ын оноолтын операторыг ашиглаж болно. Доорх кодонд мөр бүрийн хувьд wt_kg болон ht_cm багана дахь мөрийн утгуудыг ашиглан математик үйлдлийн үр дүнд шинэ утга гарган түүнийг шинэ багана bmi (Биеийн жингийн индекс) дотор хадгалж байна.Хэдий ингэж болох боловч энэхүү гарын авлагад бид багануудыг тодорхойлох өөр арга болох dplyr багцын mutate() функц болон пайп оператораар (%>%) дамжуулан пайплахыг санал болгож байна. Ингэснээр синтаксийг уншихад хялбар бөгөөд \\[Дата цэвэрлэх болон үндсэн функцууд\\] хуудсанд тайлбарласан бусад давуу талууд байдаг. Та пайпын талаар дэлгэрэнгүй мэдээллийг дараах “Пайплах” хэсгээс уншиж болно.","code":"\ncurrent_week <- \"2018-W10\"   # Энэ команд нь утга оноосноор current_week объект үүсгэнэ\ncurrent_week                 # Энэ команд нь консол дахь current_week объектын одоогийн утгыг хэвлэнэ ## [1] \"2018-W10\"\ncurrent_week <- \"2018-W51\"   # current_week объектод ШИНЭ утгыг онооно \ncurrent_week                 # current_week утгыг консол дээр хэвлэнэ## [1] \"2018-W51\"\n# linelist-ийг үүсгэж, импортолсон CSV файлын утгыг оноож өгч байна\nlinelist <- import(\"my_linelist.csv\")\n# зөвхөн R консол дээр хэвлэнэ\ntable(linelist$gender, linelist$outcome)##    \n##     Death Recover\n##   f  1227     953\n##   m  1228     950\n# хадгал\ngen_out_table <- table(linelist$gender, linelist$outcome)\n\n# хэвлэ\ngen_out_table##    \n##     Death Recover\n##   f  1227     953\n##   m  1228     950\n# base R синтакс ашиглан шинэ \"bmi\" багана үүсгэнэ\nlinelist$bmi <- linelist$wt_kg / (linelist$ht_cm/100)^2\n# dplyr синтакс ашиглан шинэ \"bmi\" багана үүсгэнэ\nlinelist <- linelist %>% \n  mutate(bmi = wt_kg / (ht_cm/100)^2)"},{"path":"r-суурь-ойлголтууд.html","id":"объектын-бүтэц","chapter":"3 R суурь ойлголтууд","heading":"Объектын бүтэц","text":"Объектууд нь зөвхөн нэг ширхэг дата байж болно (жишээ нь, my_number <- 24) эсвэл тодорхой бүтэцтэй датанаас бүрдэж болно.Доорх графикийг энэхүү онлайн R хичээлээс авсан болно. Энэ нь зарим нийтлэг дата бүтэц, тэдгээрийн нэрийг харуулж байна. Энэ зурагт орон зайн мэдээлэл ороогүй бөгөөд үүнийг \\[GIS-ын суурь\\] хуудсанд авч үзсэн болно.Эпидемиологт (ялангуяа талбарын эпидемиологт) та датафрэймүүд ба векторуудтай хамгийн их тулгарах болно:Датафрэймийн нэг хэсэг биш “дан” вектор үүсгэхийн тулд c() функцийг өөр өөр элементүүдийг нэгтгэхэд ашигладаг болохыг анхаарна уу. Жишээлбэл, графикийн өнгөний хуваарь болгон ашиглах өнгөний вектор үүсгэх тохиолдолд : vector_of_colors <- c(\"blue\", \"red2\", \"orange\", \"grey\")","code":""},{"path":"r-суурь-ойлголтууд.html","id":"объектын-ангиуд","chapter":"3 R суурь ойлголтууд","heading":"Объектын ангиуд","text":"R-д хадгалагдсан бүх объектууд R-д тухайн объектыг хэрхэн зохицуулахыг хэлдэг ангитай байдаг. Олон боломжит ангиуд байдаг боловч нийтлэг байдаг нь:Та class() функцад нэрийг нь оруулснаар тухайн объектын ангийг шалгаж болно. Тэмдэглэл: Та $ тэмдэглэгээг ашиглан датасетийн нэр болон баганын нэрийг тусгаарласнаар тухайн датасет доторх тодорхой баганыг ашиглаж болно.Заримдаа R баганыг автоматаар өөр анги руу хөрвүүлдэг. Үүнээс болгоомжил! Жишээлбэл, хэрэв танд тоонуудын вектор эсвэл багана байгаа боловч тэмдэгтийн утга оруулсан бол… багана бүхэлдээ тэмдэгт ангитай болж өөрчлөгдөнө.Үүний нэг нийтлэг жишээ бол хүснэгтийг хэвлэхийн тулд датафрэймтэй ажиллах үед - хэрэв та нийт гэсэн мөр гаргаж, тоонуудтай нэг нүдэнд хувийг буулгах/наах (жишээ нь 23 (40%)) гэж оролдвол дээрх тоон багана нь тэмдэгт болж хувирах бөгөөд цаашид математик тооцоололд ашиглагдах боломжгүй болно. Тиймээс заримдаа та объект эсвэл баганыг өөр анги руу хөрвүүлэх шаардлагатай болдог.Үүний нэгэн адил .numeric(), .character(), .double(), .factor(), .integer() зэрэг тодорхой ангиллын объект МӨН эсэхийг шалгах base R функцууд байдаг.R хэл дээрх анги, датаны бүтцийн талаархи онлайн материалыг эндээс үзнэ үү.","code":"\nclass(linelist)         # анги нь датафрэйм эсвэл tibble байх ёстой## [1] \"data.frame\"\nclass(linelist$age)     # анги тоон байх ёстой## [1] \"numeric\"\nclass(linelist$gender)  # анги тэмдэгт байх ёстой## [1] \"character\"\nnum_vector <- c(1,2,3,4,5) # векторыг дан тоогоор тодорхойлно\nclass(num_vector)          # вектор нь тоон анги## [1] \"numeric\"\nnum_vector[3] <- \"three\"   # гурав дахь элементийг тэмдэгт болгон хувиргана\nclass(num_vector)          # вектор нь одоо тэмдэгтийн анги болжээ## [1] \"character\""},{"path":"r-суурь-ойлголтууд.html","id":"багануудхувьсагчид","chapter":"3 R суурь ойлголтууд","heading":"Баганууд/Хувьсагчид ($)","text":"Датафрэйм дэх багана нь техникийн хувьд “вектор” (дээрх хүснэгтийг харна уу) - бүгд ижил ангитай (тэмдэгт, тоон, логик гэх мэт) байх ёстой утгуудын цуврал юм.Вектор нь датафрэймээс хамааралгүй оршиж болно, жишээ нь моделд тайлбарлах хувьсагч болгон оруулахыг хүссэн баганын нэрнүүдийн вектор. “Бие даасан” вектор үүсгэхийн тулд дараах байдлаар c() функцийг ашиглана уу:Датафрэймийн баганууд нь мөн векторууд бөгөөд $ тэмдэг ашиглан дуудаж, лавлаж, задалж эсвэл шинээр үүсгэж болно. $ тэмдэг нь баганын нэрийг датафрэймийн нэртэй холбодог. Энэхүү гарын авлагад бид “хувьсагч” гэхийн оронд “багана” гэсэн үгийг ашиглахыг хичээсэн.Датафреймийн нэрийн дараа $ тэмдэг оруулснаар та тухайн датафрэйм дэх бүх баганын унадаг цэсийг харах болно. Та сумны товчийг ашиглан тэдгээрийг гүйлгэж, Enter товчлуураар нэгийг нь сонгосноор зөв бичгийн алдаа гаргахаас зайлсхийх боломжтой!АХИСАН ТҮВШНИЙ ЗӨВЛӨМЖ: Зарим илүү комплекс объектууд (жишээ нь лист, эсвэл epicontacts объект) олон доллар тэмдэгтээр хандах боломжтой олон түвшинтэй байж болно. Жишээлбэл, epicontacts$linelist$date_onset","code":"\n# тэмдэгтийн утгууд бүхий бие даасан векторыг тодорхойлно\nexplanatory_vars <- c(\"gender\", \"fever\", \"chills\", \"cough\", \"aches\", \"vomit\")\n\n# энэ нэрлэсэн вектор дахь утгуудыг хэвлэх\nexplanatory_vars## [1] \"gender\" \"fever\"  \"chills\" \"cough\"  \"aches\"  \"vomit\"\n# age_years векторын уртыг ол \nlength(linelist$age) # (age нь linelist датафрэймийн нэг багана юм)"},{"path":"r-суурь-ойлголтууд.html","id":"хаалт-ашиглан-хандахиндекслэх","chapter":"3 R суурь ойлголтууд","heading":"Хаалт ашиглан хандах/индекслэх ([ ])","text":"Та объектын хэсгүүдийг харах, өөрөөр “индекслэх” гэж нэрлэгддэг, шаардлагатай байж болох бөгөөд үүнийг ихэвчлэн дөрвөлжин хаалт [ ] ашиглан хийдэг. Баганад хандахын тулд датафрэйм дээр $-г ашиглах нь мөн индекслэлтийн нэг төрөл юм.Дөрвөлжин хаалт нь summary() функцийн гаралт гэх мэт гарч ирсэн гаралтын тодорхой хэсгийг харуулахад ашиглагддаг:Хаалт нь тодорхой мөр, баганыг харахын тулд датафрэйм дээр ажилладаг. Та үүнийг датафрэйм[мөр, багана] синтакс ашиглан хийж болно:Та мөн dplyr синтакс (мөрүүдэд filter() функц, багананд select() функцийг) ашиглан датафрэйм болон тибл дээр дээрхтэй ижлээр мөр/баганыг индексжүүлэх боломжтойг анхаарна уу. Эдгээр үндсэн функцуудын талаар \\[Дата цэвэрлэх ба үндсэн функцууд\\] хуудаснаас дэлгэрэнгүй уншина уу.“Мөрийн дугаар” дээр үндэслэн шүүх бол та dplyr-ынrow_number() функцийг хоосон хаалттайгаар логик шүүлтийн хэсэг болгон ашиглаж болно. Доор үзүүлсэн шиг ихэнх тохиолдолд та %% оператор болон тооны хүрээг логик хэллэгийн нэг хэсэг болгож болдог. Эхний N мөрийг харахын тулд та тусгай dplyr функц head() ашиглах боломжтой.Лист ангийн объектыг индекслэх үед зөвхөн ганц объектыг буцаасан ч гэсэн ганц дөрвөлжин хаалт нь лист ангийг буцаана. Харин давхар хаалт нь нэг элементэд хандаж, листээс өөр анги буцаахад ашиглагдаж болно.Доор үзүүлсэн шиг хаалтуудыг ар араас нь бичиж болно.Чинжүү сэгсрэгч ашиглан лист индекслэлтийн талаар тайлбарласан энэхүү дүрсэт тайлбар хошин бөгөөд ойлгоход тустай.Листийг консол дээр хэвлэх үед хэрхэн харагдахыг энд харуулав. Нэрлэгдсэн хоёр элемент байгааг хараарай:hospitals, тэмдэгтийн векторhospitals, тэмдэгтийн векторaddresses, хаягуудын датафрэймaddresses, хаягуудын датафрэймОдоо бид янз бүрийн аргыг ашиглан задалж байна:","code":"\nmy_vector <- c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")  # векторыг тодорхойлно\nmy_vector[5]                                  # 5-р элементийг хэвлэх## [1] \"e\"\n# Бүх хураангуй\nsummary(linelist$age)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n##    0.00    6.00   13.00   16.07   23.00   84.00      86\n# Нэр бүхий, хураангуйн хоёр дахь элемент (зөвхөн ганц хаалт ашиглан) \nsummary(linelist$age)[2]## 1st Qu. \n##       6\n# Нэргүй, хураангуйн хоёр дахь элемент (давхар хаалт ашиглан)\nsummary(linelist$age)[[2]]## [1] 6\n# Нэрийг харуулахгүйгээр элементийг нэрээр нь задлах\nsummary(linelist$age)[[\"Median\"]]## [1] 13\n# Датасетийн тодорхой мөрийг (2) бүх баганын хамт харах (таслалыг бүү март!) \nlinelist[2,]\n\n# Бүх мөрүүдийг харах, гэхдээ зөвхөн нэг баганатай\nlinelist[, \"date_onset\"]\n\n# 2-р мөр болон 5-аас 10-р багана хүртэлх утгыг харах \nlinelist[2, 5:10] \n\n# 2-р мөр болон 5-аас 10, 18-р багануудын утгыг харах\nlinelist[2, c(5:10, 18)] \n\n# 2-оос 20 хүртэлх мөр, тодорхой багануудыг харах\nlinelist[2:20, c(\"date_onset\", \"outcome\", \"age\")]\n\n# Тодорхой шалгуурт үндэслэн мөр, баганыг харах \n# *** Датафрэймийг шалгуурт нэрлэсэн хэвээр байх ёстойг анхаарна уу! \nlinelist[linelist$age > 25 , c(\"date_onset\", \"outcome\", \"age\")]\n\n# RStudio Viewer самбар дээрх гаралтыг харахын тулд View()-г ашиглана уу (уншихад хялбар) \n# *** View() функцийн том \"V\" үсгийг анхаарна уу \nView(linelist[2:20, \"date_onset\"])\n\n# Шинэ объект болгон хадгалах\nnew_table <- linelist[2:20, c(\"date_onset\")] \n# Эхний 100 мөрийг харах\nlinelist %>% head(100)\n\n# Зөвхөн 5-р мөрийг харуулах\nlinelist %>% filter(row_number() == 5)\n\n# 2-оос 20 хүртэлх мөр, гурван тодорхой баганыг харах (баганын нэр дээр ишлэл хэрэггүй гэдгийг анхаарна уу) \nlinelist %>% filter(row_number() %in% 2:20) %>% select(date_onset, outcome, age)\n# Демо лист тодорхойлох\nmy_list <- list(\n  # Листийн эхний элемент нь тэмдэгтийн вектор\n  hospitals = c(\"Central\", \"Empire\", \"Santa Anna\"),\n  \n  # Листийн хоёр дахь элемент нь хаягуудын датафрэйм\n  addresses   = data.frame(\n    street = c(\"145 Medical Way\", \"1048 Brown Ave\", \"999 El Camino\"),\n    city   = c(\"Andover\", \"Hamilton\", \"El Paso\")\n    )\n  )\nmy_list## $hospitals\n## [1] \"Central\"    \"Empire\"     \"Santa Anna\"\n## \n## $addresses\n##            street     city\n## 1 145 Medical Way  Andover\n## 2  1048 Brown Ave Hamilton\n## 3   999 El Camino  El Paso\nmy_list[1] # энэ нь \"лист\" анги дахь элементийг буцаана - элементийн нэр харагдсан хэвээр байна ## $hospitals\n## [1] \"Central\"    \"Empire\"     \"Santa Anna\"\nmy_list[[1]] # энэ нь зөвхөн (нэргүй) тэмдэгтийн векторыг буцаана ## [1] \"Central\"    \"Empire\"     \"Santa Anna\"\nmy_list[[\"hospitals\"]] # Та мөн листийн элементийн нэрээр индекслэж болно## [1] \"Central\"    \"Empire\"     \"Santa Anna\"\nmy_list[[1]][3] # энэ нь \"hospitals\" тэмдэгтийн векторын гурав дахь элементийг буцаана ## [1] \"Santa Anna\"\nmy_list[[2]][1] # Энэ нь хаягийн датафрэймийн эхний баганыг (\"street\") буцаана##            street\n## 1 145 Medical Way\n## 2  1048 Brown Ave\n## 3   999 El Camino"},{"path":"r-суурь-ойлголтууд.html","id":"объектуудыг-устгах","chapter":"3 R суурь ойлголтууд","heading":"Объектуудыг устгах","text":"Та rm() функцэд нэрийг оруулснаар R орчноосоо бие даасан объектуудыг устгаж болно (ишлэлгүй):Та бүх объектыг дараах байдлаар устгаж болно (ажлын талбайгаа цэвэрлэх):","code":"\nrm(object_name)\nrm(list = ls(all = TRUE))"},{"path":"r-суурь-ойлголтууд.html","id":"пайплах","chapter":"3 R суурь ойлголтууд","heading":"3.11 Пайплах (%>%)","text":"Объектуудтай ажиллах хоёр ерөнхий арга нь:Pipes/tidyverse - пайп нь функцээс функц рүү объектыг илгээдэг - объект биш харин үйлдлийг онцолдог.Pipes/tidyverse - пайп нь функцээс функц рүү объектыг илгээдэг - объект биш харин үйлдлийг онцолдог.Завсрын объектуудыг тодорхойлох - объект дахин дахин тодорхойлогддог - объект дээр анхаарлаа хандуулдагЗавсрын объектуудыг тодорхойлох - объект дахин дахин тодорхойлогддог - объект дээр анхаарлаа хандуулдаг","code":""},{"path":"r-суурь-ойлголтууд.html","id":"пайп","chapter":"3 R суурь ойлголтууд","heading":"Пайп","text":"Энгийнээр тайлбарлавал пайп оператор (%>%) нь завсрын гаралтыг нэг функцээс нөгөө функц рүү дамжуулдаг.Та үүнийг “дараа нь” гэж хэлж байна гэж бодож болно. Олон функцийг %>% ашиглан холбож болно.Пайплах нь үйлдлүүдийг гүйцэтгэж буй объектыг бус харин дараалсан үйлдлүүдийг онцолдогПайплах нь үйлдлүүдийг гүйцэтгэж буй объектыг бус харин дараалсан үйлдлүүдийг онцолдогНэг объект дээр дараалсан үйлдлүүдийг хийх шаардлагатай үед пайп нь хамгийн тохиромжтойНэг объект дээр дараалсан үйлдлүүдийг хийх шаардлагатай үед пайп нь хамгийн тохиромжтойПайп нь magrittr багцаас ашиглагддаг бөгөөд dplyr болон tidyverse багцад автоматаар ордогПайп нь magrittr багцаас ашиглагддаг бөгөөд dplyr болон tidyverse багцад автоматаар ордогПайп нь кодыг илүү цэвэрхэн, уншихад хялбар, ойлгомжтой болгох боломжтойПайп нь кодыг илүү цэвэрхэн, уншихад хялбар, ойлгомжтой болгох боломжтойTidyverse загварын гарын авлагаас энэ аргын талаар дэлгэрэнгүй уншина уу.“Бялуу жигнэх” зохиомол функцийг ашиглан харьцуулах хуурамч жишээ энд байна. Эхлээд, пайп арга:Пайп ашиглалтыг тайлбарласан өөр нэг холбоос энд байна.Пайп нь base функц биш юм. Пайп ашиглахын тулд magrittr багцыг суулгаж, ачаалах ёстой (энэ нь ихэвчлэн үүнийг багтаасан tidyverse эсвэл dplyr багцыг ачаалах замаар хийгддэг). Та magrittr багцын баримт бичигт пайпын талаар илүү ихийг уншиж болно.Бусад R командуудын нэгэн адил пайп нь <- оноох оператор оролцож байгаа эсэхээс хамаарч зөвхөн үр дүнг харуулах, объектыг хадгалах/дахин хадгалахад ашиглагдаж болно гэдгийг анхаарна уу. Доор хоёуланг нь харна уу:%<>%\nЭнэ бол magrittr багцын “оноолтын пайп” бөгөөд энэ нь объектыг урагш нь зөөж, мөн объектыг дахин тодорхойлдог. Энэ нь гинжин хэлхээний анхны пайп оператор байх ёстой. Энэ нь доор буй хоорондоо ижил утгатай хоёр жишээн дээр үзүүлсэн шиг товчлол юм:","code":"\n# Пайп синтакс ашиглан бялууг хэрхэн жигнэх тухай хуурамч жишээ \n\ncake <- flour %>%       # бялууг тодорхойлохдоо гурилаар эхэлж, дараа нь...\n  add(eggs) %>%   # өндөг нэмнэ\n  add(oil) %>%    # тос нэмнэ\n  add(water) %>%  # ус нэмнэ\n  mix_together(         # хооронд нь холино\n    utensil = spoon,\n    minutes = 2) %>%    \n  bake(degrees = 350,   # жигнэнэ\n       system = \"fahrenheit\",\n       minutes = 35) %>%  \n  let_cool()            # хөргөнө\n# Насны ангиллаар нийлбэр тоо болгон тодорхойлох объект үүсгэх буюу дарж бичих (хэвлэсэнгүй) \nlinelist_summary <- linelist %>% \n  count(age_cat)\n# Тооллогын хүснэгтийг консол дээр хэвлээрэй, гэхдээ үүнийг бүү хадгал\nlinelist %>% \n  count(age_cat)##   age_cat    n\n## 1     0-4 1095\n## 2     5-9 1095\n## 3   10-14  941\n## 4   15-19  743\n## 5   20-29 1073\n## 6   30-49  754\n## 7   50-69   95\n## 8     70+    6\n## 9    <NA>   86\nlinelist <- linelist %>%\n  filter(age > 50)\n\nlinelist %<>% filter(age > 50)"},{"path":"r-суурь-ойлголтууд.html","id":"завсрын-объектуудыг-тодорхойлох","chapter":"3 R суурь ойлголтууд","heading":"Завсрын объектуудыг тодорхойлох","text":"Объект/датафрэйм өөрчлөх энэ арга нь дараах тохиолдолд илүү дээр байж болох юм:Та олон объектыг өөрчлөх хэрэгтэйТа олон объектыг өөрчлөх хэрэгтэйЗавсрын шатууд нь утга учиртай бөгөөд тусдаа объектын нэрийг авах ёстойЗавсрын шатууд нь утга учиртай бөгөөд тусдаа объектын нэрийг авах ёстойЭрсдэл:Алхам бүрт шинэ объект бий болгоно гэдэг нь маш олон объект бий болгоно гэсэн үг. Хэрэв та буруу объект ашиглавал түүнийгээ мэдэхгүй байж магадгүй юм!Алхам бүрт шинэ объект бий болгоно гэдэг нь маш олон объект бий болгоно гэсэн үг. Хэрэв та буруу объект ашиглавал түүнийгээ мэдэхгүй байж магадгүй юм!Бүх объектыг нэрлэх нь төөрөгдөл үүсгэдэгБүх объектыг нэрлэх нь төөрөгдөл үүсгэдэгАлдаа илрүүлэхэд амаргүй байж магадгүйАлдаа илрүүлэхэд амаргүй байж магадгүйНэг бол завсрын объект бүрийг нэрлэх эсвэл эх хувийг дарж бичих эсвэл бүх функцийг нэгтгэх. Бүгд өөрийн гэсэн эрсдэлтэй байдаг.Доорх код нь дээрхтэй адил хуурамч “бялуу” жишээ юм, гэхдээ энэ загварыг ашиглаж байна:Бүх функцийг нэгтгэх - үүнийг уншихад хэцүү:","code":"\n# Энэ аргыг ашиглан бялууг хэрхэн жигнэх тухай хуурамч жишээ (завсрын объектыг тодорхойлох) \nbatter_1 <- left_join(flour, eggs)\nbatter_2 <- left_join(batter_1, oil)\nbatter_3 <- left_join(batter_2, water)\n\nbatter_4 <- mix_together(object = batter_3, utensil = spoon, minutes = 2)\n\ncake <- bake(batter_4, degrees = 350, system = \"fahrenheit\", minutes = 35)\n\ncake <- let_cool(cake)\n# олон функцийг хослуулах/нэгтгэх жишээ - уншихад хэцүү \ncake <- let_cool(bake(mix_together(batter_3, utensil = spoon, minutes = 2), degrees = 350, system = \"fahrenheit\", minutes = 35))"},{"path":"r-суурь-ойлголтууд.html","id":"operators","chapter":"3 R суурь ойлголтууд","heading":"3.12 Гол операторууд болон функцууд","text":"Энэ хэсэгт R хэлний гол операторуудыг дэлгэрэнгүй тайлбарлаж байна, тухайлбал:Тодорхойлогч операторуудТодорхойлогч операторуудХарьцааны операторууд (бага, тэнцүү..)Харьцааны операторууд (бага, тэнцүү..)Логик операторууд (ба, эсвэл …)Логик операторууд (ба, эсвэл …)Хоосон утгатай ажиллахХоосон утгатай ажиллахМатематикийн операторууд болон функцууд (+/-, >, sum(), median(), …)Математикийн операторууд болон функцууд (+/-, >, sum(), median(), …)%% оператор%% оператор","code":""},{"path":"r-суурь-ойлголтууд.html","id":"оноолтын-операторууд","chapter":"3 R суурь ойлголтууд","heading":"Оноолтын операторууд","text":"<-R хэлний үндсэн оноолтын оператор нь <-. объектын_нэр <- утга гэж ашиглагддаг. Энэхүү оноолтын операторыг мөн = ашиглан бичиж болно. Бид ерөнхий R хэрэглээнд <--г ашиглахыг зөвлөж байна. Мөн уншихад хялбар байх үүднээс ийм операторуудыг зайгаар хүрээлэхийг зөвлөж байна.<<-Хэрэв \\[Функц бичих\\] эсвэл R-г үүсвэртэй скриптүүдтэй интерактив байдлаар ашиглаж байгаа бол та оноолтын оператор <<- (base R-аас) ашиглах шаардлагатай болж магадгүй юм. Энэ операторыг дээд түвшний “толгой” R орчин дахь объектыг тодорхойлоход ашигладаг. Үүний талаар энэхүү онлайн лавлагааг үзнэ үү.%<>%Энэ бол magrittr багцын “оноолтын пайп” бөгөөд энэ нь объектыг урагш нь зөөж, мөн объектыг дахин тодорхойлдог. Энэ нь гинжин хэлхээний анхны пайп оператор байх ёстой бөгөөд товчлолын нэг хэлбэр юм. Доорх хоёр команд нь яг ижил үйлдэл хийж байна:Энэ бол magrittr багцын “оноолтын пайп” бөгөөд энэ нь объектыг урагш зөөж, мөн объектыг дахин тодорхойлдог. Энэ нь гинжин хэлхээний анхны хоолойн оператор байх ёстой. Энэ нь доор буй хоорондоо ижил утгатай хоёр жишээн дээр үзүүлсэн шиг товчлол юм:Дээрх код нь доорх кодтой яг ижил үйлдэл хийж байна.%<+%Энэ нь ggtree багц ашиглан филогенетик модонд дата нэмэхэд хэрэглэгддэг. \\[Филогенетик мод\\] дээрх хуудас эсвэл энэ онлайн номыг үзнэ үү.","code":"\nlinelist <- linelist %>% \n  mutate(age_months = age_years * 12)\nlinelist %<>% mutate(age_months = age_years * 12)"},{"path":"r-суурь-ойлголтууд.html","id":"харьцааны-болон-логик-операторууд","chapter":"3 R суурь ойлголтууд","heading":"Харьцааны болон логик операторууд","text":"Харьцааны операторууд утгыг хооронд нь харьцуулах, шинэ хувьсагч болон датасетийн доторх хэсгийг тодорхойлоход ихэвчлэн ашиглагддаг. R хэл дээрх нийтлэг харьцааны операторууд энд байна:ба гэх мэт логик операторуудыг ихэвчлэн харьцааны операторуудыг холбож, илүү комплекс шалгууруудыг бий болгоход ашигладаг. Нарийн комплекс мэдэгдлүүд бүлэглэх болон үйлдлийн дарааллыг хадгалахын тулд бөөрөнхий хаалт ( ) ашиглах шаардлагатай байж болно.Logical operators, , often used connect relational operators create complicated criteria. Complex statements might require parentheses ( ) grouping order application.Жишээ нь, доор бидэнд тохиолдлын тодорхойлолтыг бий болгохдоо ашиглахыг хүсэж буй хоёр хувьсагч бүхий лайнлист байна: тестийн үр дүн hep_e_rdt болон тухайн өрхөд өөр тохиолдол байгаа эсэхийг илтгэх other_cases_in_hh. Дараах команд нь case_when() функцийг ашиглан case_def гэсэн шинэ хувьсагчийг үүсгэнэ.R хэл нь үсэгний том, жижигт мэдрэг тул “Positive” нь “positive”-ээс өөр гэдгийг анхаарна уу…","code":"\nlinelist_cleaned <- linelist %>%\n  mutate(case_def = case_when(\n    is.na(rdt_result) & is.na(other_case_in_home)            ~ NA_character_,\n    rdt_result == \"Positive\"                                 ~ \"Confirmed\",\n    rdt_result != \"Positive\" & other_cases_in_home == \"Yes\"  ~ \"Probable\",\n    TRUE                                                     ~ \"Suspected\"\n  ))"},{"path":"r-суурь-ойлголтууд.html","id":"хоосон-утгууд","chapter":"3 R суурь ойлголтууд","heading":"Хоосон утгууд","text":"R-д хоосон утгыг NA (“нөөцлөгдсөн” утга) гэсэн тусгай утгаар илэрхийлнэ (N ба том үсэг- ишлэл дотор биш). Хэрэв та хоосон датаг өөр аргаар (жишээ нь 99, “Missing” эсвэл .) бүртгэсэн дата импортлох юм бол эдгээр утгыг NA руу дахин кодлохыг хүсэж болох юм. Үүнийг хэрхэн хийх талаар \\[Импорт, экспорт\\] хуудаснаас үзнэ үү.Утга нь NA эсэхийг шалгахын тулд TRUE эсвэл FALSE буцаадаг .na() тусгай функцийг ашиглана.Хоосон, хязгааргүй (infinite), NULL болон боломжгүй утгуудын талаар дэлгэрэнгүйг \\[Хоосон дата\\] хэсгээс уншина уу. \\[Импорт, экспорт\\] хуудсан дээр дата импортлохдоо хоосон утгыг хэрхэн хөрвүүлэх талаар олж мэдээрэй.","code":"\nrdt_result <- c(\"Positive\", \"Suspected\", \"Positive\", NA)   # хоёр эерэг тохиолдол, нэг сэжигтэй, нэг нь тодорхойгүй байна \nis.na(rdt_result)  # rdt_result-ийн утга NA эсэхийг шалгана## [1] FALSE FALSE FALSE  TRUE"},{"path":"r-суурь-ойлголтууд.html","id":"математик-статистик","chapter":"3 R суурь ойлголтууд","heading":"Математик, статистик","text":"Энэ хуудасны бүх операторууд болон функцууд нь base R-д ашиглахад бэлэн бий.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"математик-операторууд","chapter":"3 R суурь ойлголтууд","heading":"Математик операторууд","text":"Эдгээрийг ихэвчлэн нэмэх, хуваах, шинэ багана үүсгэх гэх мэт үйлдлүүдэд ашигладаг. Доорх нь R хэл дээрх нийтлэг математик операторууд юм. Операторуудын эргэн тойронд хоосон зай тавих эсэх нь чухал биш.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"математик-функцууд","chapter":"3 R суурь ойлголтууд","heading":"Математик функцууд","text":"Тэмдэглэл: round() функцын digits = аргумент нь аравтын бутархайн тоог заана. signif() функцыг ашиглан хэд хэдэн чухал тоо болгон бүхэлдэнэ үү.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"шинжлэх-ухааны-тэмдэглэгээ","chapter":"3 R суурь ойлголтууд","heading":"Шинжлэх ухааны тэмдэглэгээ","text":"Шинжлэх ухааны тэмдэглэгээг ашиглах магадлал нь scipen тохируулгын утгаас хамаарна.?options хуудаснаас: scipen нь тоон утгыг тогтмол эсвэл экспоненциал тэмдэглэгээгээр хэвлэх шийдвэр гаргахад хэрэглэх шийтгэл юм. Эерэг утгууд нь тогтмол, сөрөг утгууд нь шинжлэх ухааны тэмдэглэгээ рүү хазайдаг: “scipen” цифрээс илүү өргөн биш л бол тогтмол тэмдэглэгээг илүүд үзнэ.Хэрэв үүн дээр бага тоо (жишээ нь 0) тавьсан бол үргэлж “асаалттай” байх болно. R сессийн шинжлэх ухааны тэмдэглэгээг “унтраахын” тулд үүнийг маш өндөр тоонд тохируулна уу, жишээлбэл:","code":"\n# шинжлэх ухааны тэмдэглэгээг унтраа\noptions(scipen=999)"},{"path":"r-суурь-ойлголтууд.html","id":"бүхэлдэх","chapter":"3 R суурь ойлголтууд","heading":"Бүхэлдэх","text":"АЮУЛ: round() функц нь зөвхөн дээд тоо нь тэгш байвал .5-аас дээшээ бүхэлддэг “банкны бүхэлдэх” аргыг ашигладаг. Хагасыг хамгийн ойрын бүхэл тоо хүртэл тогтмол бүхэлдэхийн тулд janitor багцын round_half_up()-г ашиглана уу. Энэ тайлбарыг үзнэ үү.","code":"\n# өөрийн ажилд тохирох бүхэлдэх функцийг ашиглана уу \nround(c(2.5, 3.5))## [1] 2 4\njanitor::round_half_up(c(2.5, 3.5))## [1] 3 4"},{"path":"r-суурь-ойлголтууд.html","id":"статистикийн-функцууд","chapter":"3 R суурь ойлголтууд","heading":"Статистикийн функцууд","text":"АНХААРУУЛГА: Доорх функцууд нь тооцоололдоо хоосон утгуудыг өгөгдмөлөөр оруулдаг. na.rm = TRUE аргументыг заагаагүй бол хоосон утгууд нь NA үүсгэнэ. Үүнийг товчоор na.rm = T гэж бичиж болно.Тэмдэглэл:*quantile(): x нь шалгах тоон вектор, probs = нь 0-ээс 1.0 хоорондахь магадлал бүхий тоон вектор, жишээлбэл c(0.5, 0.8, 0.85)**summary(): дундаж, голч, нийтлэг персентилүүд зэрэг тоон векторын хураангуйг өгдөгАЮУЛ: Хэрэв дээрх функцүүдийн аль нэгэнд тоон вектор өгвөл c() дотор тоонуудыг нийлүүлж оруулахаа мартуузай.","code":"\n# Хэрэв функцэд тоонууд өгч байгаа бол тэдгээрийг c()-д боож өгнө үү. \nmean(1, 6, 12, 10, 5, 0)    # !!! БУРУУ !!!  ## [1] 1\nmean(c(1, 6, 12, 10, 5, 0)) # ЗӨВ## [1] 5.666667"},{"path":"r-суурь-ойлголтууд.html","id":"бусад-хэрэгтэй-функцууд","chapter":"3 R суурь ойлголтууд","heading":"Бусад хэрэгтэй функцууд","text":"","code":""},{"path":"r-суурь-ойлголтууд.html","id":"in","chapter":"3 R суурь ойлголтууд","heading":"%in%","text":"Утгыг тааруулах, утгыг вектор эсвэл датафрэйм дотор байгаа эсэхийг хурдан үнэлэхэд маш хэрэгтэй оператор.Утга нь вектор %% (%дотор%) байхгүй эсэхийг шалгахын тулд логик хэллэгийн өмнө анхаарлын тэмдэг (!) тавина:dplyr багцын case_when() функцийг ашиглахад %% маш хэрэгтэй. Та векторыг өмнө нь тодорхойлж, дараа нь лавлаж болно. Жишээлбэл:Тэмдэглэл: Хэрэв та stringr багцын str_detect() ашиглан стрингийн хэсгийг илрүүлэхийг хүсвэл энэ нь c(\"1\", \"Yes\", \"yes\", \"y\") гэх мэт тэмдэгтийн векторыг хүлээн авдаггүй. Үүний оронд “1|Yes|yes|y” гэх мэт босоо шугам бүхий нэг хураангуй стринг бүхий ердийн илэрхийлэл (regular expression) өгөх ёстой. Жишээлбэл, str_detect(hospitalized, \"1|Yes|yes|y\"). Дэлгэрэнгүй мэдээллийг \\[Тэмдэгт болон стринг\\] хуудаснаас үзнэ үү.Та энэ командыг ашиглан тэмдэгтийн векторыг нэрлэсэн ердийн илэрхийлэл болгон хувиргаж болно:","code":"\nmy_vector <- c(\"a\", \"b\", \"c\", \"d\")\n\"a\" %in% my_vector## [1] TRUE\n\"h\" %in% my_vector## [1] FALSE\n# үгүйсгэхэд өмнө нь анхаарлын тэмдэг тавина\n!\"a\" %in% my_vector## [1] FALSE\n!\"h\" %in% my_vector## [1] TRUE\naffirmative <- c(\"1\", \"Yes\", \"YES\", \"yes\", \"y\", \"Y\", \"oui\", \"Oui\", \"Si\")\n\nlinelist <- linelist %>% \n  mutate(child_hospitaled = case_when(\n    hospitalized %in% affirmative & age < 18 ~ \"Hospitalized Child\",\n    TRUE                                      ~ \"Not\"))\naffirmative <- c(\"1\", \"Yes\", \"YES\", \"yes\", \"y\", \"Y\", \"oui\", \"Oui\", \"Si\")\naffirmative## [1] \"1\"   \"Yes\" \"YES\" \"yes\" \"y\"   \"Y\"   \"oui\" \"Oui\" \"Si\"\n# багасгах \naffirmative_str_search <- paste0(affirmative, collapse = \"|\")  # base R\naffirmative_str_search <- str_c(affirmative, collapse = \"|\")   # stringr багц\n\naffirmative_str_search## [1] \"1|Yes|YES|yes|y|Y|oui|Oui|Si\""},{"path":"r-суурь-ойлголтууд.html","id":"алдаа-болон-анхааруулга","chapter":"3 R суурь ойлголтууд","heading":"3.13 Алдаа болон анхааруулга","text":"Энэ хэсэгт дараахь зүйлийг тайлбарласан:Алдаа болон анхааруулгын ялгааАлдаа болон анхааруулгын ялгааR код бичих ерөнхий синтакс зөвлөмжүүдR код бичих ерөнхий синтакс зөвлөмжүүдКодын туслахуудКодын туслахуудНийтлэг алдаа, анхааруулга, алдааг олж засварлах зөвлөмжийг \\[Алдаа болон тусламж\\] хуудаснаас олж болно.","code":""},{"path":"r-суурь-ойлголтууд.html","id":"алдаа-versus-анхааруулга","chapter":"3 R суурь ойлголтууд","heading":"Алдаа versus анхааруулга","text":"Заримдаа команд ажиллуулах үед R консол танд анхааруулга эсвэл алдааны мэдэгдлийг улаан бичвэрээр харуулах болно.Анхааруулга нь R таны командыг гүйцэтгэсэн боловч нэмэлт алхмуудыг хийх хэрэгтэй болсон эсвэл таны мэдэж байх ёстой хэвийн бус гаралт гаргасан гэсэн үг юм.Анхааруулга нь R таны командыг гүйцэтгэсэн боловч нэмэлт алхмуудыг хийх хэрэгтэй болсон эсвэл таны мэдэж байх ёстой хэвийн бус гаралт гаргасан гэсэн үг юм.Алдаа нь R таны командыг гүйцээж чадаагүй гэсэн үг.Алдаа нь R таны командыг гүйцээж чадаагүй гэсэн үг.Сэжүүр хайх:Алдаа/анхааруулах мессеж нь ихэвчлэн асуудлын мөрийн дугаарыг агуулна.Алдаа/анхааруулах мессеж нь ихэвчлэн асуудлын мөрийн дугаарыг агуулна.Хэрэв объект “үл мэдэгдэх” эсвэл “олдохгүй” бол та буруу бичсэн, library() функцээр багц ачааллахаа мартсан эсвэл өөрчлөлт хийсний дараа скриптийг дахин ажиллуулахаа мартсан байж магадгүй юм.Хэрэв объект “үл мэдэгдэх” эсвэл “олдохгүй” бол та буруу бичсэн, library() функцээр багц ачааллахаа мартсан эсвэл өөрчлөлт хийсний дараа скриптийг дахин ажиллуулахаа мартсан байж магадгүй юм.Хэрэв эдгээрийн аль нь ч биш байвал алдааны мессежийг зарим үндсэн нэр томъёоны хамт Google рүү хуулна уу - өөр хэн нэгэн үүнийг аль хэдийн даван туулсан байх магадлал өндөр!","code":""},{"path":"r-суурь-ойлголтууд.html","id":"синтаксийн-ерөнхий-зөвлөмжүүд","chapter":"3 R суурь ойлголтууд","heading":"Синтаксийн ерөнхий зөвлөмжүүд","text":"R дээр команд бичихдээ алдаа, анхааруулгаас зайлсхийхийн тулд хэд хэдэн зүйлийг санах хэрэгтэй:Үргэлж хаалт хаах - зөвлөгөө: кодын хэсэг бүрийн нээх “(” ба хаах хаалтуудын “)” тоог тоол.Үргэлж хаалт хаах - зөвлөгөө: кодын хэсэг бүрийн нээх “(” ба хаах хаалтуудын “)” тоог тоол.Багана болон объектын нэрэнд хоосон зай оруулахаас зайлсхий. Оронд нь доогуур зураас ( _ ) эсвэл цэг ( . ) ашиглана ууБагана болон объектын нэрэнд хоосон зай оруулахаас зайлсхий. Оронд нь доогуур зураас ( _ ) эсвэл цэг ( . ) ашиглана ууФункцийн аргументуудыг таслалаар салгахаа бүү мартаарайФункцийн аргументуудыг таслалаар салгахаа бүү мартаарайR нь үсгийн том, жижигт мэдрэг бөгөөд Variable_A нь variable_A-аас ялгаатай гэсэн үгR нь үсгийн том, жижигт мэдрэг бөгөөд Variable_A нь variable_A-аас ялгаатай гэсэн үг","code":""},{"path":"r-суурь-ойлголтууд.html","id":"кодын-туслахууд","chapter":"3 R суурь ойлголтууд","heading":"Кодын туслахууд","text":"Аливаа скрипт (RMarkdown эсвэл бусад) нь таныг алдаа гаргасан үед сэжүүр өгөх болно. Жишээлбэл, хэрэв та шаардлагатай газар таслал бичих, эсвэл хаалт хаахаа мартсан бол RStudio танд анхааруулахын тулд тухайн мөрөнд, скриптийн баруун талд туг өргөх болно.","code":""},{"path":"r-руу-шилжих.html","id":"r-руу-шилжих","chapter":"4 R руу шилжих","heading":"4 R руу шилжих","text":"Хэрэв та R руу өөр программаас шилжиж байгаа бол бид доор зарим зөвлөгөө, материалыг танд өгөх болно.R нь 1990-ээд оны сүүлээр гарч ирсэн бөгөөд түүнээс хойш хамрах хүрээ нь эрс нэмэгдсэн. R маш өргөн хүрээний чадавхитай тул арилжааны статитистик программууд өрсөлдөх чадвартай хэвээр үлдэхийн тулд R хөгжүүлэлтэд хариу үйлдэл үзүүлсэн! (R, SPSS, SAS, STATA, Python-г харьцуулсан энэ нийтлэлийг уншина уу).Үүний зэрэгцээ R-ыг 10 жилийн өмнөхтэй харьцуулахад сурахад илүү хялбар болсон. Өмнө нь R эхлэн суралцагчдад их хэцүү гэсэн ойлголттой байсан бол RStudio зэрэг хэрэглэгчид ээлтэй интерфэйс, tidyverse гэх мэт ойлгомжтой код, сургалтын олон материалын тусламжтайгаар энэ нь илүү хялбар болсон.Та бүү сүрдээрэй- бидэнтэй нийлж R-ын ертөнцтэй танилцаарай!","code":""},{"path":"r-руу-шилжих.html","id":"excel-ээс","chapter":"4 R руу шилжих","heading":"4.1 Excel-ээс","text":"Excel-ээс R руу шууд шилжих нь тун хүрч болохуйц зорилго юм. Энэ нь эхэндээ сүрдэм мэт санагдаж болох ч та үүнийг хийж чадна!Excel-ийн өндөр ур чадвартай хүн VBA гэх мэт скрипт хэрэгслийг ашиглан Excel дээр маш ахисан түвшний үйлдлүүдийг хийж чаддаг. Excel програмыг дэлхий даяар ашигладаг бөгөөд тархвар судлаачийн зайлшгүй шаардлагатай хэрэгсэл юм. Гэсэн хэдий ч үүнийг R-аар орлуулах нь таны ажлын урсгалыг эрс сайжруулж, өргөжүүлэх боломжтой.","code":""},{"path":"r-руу-шилжих.html","id":"ашиг-тус","chapter":"4 R руу шилжих","heading":"Ашиг тус","text":"R-ийг ашиглах нь цаг хугацаа хэмнэсэн, илүү тогтвортой, үнэн зөв дүн шинжилгээ хийх, дахин давтагдах, хуваалцах боломжтой, алдааг хурдан засах зэрэг асар их ашиг тусыг өгдөг гэдгийг та олж мэдэх болно. Аливаа шинэ программ сурахын нэгэн адил та сайн ашиглаж сурахын тулд цаг хугацааны хөрөнгө оруулалт хийх ёстой суралцах “муруй” байдаг. Үүний үр дүнд ирэх ашиг нь мэдэгдэхүйц байх бөгөөд R танд олон шинэ боломжуудыг нээх болно.Excel бол анхлан суралцагчдад “point--click” буюу чиглүүлээд товших замаар энгийн дүн шинжилгээ хийх, дүрслэн харуулахад хялбар байдаг алдартай програм хангамж. Үүнтэй харьцуулахад, R функц болон интерфэйстэй дасахад хэдэн долоо хоног шаардлагатай. Гэсэн хэдий ч R сүүлийн жилүүдэд анхлан суралцагчдад илүү ээлтэй болж хөгжсөн.Excel-ийн олон ажлын урсгал нь санах ой болон давталт дээр тулгуурладаг тул алдаа гаргах боломж их байдаг. Цаашилбал, ерөнхийдөө дата цэвэрлэх, дүн шинжилгээ хийх арга зүй, ашигласан тэгшитгэлүүд нь нүднээс далд байдаг. Үүний улмаас шинээр ажилд орсон хүн өмнөх Excel-ийн ажлын дэвтэр юу хийж байгааг болон алдааг хэрхэн олж засварлах талаар сурахад ихээхэн цаг хугацаа шаарддаг. Харин R дээр бүх алхмуудыг скрипт дээр тодорхой бичсэн бөгөөд хялбархан харж, засварлаж, засч, бусад датасетэд хэрэглэж болно.Excel-ээс R руу шилжихийн тулд та хэд хэдэн чухал замаар сэтгэлгээгээ өөрчлөх шаардлагатай:","code":""},{"path":"r-руу-шилжих.html","id":"цэгцтэй-дата-tidy-data","chapter":"4 R руу шилжих","heading":"Цэгцтэй дата (Tidy data)","text":"“Хүн уншдаг” замбараагүй датаны оронд машинаар уншигдахуйц “цэгцтэй” датаг ашигла. R хэл дээрх “цэгцтэй” датаны талаарх энэхүү зааварт тайлбарласны дагуу эдгээр нь “цэгцтэй” датанд тавигдах гурван үндсэн шаардлага юм:Хувьсагч бүр өөрийн гэсэн баганатай байх ёстойХувьсагч бүр өөрийн гэсэн баганатай байх ёстойАжиглалт бүр өөрийн гэсэн мөртэй байх ёстойАжиглалт бүр өөрийн гэсэн мөртэй байх ёстойУтга бүр өөрийн нүдтэй байх ёстойУтга бүр өөрийн нүдтэй байх ёстойExcel-ийн хэрэглэгчдэд - Excel-ийн “хүснэгтүүд” датаг стандартчилах, форматыг урьдчилан таамаглах боломжтой болгоход ямар үүрэг гүйцэтгэдэг талаар бодож үзээрэй.“Цэгцтэй” датаны жишээ бол энэ гарын авлагад ашигласан тохиолдлын лайнлист байж болно - хувьсагч бүр нэг баганад агуулагддаг, ажиглалт (нэг тохиолдол) бүр өөрийн гэсэн мөртэй, утга бүр нь зөвхөн нэг нүдэнд байна. Та лайнлистийн эхний 50 мөрийг доороос харж болно:Эмх цэгцгүй дататай тулгардаг гол шалтгаан нь Excel-ийн олон хүснэгтүүд нь машин/програм хангамжаар уншихад хялбар биш, харин хүн уншихад хялбар болгох зорилгоор бүтээгдсэн байдаг.Ялгааг олж харахад тань туслахын тулд машинд унших чадвараас илүү хүний унших чадварыг чухалчилдаг эмх цэгцгүй датаны зарим зохиомол жишээг доор харуулав:Асуудлууд: Дээрх хүснэгтэд R-д амархан илэрхийлэгдэггүй, нэгтгэсэн нүднүүд байна. Аль мөрийг “толгой” гэж үзэх нь тодорхойгүй байна. Өнгөнд суурилсан толь бичиг баруун талд байгаа бөгөөд нүдний утгуудыг өнгөөр дүрсэлсэн байдаг нь R-д мөн амар уншигддаггүй (өнгө харалган хүмүүст ч бас!). Цаашилбал, өөр өөр мэдээллийг нэг нүдэнд нэгтгэсэн (нэг хэсэгт ажилладаг олон түнш байгууллагууд, эсвэл “Partner D”-тэй нэг нүдэнд “TBC” статус).Асуудлууд: Дээрх хүснэгтэд датасет дотор олон тооны нэмэлт хоосон мөр, багана байна - энэ нь R-д цэвэрлэхэд хүндрэл үүсгэдэг. Цаашилбал, GPS-ийн координатууд нь тодорхой эмчилгээний төв бүрт хоёр мөрөнд дамнаж бичигдсэн байна. Мөн дээрээс нь GPS-ийн координатууд нь хоёр өөр форматтай байна!“Цэгцтэй” датасет нь хүний нүдээр уншихад хялбар биш байж болох ч дата цэвэрлэх, дүн шинжилгээ хийхэд илүү хялбар болгодог! Цэгцтэй датаг “урт” эсвэл “өргөн” гэх мэт янз бүрийн форматаар хадгалах боломжтой (\\[Датаг пивот хийх\\] хуудсыг үзнэ үү), гэхдээ дээрх зарчмууд хэвээр байна.","code":""},{"path":"r-руу-шилжих.html","id":"функцууд","chapter":"4 R руу шилжих","heading":"Функцууд","text":"“Функц” гэсэн R үг нь шинэ байж болох ч Excel-д энэ ойлголт томьёо хэлбэрээр байдаг. Excel-ийн томьёо нь мөн нарийн синтакс шаарддаг (жишээ нь, цэг таслал, хаалт байрлуулах). Таны хийх ёстой зүйл бол ердөө л R-н хэдэн шинэ функц болон тэдгээр нь хэрхэн хамтран ажилладаг талаар сурах явдал юм.","code":""},{"path":"r-руу-шилжих.html","id":"скриптүүд","chapter":"4 R руу шилжих","heading":"Скриптүүд","text":"Товчлуур дээр дарж, нүдийг чирэхийн оронд та алхам, процедур бүрийг “скрипт” болгон бичих болно. Зарим Excel-ийн хэрэглэгчид скрипт бичих аргыг ашигладаг “VBA макро”-г мэддэг байх.R скрипт нь алхам бүрийн зааварчилгаанаас бүрдэнэ. Энэ нь ямар ч хамтрагчдад скриптийг уншиж, таны хийсэн алхмуудыг хялбархан харах боломжийг олгоно. Ингэснээр алдаа эсвэл буруу тооцооллыг засахад тусалдаг. Жишээнүүдийг \\[R суурь ойлголтууд\\] бүлгийн скриптүүд хэсгээс үзнэ үү.R скриптийн нэг жишээ:","code":""},{"path":"r-руу-шилжих.html","id":"excel-ээс-r-шилжих-материалууд","chapter":"4 R руу шилжих","heading":"Excel-ээс-R шилжих материалууд","text":"Excel-ээс R руу шилжихэд туслах хэдэн хичээлийг эндээс үзнэ үү:R vs ExcelR vs ExcelExcel хэрэглэгчдэд зориулсан R хэл дээрх RStudio курсExcel хэрэглэгчдэд зориулсан R хэл дээрх RStudio курс","code":""},{"path":"r-руу-шилжих.html","id":"r-excel-ийн-харилцан-үйлчлэл","chapter":"4 R руу шилжих","heading":"R-Excel-ийн харилцан үйлчлэл","text":"R нь Excel-ийн ажлын номыг импортлох, дататай ажиллах, Excel файлуудыг экспортлох/хадгалах, Excel хуудасны нарийн ширийн зүйлстэй ажиллах найдвартай аргуудтай.Зарим илүү гоо зүйн Excel форматыг оруулах үед (жишээ нь налуу текст, босоо текст гэх мэт) алдагдаж болдог. Хэрэв таны ажлын урсгал Excel-ийн анхны форматыг хадгалахын зэрэгцээ R болон Excel хооронд бичиг баримтыг хооронд нь дамжуулах шаардлагатай бол openxlsx зэрэг багцуудыг ашиглаж үзээрэй.","code":""},{"path":"r-руу-шилжих.html","id":"stata-гаас","chapter":"4 R руу шилжих","heading":"4.2 Stata-гаас","text":"Stata-гаас R-д ирэхОлон тархвар судлаачдад эхлээд Stata-г хэрхэн ашиглахыг заадаг бөгөөд R-д шилжих нь хэцүү юм шиг санагддаг. Гэсэн хэдий ч, хэрэв та Stata-г сайн хэрэглэж сурсан бол R руу шилжих нь таны бодож байгаагаас илүү хялбар байх болно. Дата хэрхэн үүсгэх, өөрчлөх, дүн шинжилгээ хийх функцууд хэрхэн хэрэгжих зэрэгт Stata болон R хоёрын хооронд зарим нэг гол ялгаа байдаг ч эдгээр гол ялгааг сурсны дараа та ур чадвараа хөрвүүлэх боломжтой болно.Stata болон R-ын хоорондох зарим үндсэн хөрвүүлгийг доор харуулав, энэ нь танд энэхүү гарын авлагыг унших явцад хэрэг болж магадгүй.Ерөнхий тэмдэглэлАжлын директорДата импортлох, харахДататай ажиллах үндсэн командуудХувьсагчдыг drop varname ашиглан хасдагVariables dropped using drop varnameДескриптив дүн шинжилгээХэдийгээр энэ жагсаалт нь Stata командуудыг R руу хөрвүүлэх үндсэн зарчмуудын тоймыг өгч буй боловч энэ нь бүрэн гүйцэд биш юм. R руу шилжиж байгаа Stata хэрэглэгчдэд сонирхолтой байж болох өөр олон эх сурвалжууд байдаг:https://dss.princeton.edu/training/RStata.pdfhttps://clanfear.github.io/Stata_R_Equivalency/docs/r_stata_commands.htmlhttp://r4stats.com/books/r4stata/","code":""},{"path":"r-руу-шилжих.html","id":"sas-аас","chapter":"4 R руу шилжих","heading":"4.3 SAS-аас","text":"SAS-аас R-д ирэхSAS нь нийгмийн эрүүл мэндийн агентлагууд болон эрдэм шинжилгээ, судалгааны салбарт түгээмэл хэрэглэгддэг. Хэдийгээр шинэ программ руу шилжих нь тийм ч хялбар биш боловч SAS, R хоёрын гол ялгааг ойлгох нь таныг одоогийн программаа ашиглан шинэ программ руу шилжихэд тусална. SAS болон R-ын дата менежмент болон дескриптив дүн шинжилгээний үндсэн хөрвүүлгүүдийг доор харуулав.Ерөнхий тэмдэглэлАжлын директорДата импортлох, харахДататай ажиллах үндсэн командуудДескриптив дүн шинжилгээЗарим хэрэгтэй нэмэлт материалууд:R SAS SPSS Users (2011)SAS R, Second Edition (2014)","code":""},{"path":"r-руу-шилжих.html","id":"датаны-харилцан-ажиллах-чадвар","chapter":"4 R руу шилжих","heading":"4.4 Датаны харилцан ажиллах чадвар","text":"R багц rio нь STATA-ын .dta файл, SAS-ын .xpt, .sas7bdat файлууд, SPSS-ийн .por, .sav файлууд болон бусад олон файлуудыг хэрхэн импортлох, экспортлох боломжтой талаар дэлгэрэнгүйг \\[Импорт, экспорт\\] хуудаснаас үзнэ үү.","code":""},{"path":"санал-болгох-багцууд.html","id":"санал-болгох-багцууд","chapter":"5 Санал болгох багцууд","heading":"5 Санал болгох багцууд","text":"R -дээр тархвар судлалын ажилд өргөн хэрэглэдэг багцуудыг доор жагсаав. Доорх кодыг шууд хуулж аваад уншуулж болно. Уншуулсан код CRAN –аас эдгээр багцуудыг татаж аваад, тухайн нээлттэй R- дээр шууд ачааллаж өгдөг. Хэрэв өмнө нь татаж авагдсан багц байсан бол зөвхөн ачааллах үйлдэл нь хийгднэ.Доорх жагсаалтад ашиглах шаардлагагүй багц буй бол кодны урд нь # тэмдгийг тавьж идэвхигүйжүүлж болно.Тэмдэглэл:Доор кодыг уншуулахаас өмнө pacman багцыг суулга. install.packages(\"pacman\")-кодыг уншуулж татаж авч болно. Энэ багцын p_load() функц нь аливаа багцыг шаардлагатай тохиолдолд суулгаад мөн ачааллаад тухайн нээлттэй R дээр шууд ашиглахад бэлэн болгож өгдгөөрөө онцлог. Бид энэ номонд ихэвчлэн p_load() -ыг ашиглана. Харин base R-ын багцуудыг татаж авах шаардлагагүй ба library()–ыг шууд уншуулж, ажиллуулж болно.Аливаа багцыг суулгахад хамт суулгагдаж/ачааллагддаг багцуудыг догол мөр, болон “хэш” тэмдгээр тэмдэглэсэн. Жишээ нь ggplot2 багц бол tidyverse багцын харьяа юм.Хэрэв функцын нэрс олон багцуудад давхардаж орсон бол тухайн функцыг ашиглах үед хамгийн сүүлд ачааллагдсан багцын функц ажиллана. Үүнийг masking гэх ба энэ талаар [R basics] хэсгээс нэмж уншна уу. Мөн conflicted багцыг ашиглаж ийм давхардалтыг шийдвэрлэж боломжтой.[R basics] хэсгийн pacman болон masking гэсэн хэсгүүдийг уншна уу.Энэхүү номыг боловсруулахад R, RStudio, болон R багцуудын хэддүгээр хувилбарыг ашигласан талаар [Editorial technical notes] хэсгээс харна уу.","code":""},{"path":"санал-болгох-багцууд.html","id":"cran--ын-багцууд","chapter":"5 Санал болгох багцууд","heading":"5.1 CRAN -ын багцууд","text":"","code":"\n##########################################\n# Тархвар судлалын хэрэглээнд тохиромжтой R –ын багцууд\n##########################################\n\n# Энэхүү код pacman багцын p_load() функцыг ашигласан. Энэ нь аливаа кодыг уншуулахад шаардлагатай багц таньд суулгагдаагүй байгаа  тохиолдолд, тухайн багцыг суулгаад, шууд ачааллуулдаг функц.\n\n\n# \"pacman\" багц суусан эсэхийг шалга!\nif (!require(\"pacman\")) install.packages(\"pacman\")\n\n\n# CRAN-аас татаж авах боломжтой багцууд\n##############################\npacman::p_load(\n     \n     # R-ыг сурах\n     ############\n     learnr,   # RStudio Tutorial цонхон дээрх интерактив хичээл\n     swirl,    # R console дээрх интерактив хичээл\n        \n     # R төсөл болон файлын менежмент\n     #############################\n     here,     # R төслийн үндсэн хавтастай холбоотой файлын зам\n     rio,      # өгөгдлийн олон янзын хэлбэрийг импортлох/экспортлох \n     openxlsx, # олон хуудастай (sheet) Excel файлыг импортлох/экспортлох \n  \n     # Багц суулгах\n     ################################\n     pacman,   # багц суулгаж/ачааллана\n     renv,     # багаар хамтран ажиллахад багцын хувилбаруудыг тохируулна\n     remotes,  # github –аас татаж авч суулгах\n\n     # Өгөгдлийн ерөнхий менежмент  \n     #########################\n     tidyverse,    # өгөгдлийг цэгцтэй (tidy) байдалд оруулж янзлах, танилцуулахад зориулсан олон багцыг агуулсан \n          #dplyr,      # Өгөгдөл янзлах\n          #tidyr,      # Өгөгдөл янзлах\n          #ggplot2,    # График зураглал\n          #stringr,    # string болон character хэлбэрийн өгөгдлийг янзлах\n          #forcats,    # factor хэлбэрийн өгөгдөлтэй ажиллах\n          #lubridate,  # dates хэлбэрийн өгөгдөлтэй ажиллах\n          #purrr       # давтан үйлдэл болон list –тэй ажиллах \n     linelist,     # linelist хэлбэрийн хүснэгтийг цэвэрлэх\n     naniar,       # өгөгдлийн дутуу утгыг шалгаж, үнэлэх \n\n    # Статистик анализ  \n     ############\n     janitor,      # хүснэгт болон өгөгдөл цэвэрлэх \n     gtsummary,    # дескрибтив болон статистикийн хүснэгт хийх \n     rstatix,      # статитистикийн тест болон статистикийн хураангуйг түргэн хугацаанд боловсруулна\n     broom,        # регрессийн анализийн үр дүнг цэгцтэй хэлбэрт оруулах\n     lmtest,       # likelihood-ratio тестүүд\n     easystats,\n          # parameters, # регрессийн анализийн үр дүнг цэгцтэй хэлбэрт оруулах (өөр хувилбар)\n          # see,        # forest plots –ыг харуулаh өөр хувилбар\n     \n     # Тархвар судлалын математик загварчлал\n\n     epicontacts,  # Халдварт өвчний тархалтын сүлжээг судлах \n     EpiNow2,      # Rt-г тооцох\n     EpiEstim,     # Rt-г тооцох\n     projections,  # Тохиолдлын тоог урьдчилан тооцоолх\n     incidence2,   # Тархвар судлалын муруйг зурж, тохиолдлын тоог тооцох \n     i2extras,     # incidence2 багцын нэмэлт функцууд\n     epitrix,      # тархвар судлалд хэрэглэгддэг нэмэлт функцууд\n     distcrete,    # Discrete delay тархалт\n     \n    \n     # График зураглал -ерөнхий\n     #################\n     #ggplot2,         # tidyverse багцын харьяа\n     cowplot,          # графикуудыг нэгтгэх  \n     # patchwork,      # графикуудыг нэгтгэх  (өөр хувилбар)     \n     RColorBrewer,     # өнгө сонгох\n     ggnewscale,       # өнгөний нэмэлт тохируулга хийх\n\n    \n     # График зураглал – тусгай зориулалтын\n     ########################\n     DiagrammeR,       # DOT хэлийг ашиглах бүдүүвч, диаграмм хийх\n     incidence2,       # тархвар судлалын муруй\n     gghighlight,      # тусгай хэсгийг тодотгож харуулах\n     ggrepel,          # жижиг гарчиг\n     plotly,           # интерактив график\n     gganimate,        # хөдөлгөөнт график \n\n     \n    # ГИС орон зайн анализийн чиглэлээр\n     ########################\n     sf,               # Simple Feature хэлбэрийг ашиглан орон зайн мэдээллийг янзлах\n     tmap,             # энгийн газрын зураг боловсруулах (интерактив болон статик газрын зураг)\n     OpenStreetMap,    # ggplot-ын газрын зурагт OSM –ын basemap оруулах \n     spdep,            # орон зайн статистик анализ \n     \n     # Тайлан, бичиг баримт\n     #################\n     rmarkdown,        # PDFs, Word, Powerpoint, HTML -ын файлууд үүсгэх\n     reportfactory,    # R Markdown –ын үр дүнг автоматаар зохицуулах\n     officer,          # powerpoint-ын файлтай ажиллах\n\n     # Хяналтын самбар, аппликэйшн\n     ############\n     flexdashboard,    # R Markdown –ын кодыг хяналтын самбар болгож хувиргах\n     shiny,            # интерактив веб аппликейшн хийх\n     \n     # Илтгэл, тайлангийн хүснэгт гаргах\n     #########################\n     knitr,            # R Markdown –ын тайлан болон html-ын хүснэгт үүсгэх\n     flextable,        # HTML –ийн хүснэгтүүд\n     #DT,              # HTML –ийн хүснэгтүүд (өөр хувилбар)\n     #gt,              # HTML –ийн хүснэгтүүд (өөр хувилбар)\n     #huxtable,        # HTML –ийн хүснэгтүүд (өөр хувилбар) \n     \n     # Филогенетикийн анализ\n     ###############\n     ggtree,           # модны график зураглал,тэмдэглэгээ хийх\n     ape,              # филогенетикийн болон эволюцийн мэдээлэлтэй ажиллах \n     treeio            # филогенетикийн график зураглал хийх\n \n)"},{"path":"санал-болгох-багцууд.html","id":"github-ын-багцууд","chapter":"5 Санал болгох багцууд","heading":"5.2 Github-ын багцууд","text":"Дор бичсэн кодоор дараах хоёр багцыг Github –ын агуулахаас шууд татаж авнаБоловсролтын явцдаа буй epicontacts багц халдвар тархалтын модыг x-тэнхлэгт хугацаатайгаар харуулж өгдөг.Энэхүү номны дасгалд ашиглах бүх өгөгдөл epirhandbook багцад буй. Мөн номын pdf хэлбэрийг татаж авч болно.","code":"\n# Github- аас татаж авах багцууд (CRAN-д байхгүй)\n##########################################################\n\n# Боловсролтын явцдаа буй epicontacts багц (халдварын хэлхээг x-тэнхлэгт хугацаатайгаар харуулна)\npacman::p_install_gh(\"reconhub/epicontacts@timeline\")\n\n# Энэхүү номонд зориулсан багц (бүх дасгал, жишээг багтаасан) \npacman::p_install_gh(\"appliedepi/epirhandbook\")"},{"path":"r-төсөл.html","id":"r-төсөл","chapter":"6 R төсөл","heading":"6 R төсөл","text":"R төсөл нь таны файлуудын иж бүрдэл болсон зөөвөрлөхөд хялбар, бие даасан хавтас юм. Бүх скрипт код, дата файлууд, зураг/үр дүн, үйлдлийн түүх зэрэг нь R төсөл доторх дэд хавтсанд хадгалагддаг. Мөн R төслийн үндсэн хавтас ажлын байрлал (working directory) болж өгдгөөрөө онцлог.","code":""},{"path":"r-төсөл.html","id":"санал-болгож-буй-хэрэглээ","chapter":"6 R төсөл","heading":"6.1 Санал болгож буй хэрэглээ","text":"R-ыг үр өгөөжтэй, амархан, ердийн хэрэглээ болгохын тулд дараах гурван элементийг хавсарч хэрэглэдэг. One discrete work project hosted within one R project. Элемент тус бүрийг дараах хэсгүүдэд тайлбарлав.R төсөл\nөгөгдөл, код, үр дүн зэргийг тус бүр дэд хавтсанд агуулсан бие даасан ажлын орчин.\nөгөгдөл, код, үр дүн зэргийг тус бүр дэд хавтсанд агуулсан бие даасан ажлын орчин.Файлын холбоотой замд зориулсан багц\nФайлын зам R төслийн үндсэн хавтаст холбоотой байдлаар бичигддэг. Энэ талаар [Import export] хэсэгт илүү дэлгэрүүлж үзнэ үү\nФайлын зам R төслийн үндсэн хавтаст холбоотой байдлаар бичигддэг. Энэ талаар [Import export] хэсэгт илүү дэлгэрүүлж үзнэ үүФайл импорт/экспорт хийхэд зориулсан rio багц\nimport() болон export() функцууд ямар ч өргөтгөлтэй файлтай ажиллаж чаддаг (.csv, .xlsx, .png г.м).\nimport() болон export() функцууд ямар ч өргөтгөлтэй файлтай ажиллаж чаддаг (.csv, .xlsx, .png г.м).","code":""},{"path":"r-төсөл.html","id":"r-төсөл-үүсгэх","chapter":"6 R төсөл","heading":"6.2 R төсөл үүсгэх","text":"R төсөл үүсгэхийн тулд File (файл) цэсний “New Project” (шинэ төсөл) -ыг сонго.Тухайн төсөлд зориулж шинэ хавтас нээх бол “New directory” (шинэ байрлал) –ыг сонгож хаана үүсгэхээ зааж өгнө.Төслийг хуучин хавтаст хадгалах бол “Existing directory” (хуучин байрлал) –ыг сонгож хадгалах хавтсаа зааж өгнө.Github –ын агуулахад файлаа хувилах бол “Version Control”-ыг сонгоод дараа нь “Git”-ыг сонгоно [Version control collaboration Git Github] хэсгээс дэлгэрүүлж харж болно.Шинээр үүсгэсэн R төслийн хавтас .Rproj гэсэн өргөтгөлтэй файл агуулсан байна. Энэ файл нь тухайн төслийг нээх шууд холбоос болдог. Төслийг нээх өрр арга бол File цэснээс “Open Project” (төсөл нээх) –ийг сонгож болдог. Мөн RStudio-ын хамгийн баруун дээд буланд байрлах R төслийн лого болон арынх нь цэс дээр дарж болно.R төслөөс гарахдаа шинэ төсөл нээ эсвэл тухайн төслийг хаа (File - Close Project).","code":""},{"path":"r-төсөл.html","id":"төслүүдийг-сэлгэх","chapter":"6 R төсөл","heading":"Төслүүдийг сэлгэх","text":"Төслүүдийн хооронд сэлгэж ажиллахын тулд RStudio-ын хамгийн баруун дээд буланд байрлах R төслийн лого болон арынх нь цэс дээр дар. Цэсийг нээснээр Close Project (төслийг хаах), Open Project (төслийг нээх) болон сүүлд ажиллаж байсан төслүүдийн нэр бүхий сонголтууд гарч ирнэ.","code":""},{"path":"r-төсөл.html","id":"тохируулга","chapter":"6 R төсөл","heading":"Тохируулга","text":"Rstudio-г асаахдаа “цэвэр хуудас” тайгаар эхлүүлэхийг зөвлөж байна. Өөрөөр хэлбэл өмнө нь хийж байсан ажлын код, бичиглэл ажлын талбайд байхгүй хоосон байна гэсэн үг. Энэ нь таны өмнө нь үүсгэсэн обьект, гарсан үр дүнгүүд R нээгдэх болгонд гарч ирэхгүй байхгүй байхыг хэлнэ (хэрэв шаардлагатай бол скрипт кодоо уншуулж дахин үүсгэж болно). Ингэснээр чанартай код бичигддэг ба хэтдээ алдаа бага гаргадаг.“Цэвэр хуудас”-аас эхлүүлэхийн тулд:Tools (багаж) цэснээс “Project Options”-г сонго.“General” хэсэгт буй сонголтуудад RStudio-г нээхэд .RData-г ажлын талбайд хадгалахгүй, RStudio-оос гарахад .RData -г ажлын талбайд хадгалахгүй гэж тохируул.","code":""},{"path":"r-төсөл.html","id":"бүтэц","chapter":"6 R төсөл","heading":"Бүтэц","text":"Төслийн үндсэн хавтас дотор дэд хавтас нээх нь элбэг. Ийм тохиолдолд “дата”, “скрипт/код”, “зураг”, “илтгэл” гэх мэтээр хавтсаа нэрлэх нь тохиромжтой. Шинэ хавтсыг жирийн хавтас нээдэг шигээ үүсгэнэ. R коммандаар хэрхэн шууд шинэ хавтас үүсгэхийг [Directory interactions] хэсгээс харна уу.","code":""},{"path":"r-төсөл.html","id":"хувилбаруудыг-хянах","chapter":"6 R төсөл","heading":"Хувилбаруудыг хянах","text":"Файлын өөр өөр хувилбаруудыг хянах системийг бий болгоорой. Үүний хамгийн энгийн жишээ гэвэл скрипттэй файлдаа огноотой нэр (“transmission_analysis_2020-10-03.R” г.м) өгөөд “архив” дэд хавтаст хадгалах юм. Мөн скриптийн толгой хэсэгт (header) тайлбар, зохиогч, гарчиг, өөрчлөлтийн дугаар, нэр зэргийг оруулж болно.Файлын хувилбарыг хянах арай нарийн арга бол Github болон бусад төстэй платформуудыг ашиглах юм. [Version control collaboration Git Github] хэсгээс энэ талаар дэлгэрүүлж уншна уу.Edit цэсний “Find Files” -г сонгож төслийн бүх файлд хайлтыг зэрэг хийж болдог. Энэ үйлдлээр зөвхөн хайгаад зогсохгүй аливаа текстийг олон файлуудад зэрэг өөрчлөх боломжтой.","code":""},{"path":"r-төсөл.html","id":"жишээ","chapter":"6 R төсөл","heading":"6.3 Жишээ","text":"Доорх кодонд () функцээр файл импортлох, экспортлох, хадгалах жишээ харуулав. багцыг хэрхэн ашиглах талаар дэлгэрүүлж [Import export] хэсгээс харна уу.R төслийн “data” хавтаснаас linelist_raw.xlsx гэсэн файлыг импортлохlinelistгэсэн R обьектийг “my_linelist.rds” гэсэн өргөтгөлтэйгээр өөрийн R төсөл доторх “data” хавтсын “clean” хавтаст экспортлох.Хамгийн сүүлд үүсгэсэн графикийг “epicurve_2021-02-15.png” гэсэн нэртэйгээр өөрийн R төсөл доторх “outputs” хавтсын “epicurves” хавтаст хадгалах.##Эх сурвалж {}RStudio –ын веб хуудсанд буй using R projects","code":"\nlinelist <- import(here(\"data\", \"linelist_raw.xlsx\"))\nexport(linelist, here(\"data\",\"clean\", \"my_linelist.rds\"))\nggsave(here(\"outputs\", \"epicurves\", \"epicurve_2021-02-15.png\"))"},{"path":"файл-импортлож-экспортлох.html","id":"файл-импортлож-экспортлох","chapter":"7 Файл импортлож экспортлох","heading":"7 Файл импортлож экспортлох","text":"Энэ бүлэгт бид файлыг хэрхэн байрлуулж, импортлож, экспортлохыг тайлбарлана:rio багц төрөл бүрийн файлыг хэрхэн чөлөөтэй import(), export() хийдэг эсэх;rio багц төрөл бүрийн файлыг хэрхэн чөлөөтэй import(), export() хийдэг эсэх;багцаар файлын байршлыг R төслийн үндсэн хавтастай хэрхэн холбоотойгоор заах;багцаар файлын байршлыг R төслийн үндсэн хавтастай хэрхэн холбоотойгоор заах;Импортлох файлын төрлүүд:\nExcel–ийн sheet-үүд\nЦэгцгүй хүснэгтийн толгой болон мөр алгасах\nGoogle sheet-үүд\nВебсайтад хэвлэгдсэн дата\nAPI -ууд\nХамгийн сүүлд хэрэглэж байсан файлыг оруулах\nИмпортлох файлын төрлүүд:Excel–ийн sheet-үүдExcel–ийн sheet-үүдЦэгцгүй хүснэгтийн толгой болон мөр алгасахЦэгцгүй хүснэгтийн толгой болон мөр алгасахGoogle sheet-үүдGoogle sheet-үүдВебсайтад хэвлэгдсэн датаВебсайтад хэвлэгдсэн датаAPI -уудAPI -уудХамгийн сүүлд хэрэглэж байсан файлыг оруулахХамгийн сүүлд хэрэглэж байсан файлыг оруулахГараар өгөгдлийг оруулахГараар өгөгдлийг оруулахR файлын төрлүүд (RDS, RData)R файлын төрлүүд (RDS, RData)Файл, графикыг хадгалж/экспортлохФайл, графикыг хадгалж/экспортлох","code":""},{"path":"файл-импортлож-экспортлох.html","id":"ерөнхий-тойм","chapter":"7 Файл импортлож экспортлох","heading":"7.1 Ерөнхий тойм","text":"“Датасет” -ыг анх R -луу оруулахад R -ын орчинд шинэ data frame (хүснэгт) обьект үүсдэг. Үүнийг таны ажлын хавтсанд тодорхой хаяг/байршилтай, импортлогдсон (e.g. Excel, CSV, TSV, RDS) файл гэж үзнэ.R -луу төрөл бүрийн өргөтгөлтэй файлаас гадна бусад статистикийн программ (SAS, STATA, SPSS) -ын файлыг бас оруулж болно. Мөн relational database (хамааралт өгөгдлийн санд)-т холбож болно.R бас өөрийн өргөтгөлтэй:RDS файл нь (.rds) нэг ширхэг R обьектийг хадгалдаг (ж: data frame). Ийм өртгөтгөлтэй файлын багана дах дата төрөл хэвээр хадгалдаг тул цэвэрлэгдсэн дата хадгалахад тохиромжтой. Энэ талаар энэ хэсгээс тодруулж үзнэ үү.RDS файл нь (.rds) нэг ширхэг R обьектийг хадгалдаг (ж: data frame). Ийм өртгөтгөлтэй файлын багана дах дата төрөл хэвээр хадгалдаг тул цэвэрлэгдсэн дата хадгалахад тохиромжтой. Энэ талаар энэ хэсгээс тодруулж үзнэ үү.RData файл нь (.Rdata) хэд хэдэн обьект, эсвэл R workspace (ажлын талбай) -г бүтнээр нь хадгалдаг. Энэ талаар энэ хэсгээс тодруулж үзнэ үү.RData файл нь (.Rdata) хэд хэдэн обьект, эсвэл R workspace (ажлын талбай) -г бүтнээр нь хадгалдаг. Энэ талаар энэ хэсгээс тодруулж үзнэ үү.","code":""},{"path":"файл-импортлож-экспортлох.html","id":"rio-багц","chapter":"7 Файл импортлож экспортлох","heading":"7.2 rio багц","text":"rio багцаар импорт хийхэд их тохиромжтой. rio бол input/output (оролт/гаралт) -ын товчлол “R /O” гэсэн үг юм.Энэ багцын import(), export() функцууд төрөл бүрийн файлтай ажиллаж чаддаг (e.g. .xlsx, .csv, .rds, .tsv) . Эдгээр функцэд файлын байршлыг (өргөтгөлтэй нь хамт) зааж өгснөөр rio багц тухайн өргөтгөлд шаардлагатай тохируулгыг хийж, файл импортлогдож, экспортлогддог.rio багцгүйгээр дээрх үйлдлийг хийхэд хэд хэдэн багц хамт ажиллах шаардлага гардаг. Багц болгон тус бүр өөр өргөтгөлийг уншина. Жишээ нь read.csv() (base R), read.xlsx() (openxlsx багц), write_csv() (readr багц) гэсэн функцууд байдаг. Эдгээрийг тэр болгон санаж хэрэглэхэд бэрхшээлтэй. Харин rio -ын import(), export() энэ үйлдлийг хялбар болгодог.rio-ын import(),export() функцууд тухайн файлын өргөтгөлд шаардлагатай багцыг давхар дуудаж ажилуулдаг. rio-ын цаана нь давхар ажиллаж байдаг эдгээр багцыг бүлгийн төгсгөлд хүснэгтэд жагсааж харуулав. rio багц STATA, SAS, SPSS программын файлыг мөн зөөвөрлөдөг.Харин shapefiles–г зөөвөрлөхөд өөр багц шаардлагатай. Энэ талаар GIS үндсэн ойлголтууд хэсэгт дэлгэрэнгүй дурьдсан.","code":""},{"path":"файл-импортлож-экспортлох.html","id":"here","chapter":"7 Файл импортлож экспортлох","heading":"7.3 here багц","text":"Аливаа файлыг хаанаас олох, хаана хадгалахаа R-т хэлж, файлын зам үүсгэх үйлдлийг багц, түүний () функцээр хялбархан гүйцэтгэж болдог.багц R төсөл дэх файлуудын байршлыг тухайн R төслийн үндсэн хавтастай (хамгийн дээд түвшний хавтас) холбоотойгоор зааж өгдөг. R төслийг олон компьютерт дамжуулан хэрэглэж байхад дээрх үйлдэл их хэрэгтэй. багц бүх хэрэглэгчдэд нийтлэг байршилтайгаар (R төслийн үндсэн хавтас) файлын замыг заадаг ба ингэснээр файлын зам компьютер болгонд өвөрмөц бичигдсэнээс болж үүсдэг хүндрэлээс сэргийлж чаддаг (жишээ нь “C:/Users/Laura/Documents…”) .R төсөлд () -ын ажиллах зарчим:Анх багцыг ачаалах үед R төслийн үндсэн хавтас дотор “.” гэсэн жижиг файл автоматаар үүсгэгдэж “чиглүүлэх”, “холбох” үүрэг гүйцэтгэдэг.Анх багцыг ачаалах үед R төслийн үндсэн хавтас дотор “.” гэсэн жижиг файл автоматаар үүсгэгдэж “чиглүүлэх”, “холбох” үүрэг гүйцэтгэдэг.R төслийн аль нэг дэд хавтаст файл хадгалахаар код бичих үед () функцээр файлын зам үүсгэж энэхүү чиглүүлэгчид холбож өгдөг.R төслийн аль нэг дэд хавтаст файл хадгалахаар код бичих үед () функцээр файлын зам үүсгэж энэхүү чиглүүлэгчид холбож өгдөг.Файлын зам үүсгэхдээ үндсэн хавтсан доторх хавтаснуудын нэрсийг хашилт дотор оруулж, таслалаар тусгаарлаж бичих ба файлын нэрийг өргөтгөлтэй нь хамт бичнэ. Дор жишээ харуулав.Файлын зам үүсгэхдээ үндсэн хавтсан доторх хавтаснуудын нэрсийг хашилт дотор оруулж, таслалаар тусгаарлаж бичих ба файлын нэрийг өргөтгөлтэй нь хамт бичнэ. Дор жишээ харуулав.() файлын замыг импорт, экспортын аль алинд нь ашиглаж болно.() файлын замыг импорт, экспортын аль алинд нь ашиглаж болно.Дараах import() функц дотор () -ээр файлын зам бүтээсэн.(\"data\", \"linelists\", \"ebola_linelist.xlsx\") гэсэн комманд үнэн хэрэг дээрээ тухайн хэрэглэгчийн компьютерт өвөрмөц файлын бүтэн замыг илэрхийлж байдаг:() -ээр бичигдсэн энэхүү комманд нь ямар ч компьютер байсан тухайн R төслийг олж чаддагаараа давуу талтай.ЗӨВЛӨГӨӨ: “.” файл хаана байрлаж буйг () функцыг хоосон хаалттайгаар уншуулснаар олж болно.багцын талаарх дэлгэрэнгүй мэдээллийг энэ линкээс уншина уу.","code":"\nlinelist <- import(here(\"data\", \"linelists\", \"ebola_linelist.xlsx\"))\"C:/Users/Laura/Documents/my_R_project/data/linelists/ebola_linelist.xlsx\""},{"path":"файл-импортлож-экспортлох.html","id":"файлын-зам","chapter":"7 Файл импортлож экспортлох","heading":"7.4 Файлын зам","text":"Датаг импортлож, экспортлоход тухайн файлын замыг зааж өгөх шаардлагатай. Үүнийг дараахь гурван аргаар хийх боломжтой:Санал болгож буй арга: багцыг ашиглан файлын “холбоотой (relative)” замыг олно.Санал болгож буй арга: багцыг ашиглан файлын “холбоотой (relative)” замыг олно.Файлын “бүтэн” буюу “жинхэнэ (absolute)” замыг бичиж өгнө.Файлын “бүтэн” буюу “жинхэнэ (absolute)” замыг бичиж өгнө.Гараар (manuel) файлыг сонгохГараар (manuel) файлыг сонгох","code":""},{"path":"файл-импортлож-экспортлох.html","id":"файлын-холбоотой-relative-зам","chapter":"7 Файл импортлож экспортлох","heading":"Файлын “холбоотой (relative)” зам","text":"“Холбоотой (relative)” зам гэдэг нь файлын зам R төслийн үндсэн хавтастай холбоотой байхыг хэлнэ. Ингэснээр өөр компьютер дээр ажилласан ч файлыг хялбар олж болохуйц файлын замыг үүсдэг (жишээ нь R төслийг имэйлээр илгээх, эсвэл дундын драйв дээр ашиглах зэрэгт хэрэгтэй). Дээр дурьдсанчлан “холбоотой (relative)” байршлыг зааж өгөхдөө багцыг ашиглана.()-ээр файлын холбоотой замыг бичих жишээ дор харуулав. Жишээнд R төслийн үндсэн хавтаст “data” гэсэн хавтас байх ба энэ хавтаст дахиад дэд хавтас болох “linelists” гэсэн хавтас байгаа ба үүн дотор бидний ажиллах .xlsx өргөтгөлтэй файл байна.","code":"\nlinelist <- import(here(\"data\", \"linelists\", \"ebola_linelist.xlsx\"))"},{"path":"файл-импортлож-экспортлох.html","id":"файлын-жинхэнэ-зам","chapter":"7 Файл импортлож экспортлох","heading":"Файлын “жинхэнэ” зам","text":"Файлын “бүтэн” замыг import() болон бусад төстэй функцэд оруулж өгч болдог. Гэвч энэ нь зөвхөн тухайн ажиллаж буй компьютерт л өвөрмөц зам үүсдэг тул энэ аргыг хэрэглэхгүй байхыг зөвлөж байна.Файлын жинхэнэ замын жишээг дор харуулав. Энд Лаурагийн компьютер дэх “analysis” дэд хавтаст буй “data” дэд хавтас дотор “linelists” гэсэн дэд хавтас байна. Үүн дотор бидний ажиллаж буй .xlsx өргөтгөлтэй файл байрлаж байна.Файлын жинхэнэ замыг ашиглахад анхаарах зүйлс:Өөр хүний компьютер дээр ажиллах үед файлын байршлын холбоос эвдэрдэг тул аль болох файлын жинхэнэ замыг хэрэглэхээс зайлсхий.Өөр хүний компьютер дээр ажиллах үед файлын байршлын холбоос эвдэрдэг тул аль болох файлын жинхэнэ замыг хэрэглэхээс зайлсхий.Урагшаа чиглэлтэй ташуу зураасыг (/) ашигла (Windows-д байнга хэрэглэгддэг ташуу зурааснаас ӨӨР болохыг анхаар)Урагшаа чиглэлтэй ташуу зураасыг (/) ашигла (Windows-д байнга хэрэглэгддэг ташуу зурааснаас ӨӨР болохыг анхаар)Давхар ташуу зураасаар ( “//…” гэх мэт) эхэлдэг файлын зам R программд танигддахгүй байх өндөр магадлалтай ба ихэвчлэн алдаа заадаг. Ажлаа “нэртэй” эсвэл “J:”, “C:” гэх мэт үсгээр дугаарласан дискэнд хадгалахыг зөвлөж байна. Энэ талаар [Directory interactions] хэсгээс нэмж тодруулна уу.Давхар ташуу зураасаар ( “//…” гэх мэт) эхэлдэг файлын зам R программд танигддахгүй байх өндөр магадлалтай ба ихэвчлэн алдаа заадаг. Ажлаа “нэртэй” эсвэл “J:”, “C:” гэх мэт үсгээр дугаарласан дискэнд хадгалахыг зөвлөж байна. Энэ талаар [Directory interactions] хэсгээс нэмж тодруулна уу.Дундын драйв дээрээс файл импортлоход тухайн файлын жинхэнэ зам бүх хэрэглэгчдэд яг адилхан бичигдсэн тохиодолд файлын жинхэнэ замыг ашиглаж болдлг.ЗӨВЛӨГӨӨ: \\ тэмдэгтийг /-ээр түргэн солихын тулд Ctrl+f (Windows) дарж гарах цэснээс “selection”-г сонго. Үүний дараа тэмдэгт солих үйлдэл хийж нэг дор солих боломжтой.","code":"\nlinelist <- import(\"C:/Users/Laura/Documents/analysis/data/linelists/ebola_linelist.xlsx\")"},{"path":"файл-импортлож-экспортлох.html","id":"гараар-байршлыг-сонгох","chapter":"7 Файл импортлож экспортлох","heading":"Гараар байршлыг сонгох","text":"Гараар дата импортлоход дараах аргуудыг хэрэглэж болно:RStudio–ын Environment (орчин) табны “Import Dataset” (датасетийг импортлох)-г дарж, гарсан цэснээс дата төрлийг сонго.RStudio–ын Environment (орчин) табны “Import Dataset” (датасетийг импортлох)-г дарж, гарсан цэснээс дата төрлийг сонго.File/Import Dataset -г дарж өгөгдлийн төрлийг сонго.File/Import Dataset -г дарж өгөгдлийн төрлийг сонго.base R-ын file.choose() функцыг хоосон хаалттайгаар уншуулахад pop-цонхыг гарч ирэх ба энэ үед компьютерээсээ файлыг гараар сонго. Жишээ:base R-ын file.choose() функцыг хоосон хаалттайгаар уншуулахад pop-цонхыг гарч ирэх ба энэ үед компьютерээсээ файлыг гараар сонго. Жишээ:ЗӨВЛӨГӨӨ: Pop-цонх RStudio-гийн цонхны АРД нээгдсэн байж болохыг анхаар.","code":"\n# Гараар файл сонгох. Дараах коммандыг уншуулахад POP-UP цонх нээгдэнэ\n# Гараар сонгосон файлын зам import() командын дотор бичигддэг.\n\nmy_data <- import(file.choose())"},{"path":"файл-импортлож-экспортлох.html","id":"дата-импортлох","chapter":"7 Файл импортлож экспортлох","heading":"7.5 Дата импортлох","text":"import()функцээр датасетийг хялбар импортлодог. Хаалтан дотор файлын замыг (файлын нэр өргөтгэлтэй нь хамт) хашилтанд оруулж бичихэд болно. Хэрэв ()-ээр файлын замыг зааж өгөх бол дээр дурьдсан жишээг харна уу. Дор жишээнүүд харуулав:Таны “working directory” (ажлын хавтас)-д эсвэл R-ын үндсэн хавтаст байрлах csv файлыг оруулах:R төсөл дэх “data” хавтсын “linelists” дэд хавтаст буй Excel файлын эхний sheet–ийг оруулах (файлын замыг ()-ээр зааж өгсөн):Файлын жинхэнэ байршлыг дуудаж датаг (.rds файл) импортлох:","code":"\nlinelist <- import(\"linelist_cleaned.csv\")\nlinelist <- import(here(\"data\", \"linelists\", \"linelist_cleaned.xlsx\"))\nlinelist <- import(\"C:/Users/Laura/Documents/tuberculosis/data/linelists/linelist_cleaned.rds\")"},{"path":"файл-импортлож-экспортлох.html","id":"excel-ийн-sheet--тэй-ажиллах","chapter":"7 Файл импортлож экспортлох","heading":"Excel-ийн sheet- тэй ажиллах","text":"Excel (.xlsx) файлыг import()-д импортлох үед default-оор эхний sheet импортлогддог. Өөр sheet –импортлох шаардлагтай тохиолдолд import() функцын = аргументэд sheet-ийн нэрийг бич. Жишээ нь:Файлын холбоотой замыг ()-ээр бичиж import() -д оруулаад ()–ийн хаалтыг хаасны дараа нэмэлтээр = аргумент өгч үүндээ тухайн sheet –ийн нэрийг зааж өгдөг.R –ын хүснэгтийг Excel -ийн аль нэг sheet рүү (бусад sheet-ийг өөрчлөлгүйгээр ) экспортлох бол тусгай зориулалтын openxlsx гэх мэт багц ашигладаг. Энэ талаар [Directory interactions] эсвэл github page хэсгээс харна уу.Excel-ийн .xlsb (binary хэлбэртэй Excel файл) файлыг rio багцаар импортолж болдоггүй. Ийм тохиолдолд .xlsb файлаа .xlsx болгон хувиргаж хадгалдаг. Эсвэл purpose энэ зориулалтын readxlsb багцыг ашигладаг.","code":"\nmy_data <- import(\"my_excel_file.xlsx\", which = \"Sheetname\")# Файлын холбоотой замыг 'here' -ээр дууудаж Excel sheet-ийг импортлох\nlinelist_raw <- import(here(\"data\", \"linelist.xlsx\"), which = \"Sheet1\")`  "},{"path":"файл-импортлож-экспортлох.html","id":"import_missing","chapter":"7 Файл импортлож экспортлох","heading":"Дутуу утга","text":"Дата дах дутуу утгуудыг зааж өгөх шаардлага гардаг. R дутуу утгыг NA гэж бичдэг ([Missing data] гэсэн хэсэгт заасан). Харин таны датанд дутуу утгыг 99, “Дутуу”, эсвэл хоосон зайгаар тэмдэглэсэн байх тохиолдол байдаг.Ийм үед import() дотор na = -аргумент нэмж өөрийн дата дах дутуу утгын тэмдэглэгээг хашилтад оруулан бичнэ (тоогоор тэмдэглэсэн байсан ч гэсэн). Янз бүрийн дутуу утгуудыг зэрэг зааж өгөх бол c()функц ашиглан вектор хэлбэрээр оруулж болдог. Жишээг дор харуулав.Жишээнд импортолж буй датанд дутуу утгыг “99” –ээр тэмдэглэсэн ба R -д оруулахдаа NA болгож хувиргаж байна.Энэ жишээнд импортолж буй датаны “Дутуу”, “” (хоосон нүд), эсвэл ” “(нэг зай) гэж бичигдсэн бүх утгуудыг R-т NA болгож хувиргаж байна.","code":"\nlinelist <- import(here(\"data\", \"my_linelist.xlsx\"), na = \"99\")\nlinelist <- import(here(\"data\", \"my_linelist.csv\"), na = c(\"Missing\", \"\", \" \"))"},{"path":"файл-импортлож-экспортлох.html","id":"мөр-алгасах","chapter":"7 Файл импортлож экспортлох","heading":"Мөр алгасах","text":"Зарим мөрийг оруулалгүйгээр дата импортлох шаардлага гардаг. Үүнийг rio -ын import() функцийн skip = аргументийн тусламжтайгаар хйидэг (.xlsx зэрэг .csv файлтай ажиллаж буй үед). Ингэхдээ алгасах мөрийн тоог зааж өг.skip = зөвхөн нэг бүхэл тоон утга л авдаг ба дараалласан хэд хэдэн тоон утга оруулж болдоггүй (жишээ нь “2:10” гэх боломжгүй). Хүснэгтийг эхнээс дараалласан биш, энд тэнд байрлалтай мөрүүдийг алгасах бол датаг дахин импортлоод dplyr -ын bind_rows()–ыг хэрэглэдэг. Доор жишээнд ердөө 2 мөр алгасахыг харуулав.","code":"\nlinelist_raw <- import(\"linelist_raw.xlsx\", skip = 1)  # толгой (header) мөрийг оруулалгүйгээр импортлоно"},{"path":"файл-импортлож-экспортлох.html","id":"хоёр-дах-толгой-header-мөртэй-ажиллах","chapter":"7 Файл импортлож экспортлох","heading":"Хоёр дах толгой (header) мөртэй ажиллах","text":"Заримдаа хүснэгтийн толгой хоёр мөрнөөс бүтсэн байдаг. Жишээ нь датаны “нэрсийн тайлбар” –ийг хоёр дах нүдэнд биччихдэг. Ийм датаг тэр чигээр нь импортловол бүх багана “character” хэлбэртэй болж хувирах эрсдэлтэй.Ийм датасетын жишээг дор харуулав (эхний мөрөндөө нэрсийн тайлбартай).","code":""},{"path":"файл-импортлож-экспортлох.html","id":"хоёрдах-толгой-мөрийг-арилгах","chapter":"7 Файл импортлож экспортлох","heading":"Хоёрдах толгой мөрийг арилгах","text":"Дата импортлох үйлдлийг хоёр давтан хийснээр хоёр дах мөрийг арилгах боломжтой.Датаг импортлоод баганын жинхэнэ нэрийг хадгалДатаг дахин импортлох ба ингэхдээ эхний хоёр мөрийг (толгой мөр, 2 дах мөр) алгасч оруулЭхэнд хадгалсан баганын нэрсээ мөр алгассан хүснэгтдээ холбож өг.Баганын нэрийг хүснэгттэй холбодог үйлдлийн аргумент дата төрлөөс хамаарч өөр байдаг ( жишээ нь .csv, .tsv, .xlsx,). Энэ нь файлын төрлөөс хамаарч rio багц өөр функц ашигладагтай холбоотой. (дээрх хүснэгтээс харна уу).Excel files: (col_names =)CSV files: (col.names =)Нэмэлт хувилбар - баганын нэрийг тусдаа коммандаар өөрчилж болно.","code":"\n# Эхний удаагийн импорт хийх үйлдлээр зөвхөн нэрсийг хадгал;\nlinelist_raw_names <- import(\"linelist_raw.xlsx\") %>% names()  # баганын нэрсийг хадгал\n\n# Датаг дахин импортло; эхний 2 мөрийг алгасаад col_names = аргументэд өмнөх хадгалсан нэрсээ заа.\nlinelist_raw <- import(\"linelist_raw.xlsx\",\n                       skip = 2,\n                       col_names = linelist_raw_names\n                       ) \n# Эхний удаагийн импорт хийх үйлдлээр зөвхөн нэрсийг хадгал;\nlinelist_raw_names <- import(\"linelist_raw.csv\") %>% names() # баганын нэрсийг хадгал\n\n# csv файлын аргумент 'col.names = ' болохыг анхаар\nlinelist_raw <- import(\"linelist_raw.csv\",\n                       skip = 2,\n                       col.names = linelist_raw_names\n                       ) \n# R base –ийн 'colnames()' функцээр хүснэгтийн толгойд дахин нэр онооно.\ncolnames(linelist_raw) <- linelist_raw_names"},{"path":"файл-импортлож-экспортлох.html","id":"датанд-нэрсийн-тайлбар-толь-data-dictionary-үүсгэх","chapter":"7 Файл импортлож экспортлох","heading":"Датанд нэрсийн тайлбар толь (data dictionary) үүсгэх","text":"Бонус! хоёр дах мөрөнд нэрсийн тайлбар бичигдчихсэн байвал үүнийг нэрсийн тайлбар багана болгож хувиргах амархан. Энэ санааг post -д тайлбарласан байсан.","code":"\ndict <- linelist_2headers %>%             # эхлэл: эхний мөрөндөө тайлбартай linelist\n  head(1) %>%                             # зөвхөн баганын нэрс болон нэрсийн тайлбарыг авч үлд\n  pivot_longer(cols = everything(),       # бүх баганыг урт хэлбэрт шилжүүл\n               names_to = \"Column\",       # шинэ үүссэн хоёр баганад нэр өг\n               values_to = \"Description\")"},{"path":"файл-импортлож-экспортлох.html","id":"хоёр-толгой-мөрийг-нэгтгэх","chapter":"7 Файл импортлож экспортлох","heading":"Хоёр толгой мөрийг нэгтгэх","text":"Хэрэв датасет боловсруулалт хийхээс өмнө хоёр толгой мөртэй байвал (баганын туслах гарчиг хоёр дах мөрөнд бичигдсэн г.м) “нэгтгэх”, эсвэл хоёр мөрөн дэх утгыг хооронд нь нийлүүлэх шаардлага гардаг.Дараах коммандыг өгснөөр эхний болон түүний дорх мөр нэтгэгдэж (paste) баганын нэр болж импортлогддог.","code":"\nnames(my_data) <- paste(names(my_data), my_data[1, ], sep = \"_\")"},{"path":"файл-импортлож-экспортлох.html","id":"google-sheet-үүд","chapter":"7 Файл импортлож экспортлох","heading":"Google sheet-үүд","text":"Google-ийн онлайн spreadsheet-ийг googlesheet4 багцаар импортлодог. Энэ үед мөн хандах эрхээ баталгаажуулах шаардлагатайг анхаар.Google sheet оруулах жишээг дор харуулав. Энэхүү коммандыг уншуулхад google account –ыг баталгаажуулах хүсэлт гарч ирдэг. Интернетийн браузерт гарч ирсэн цонх, pop--г дагаж биелүүлсний дараа Tidyverse API- багцууд таны Google Drive дээрх хүснэгтийг засаж, арилгах шинээр үүсгэх зөвшөөрөлтэй болдог.Дорх хүснэгт “линкээр орсон хүн болгон үзэх боломжтой” (“viewable anyone link”) гэсэн тохируулгатай учир та импортлож үзэж болно.Тухайн sheet -ийн ID -г зааж өгсний дараа импортлогддог. ID нь URL-ын богино хэсэгт байрладаг:Дээрхтэй ижил үйлдэл хийдэг өөр нэгэн багц бол googledrive. Үүнийг ашиглаж Google sheet-ийг янзалж, арилгаж, шинээр үүсгэж болно. Энэ багцад gs4_create(),sheet_write() гэх мэт функцууд байдаг.Энэ талаар дэлгэрүүлж заасан хичээл, материалуудыг дараах линкүүдээс үзнэ үү:basic Google sheets importing tutorialmore detailed tutorialinteraction googlesheets4 tidyverse","code":"\npacman::p_load(\"googlesheets4\")\nGsheets_demo <- read_sheet(\"https://docs.google.com/spreadsheets/d/1scgtzkVLLHAe5a6_eFQEwkZcc14yFUx1KgOMZ4AKUfY/edit#gid=0\")\nGsheets_demo <- read_sheet(\"1scgtzkVLLHAe5a6_eFQEwkZcc14yFUx1KgOMZ4AKUfY\")"},{"path":"файл-импортлож-экспортлох.html","id":"олон-файлтай-зэрэг-ажиллах---импорт-экспорт-хуваах-нэгтгэх","chapter":"7 Файл импортлож экспортлох","heading":"7.6 Олон файлтай зэрэг ажиллах - импорт, экспорт, хуваах, нэгтгэх","text":"Олон файлыг зэрэг импортлох, нэгтгэх, эсвэл олон Excel файлтай зэрэг ажиллах жишээг [Iteration, loops, lists] хэсгээс харна уу. Энэ линкэд мөн хүснэгтийг хэрхэн хуваах, хуваасан хэсэг тус бүрийг экспортлох, Excel-ийн тусгай sheet болгон хадгалах талаар тайлбарласан.","code":""},{"path":"файл-импортлож-экспортлох.html","id":"import_github","chapter":"7 Файл импортлож экспортлох","heading":"7.7 Github-аас файл импортлох","text":"Github-аас шууд R-луу дата импортлох нь хялбар, цөөн үйлдэлтэй байдаг. Дараах аргуудаар импортлоно:","code":""},{"path":"файл-импортлож-экспортлох.html","id":"csv-файл","chapter":"7 Файл импортлож экспортлох","heading":"CSV файл","text":"Github-аас .csv файлыг R-луу шууд R коммандаар хялбар импортлодог.Github –ийн агуулахыг нээнэ, импортлох файлаа байрлуулаад дээр нь дар“Raw” товчийг дар (“raw” csv гэсэн дата харагдна, доор харуулав)URL (вебхаяг)-г хуулж авХуулсан URL –г хашилттанд хийж import() функцэд оруулж уншуул","code":""},{"path":"файл-импортлож-экспортлох.html","id":"xlsx-файл","chapter":"7 Файл импортлож экспортлох","heading":"XLSX файл","text":"Зарим файл дах “Raw” датаг харж болдоггүй (.xlsx, .rds, .nwk, .shp гэх мэт).Github –ийн агуулахыг нээ, импортлох файлаа байрлуулаад дээр нь дарGithub –ийн агуулахыг нээ, импортлох файлаа байрлуулаад дээр нь дар“Download” товчийг дар (доор зурагт харуулснаар)“Download” товчийг дар (доор зурагт харуулснаар)Файлыг компьютертээ хадгалаад дараа нь R -луу импорт хий.Файлыг компьютертээ хадгалаад дараа нь R -луу импорт хий.","code":""},{"path":"файл-импортлож-экспортлох.html","id":"shapefiles","chapter":"7 Файл импортлож экспортлох","heading":"Shapefiles","text":"Shapefiles файл олон дэд бүрэлдэхүүн хэсгүүдтэй ба хэсэг тус бүр өөр өргөтгөлтэй. Нэг файл “.shp” гэсэн өргөтгөлтэй байхад нөгөө файл “.dbf”, “.prj” гэх мэтээр өөр байдаг. Github-аас shapefile татахад дэд бүрэлдэхүүүн бүрийг тусдаа татаж аваад өөрийн компьютерт ижил хавтаст хийж хадгал. Github дээрх файл тус бүрийг “Download” товчийг дарж нэг бүрчлэн татаж ав.Компьютерт хадгалагдсны дараа sf багцын st_read()–ээр shapefile –аа импорт хийнэ ([GIS basics] хэсэгт заасан буй). Та зөвхөн файлын зам болон “.shp” файлынхаа нэрийг зааж өгөхөд л болно (тухайн “.shp файлтай холбоотой бусад файлууд ижил хавтаст байрлаж байх шаардлагатай).Дор жишээнд “sle_adm3” гэх shapefile олон янзын файлаас хэрхэн бүрэлддэгийг харуулав. Файл болгоноо Github -аас тусдаа татаж авах шаардлагатай.","code":""},{"path":"файл-импортлож-экспортлох.html","id":"гараар-дата-оруулах","chapter":"7 Файл импортлож экспортлох","heading":"7.8 Гараар дата оруулах","text":"","code":""},{"path":"файл-импортлож-экспортлох.html","id":"мөр-болгоноор-оруулах","chapter":"7 Файл импортлож экспортлох","heading":"Мөр болгоноор оруулах","text":"tidyverse багцуудын нэг tibble багцын tribble функцийг хэрэглэ (online tibble reference).Баганын толгой tilde (~) тэмдэгтээр эхэлж буйг анхаар. Мөн багана болгон нэг төрлийн дата агуулсан байна (character, numeric гэх мэт.). Кодыг хялбар уншигддаг болгох үүднээс таб, зай авах, шинэ мөр эхлэх зэргээр кодоо тохируулж болно. Утга хооронд зай авах нь чухал биш, харин мөр болгоныг шинэ мөрнөөс эхэлж бичих хэрэгтэй. Жишээ:Үүсгэсэн хүснэгт дараах байдлаар харагдна::","code":"\n# датасетийг гараар мөр дагуу бичих\nmanual_entry_rows <- tibble::tribble(\n  ~colA, ~colB,\n  \"a\",   1,\n  \"b\",   2,\n  \"c\",   3\n  )"},{"path":"файл-импортлож-экспортлох.html","id":"багана-дагуу-дата-оруулах","chapter":"7 Файл импортлож экспортлох","heading":"Багана дагуу дата оруулах","text":"Хүснэгт нь векторуудаас бүтдэг (вертикал багана) учир base R таныг багануудаа эхлэж үүсгээд дараа нь нэгтгэнэ гэж ойлгодог. Харин тархвар судлалын хувьд датаг ихэвчлэн эхэлж мөрийн дагуу оруулдаг онцлогтой (дээрх жишээ).АНХААРУУЛГА: Бүх векторууд ижил урттай байх шаардлагатай (ижил тооны утгатай).Векторуудыг data.frame() функцээр нэгтгэдэг:Үүсгэсэн хүснэгт нь дараах байдлаар харагдна:","code":"\n# Бүх векторыг багана бүрээр бичиж оруул; багана бүрт нэр өг\nPatientID <- c(235, 452, 778, 111)\nTreatment <- c(\"Yes\", \"No\", \"Yes\", \"Yes\")\nDeath     <- c(1, 0, 1, 0)\n# Векторын нэрсийг data.frame -д оруулснаар хүснэгт нэгтгэгднэ.\nmanual_entry_cols <- data.frame(PatientID, Treatment, Death)"},{"path":"файл-импортлож-экспортлох.html","id":"clipboard-оос-хуулж-авах","chapter":"7 Файл импортлож экспортлох","heading":"Clipboard-оос хуулж авах","text":"Clipboard -д хуулж авсан датаг дараах хоёр аргаар импорт хийдэг.clipr багцын read_clip_tbl()–ыг ашиглан хүснэгт хэлбэрээр,read_clip()–ээр character хэлбэрээр импортлоно. Энэ хоёр функцын хаалтыг хоосон орхи.Системийн clipboard-д хуулагдсан бол clipr-ийг ашиглан амархан экспортолж болно. Экспорт хэсэгт дэлгэрүүлж бичсэн.Мөн base R-ын read.table()–д file =\"clipboard\" гэсэн аргумент өгюөл дата хүснэгт хэлбэрээр импортлогддог.","code":"\nlinelist <- clipr::read_clip_tbl()  # clipboard дах датаг хүснэгт хэлбэрээр импорт хий \nlinelist <- clipr::read_clip()      # character хэлбэрээр импорт хий\ndf_from_clipboard <- read.table(\n  file = \"clipboard\",  # \"clipboard\"-ийн файл гэдгийг заана\n  sep = \"t\",           # tab, таслал зэргээр тусгаарлагчийг заана.\n  header=TRUE)         # баганын эхний мөр толгой мөр мөн эсэхийг заана"},{"path":"файл-импортлож-экспортлох.html","id":"хамгийн-сүүлд-хэрэглэж-байсан-файлыг-импортлох","chapter":"7 Файл импортлож экспортлох","heading":"7.9 Хамгийн сүүлд хэрэглэж байсан файлыг импортлох","text":"Та датанд тогтмол өөрчлөлт оруулдаг бол хамгийн сүүлд хэрэглэж байсан файлыг импортлодог код хэрэгтэй байдаг. Үүнийг гүйцэтгэх хоёр янзын арга буй:файлын нэр дээрх огнооны дагуу файлыг сонгохфайлын метадатан дах огнооны дагуу файлыг сонгох (хамгийн сүүлд хийсэн өөрчлөлтийн огноо)","code":""},{"path":"файл-импортлож-экспортлох.html","id":"файлын-нэр-дээрх-огноо","chapter":"7 Файл импортлож экспортлох","heading":"Файлын нэр дээрх огноо","text":"Үүнийг хийхэд дараах гурван нөхцөл бүрдсэн эсэх хамаатай:Файлын нэр дээр бичигдсэн огноонд итгэлтэй байхОгноо тоогоор бичигдсэн ба ерөнхийдөө ижил форматтай байна (дараалал нь жил, сар, өдөр гэх мэт)Файлын нэрэнд тоогоор огнооноос өөр зүйл тэмдэглээгүй байх.Бид энд алхам бүрийг тайлбарласны дараа нэтгэж харуулав.Эхлээд base R-ын dir()– ийг хэрэглэж, сонгосон хавтас доторх файлын зөвхөн нэрсийг авна. [Directory interactions] хэсгээс dir() –ийн талаар харна уу. R төслийн хавтас дах “data” хавтасны “example” хавтсанд буй “linelists” хавтсыг хэрхэн дуудахыг дор жишээнд харуулав.Файлын нэрсийг вектор болгож авсны дараа огноотой хэсгийг салгаж авахын тулд stringr багцын str_extract()-т дараах regular expression-г оруулж комманд өгнө. Энэ коммандаар файлын нэрэнд буй тоотой бүх хэсгийг салгаж авч болно (дунд нь орсон зураас, ташуу зураас зэргийг оруулаад). stringr багцын талаар дэлгэрүүлж [strings болон characters] -аас уншиж болно.Файлын нэрэн дээрх огнооны формат ижил төстэй (дараалал нь жил, сар, өдөр гэх мэт ), жил нь 4 цифртэйгээр бичигдсэн байвал, lubridate багцын хувиргагч функцуудыг (ymd(),dmy(), mdy()) ашиглан амархан хувиргалт хийж болдог. Эдгээр функц зураас, ташуу зураас, хоосон зай зэргийг ажралгүй зөвхөн огнооны дэс дараалаллыг анхаардаг. Энэ талаар [Working dates] хэсгээс нэмж үзнэ үү.base R -ын .max()-аар огноонуудын индекс байрлалаас (1 дүгээр, 2 дугаар, 3 дугаар) хамгийн ихийг нь дууддаг. Дор жишээнд “case_linelist_2020-10-08.xlsx”-ыг (хамгийн сүүлд хэрэглэсэн файл) 6 дугаар файл гэж зөв дугаарлагдсан байна.Эдгээр коммандыг нэгтгэж доор харуулав. Энэхүү pipe дараалаллын төгсгөлд тухайн pipe -аар бичигдэж буй обьектийг илэрхийлэхдээ . тэмдэгтээр бичсэнийг анхаарна уу. Энэ үед бичигдэж буй обьект 6 гэсэн тоо . dir() –ээр үүсгэгдсэн файлын нэрстэй векторын 6 дугаар элэментийг гаргаж авахын тулд дээрх тэмдэглэгээг давхар хаалтанд оруулж бичсэн, .Одоо энэхүү нэрээ () багцад оруулж тухайн файлын холбоотой замыг гүйцээж бич:Одоо хамгийн сүүлд хэрэглэж байсан файлыг импортлох боломжтой:","code":"\nlinelist_filenames <- dir(here(\"data\", \"example\", \"linelists\")) # хавтсан дах файлын нэрсийг ав\nlinelist_filenames                                              # хэвлэ## [1] \"20201007linelist.csv\"          \"case_linelist_2020-10-02.csv\" \n## [3] \"case_linelist_2020-10-03.csv\"  \"case_linelist_2020-10-04.csv\" \n## [5] \"case_linelist_2020-10-05.csv\"  \"case_linelist_2020-10-08.xlsx\"\n## [7] \"case_linelist20201006.csv\"\nlinelist_dates_raw <- stringr::str_extract(linelist_filenames, \"[0-9].*[0-9]\") #тоо болон тэмдэгтүүдийг салгаж авна.\nlinelist_dates_raw  # хэвлэ## [1] \"20201007\"   \"2020-10-02\" \"2020-10-03\" \"2020-10-04\" \"2020-10-05\"\n## [6] \"2020-10-08\" \"20201006\"\nlinelist_dates_clean <- lubridate::ymd(linelist_dates_raw)\nlinelist_dates_clean## [1] \"2020-10-07\" \"2020-10-02\" \"2020-10-03\" \"2020-10-04\" \"2020-10-05\"\n## [6] \"2020-10-08\" \"2020-10-06\"\nindex_latest_file <- which.max(linelist_dates_clean)\nindex_latest_file## [1] 6\n# Багцуудыг ачааллах\npacman::p_load(\n  tidyverse,         # дата менежмент\n  stringr,           # strings/characters-тай ажиллах\n  lubridate,         # огноотой ажиллах\n  rio,               # импорт / экспорт\n  here,              # файлын холбоотой зам\n  fs)                # файлын байрлалуудын харилцан үйлчлэл\n\n# сүүлийн хэрэглэсэн файлын нэрийг салгаж ав\nlatest_file <- dir(here(\"data\", \"example\", \"linelists\")) %>%  #файлын нэрсийг \"linelists\" дэд хавтаснаас ав               \n  str_extract(\"[0-9].*[0-9]\") %>%       # нэрнүүд дэх огноог салгаж ав (тоогоор бичигдсэн)\n  ymd() %>%                             # тоон утгыг огноо болго (жил-сар-өдөр форматтай тохиолдолд)\n  which.max() %>%                   # хамгийн их огнооны индекс байрлал (хамгийн сүүлд хэрэглэсэн файл)\n  dir(here(\"data\", \"example\", \"linelists\"))[[.]]          # хамгийн сүүлд хэрэглэсэн linelist-ийн файлын нэрийг дуудах\n\nlatest_file  # сүүлд хэрэглэсэн файлын нэрийг хэвлэ## [1] \"case_linelist_2020-10-08.xlsx\"\nhere(\"data\", \"example\", \"linelists\", latest_file) \n# импорт\nimport(here(\"data\", \"example\", \"linelists\", latest_file)) # импорт"},{"path":"файл-импортлож-экспортлох.html","id":"файлын-метадата-ашиглах","chapter":"7 Файл импортлож экспортлох","heading":"Файлын метадата ашиглах","text":"Та файлын нэрэн дээр огноо бичээгүй (эсвэл та нэрэн дээрх огноонд итгэлгүй) тохиолдолд тухайн файлын метадатанаас хамгйин сүүлд ашигласан огноог олж болно. Файлын сүүлд ашигласан огноо, файлын зам зэрэг мэдээллийг шалгахдаа fs багцын функцээс хэрэглэдэг.Дараах жишээнд сонгосон хавтсыг fs-ын dir_info() -д оруулж бичсэн. Сонгосн хавтас нь R төслийн хавтсан дах “data” хавтасны “example” дэд хавтас доторх “linelists” хавтас юм. Ингэснээр файл тус бүрт нэг мөртэй, modification_time,path (файлын метадата) гэсэн багануудтай хүснэгт бий болно. [Directory interactions] –д жишээг илүү дэлгэрэнгүй харуулсан.Үүний дараа хүснэгийг modification_time –аар нь эрэмбэлээд base R-ын head() -ээр зөвхөн эхний мөр буюу хамгийн сүүлд ашигласан файлтай мөрийг авч үлдэж болно. Дараа нь хүснэгтийн path баганыг dplyr -ын pull()–д оруулж сүүлд хэрэглэсэн файлын замыг гаргаж авна. Эцэст нь энэ файлын замыг import()-д оруулна. Импортлогдсон файлыг latest_file гэж хадгална.","code":"\nlatest_file <- dir_info(here(\"data\", \"example\", \"linelists\")) %>%  # энэ байршилд буй бүх файлын метадатаг цуглуул \n  arrange(desc(modification_time)) %>%      # өөрчлөлт оруулсан хугацаагаар нь эрэмблэ\n  head(1) %>%                               # зөвхөн толгой мөрийг авч үлд\n  pull(path) %>%                            # зөвхөн файлын замыг авч үлд\n  import()                                  # файлыг импорт хий"},{"path":"файл-импортлож-экспортлох.html","id":"import_api","chapter":"7 Файл импортлож экспортлох","heading":"7.10 APIs","text":"Автомат Программчлагдсан Интерфэйс (Automated Programming Interface) (API) –ыг ашиглан дата авах хүсэлтийг шууд вебсайтад нь явуулдаг. API гэдэг нь программ бие биетэйгээ харилцан үйлчлэх боломжийг бүрдүүлж буй дүрмийн багцыг хэлнэ. Үйлчлүүлэгч (та) “хүсэлтээ” илгээсний дараа мэдээлэл агуулсан “хариуг” хүлээж авдаг. R дээр httr, jsonlite багцууд энэ үйлдлийг гүйцэтгэдэг.API -г идэвхижүүлсэн вебхуудас бүр өөрийн дүрмийг танилцуулсан байдаг. Зарим вебхуудас нийтэд нээлттэй, хэн ч авч болохоор байхад зарим вебсайт ялангуяа ID, нууц үг хэрэглэдэг платформуудаас мэдээлэлэл авахын тулд баталгаажуулалт хэрэгтэй байдаг.API –аар мэдээлэл импортлоход мэдээж сүлжээнд холбогдсон байна. API ашиглан мэдээлэл импортлохыг товч жишээгээр харуулж, нэмэлт линкийг дор бичлээ.Тэмдэглэл: мэдээлэл вебхуудаст ямар ч API гүйгээр тавигдсан* байж болох ба ийм тохиолдолд татаж авахад хялбар байх талтай. Жишээ нь сайтын URL-г import() дотор оруулснаар CSV файлыг шууд татаж авах боломжтой байж болно. Энэ талаар importing Github -д мөн дурьдсан*","code":""},{"path":"файл-импортлож-экспортлох.html","id":"http-request","chapter":"7 Файл импортлож экспортлох","heading":"HTTP request","text":"API солилцоог ихэвчлэн HTTP хүсэлтээр гүйцэтгэдэг. HTTP гэдэг нь Hypertext Transfer Protocol –ын товчлол. Энэ бол үйлчлүүлэгч, сервер хоёрын хүсэлт/хариу солилцон явуулахад ашигладаг үндсэн формат юм. API -ын төрлөөс хамаарч оролт/гаралт (input/output) нь бага зэрэг өөр байх боловч үндсэн процесс нь адил. Энэ нь хэрэглэгчээс ирж буй лавлагаа, асуумжтай “Хүсэлт” (ихэвчлэн HHTP хүсэлт) ба хүсэлтийн статус, хариу мэдээллийг агуулсан “Хариулт”-аас бүрддэг.HTTP хүсэлтийн зарим бүрдэл хэсгүүд:- API -ын эцсийн цэгийн URL\n- “Аргачлал” (эсвэл “Үйл үг”)\n- Толгой хэсэг\n- Бие хэсэгHTTP хүсэлтийн “аргачлал” гэдэг нь таны үйлдэх гэж буй үйлдлийн нэр. Нийтлэг хэрэглэгддэг хоёр HTTP аргачлал бол GET болон POST. Бусад аргачлалд PUT,DELETE,PATCH зэрэг орно. R -луу дата импорт хийхэд ихэвчлэн GET-ийг хэрэглэдэг.Хүсэлт гаргасны дараа таны компьютер хариуг хүлээж авна. Ирэх хариулт таны илгээсэн мэдээлэлтэй төстэй форматаар буцаж ирнэ. Үүнд URL, HTTP статус (Статусыг 200 байлгах нь чухал!), файлын төрөл, хэмжээ болон гол авахыш хүссэн мэдээлэл ордог. Та ирсэн мэдээллийг ялгаж, R –ын орчинруу хүснэгт хэлбэрээр оруулах шаардлагатай.","code":""},{"path":"файл-импортлож-экспортлох.html","id":"багцууд","chapter":"7 Файл импортлож экспортлох","heading":"Багцууд","text":"R дээр HTTP хүсэлт гаргахад httr багцыг нийтлэг хэрэглэдэг. Энэ багцыг ашиглахад Веб API мэдлэг бага шаардагддаг ба компьютер программчлалын хэллэг сайн мэдэхгүй хүмүүс хэрэглэх боломжтой. Хэрэв HTTP хүсэлт .json хэл дээр бичигдсэн бол jsonlite–ашиглаж хариу мэдээллийг задалж болно.","code":"\n# багцыг ачааллана\npacman::p_load(httr, jsonlite, tidyverse)"},{"path":"файл-импортлож-экспортлох.html","id":"олон-нийтэд-нээлттэй-дата","chapter":"7 Файл импортлож экспортлох","heading":"Олон нийтэд нээлттэй дата","text":"Дараах жишээнд HTTP хүсэлт гаргахыг харуулав. Жишээг Trafford Data Lab линк дээрх хичээлээс хуулбарлав. Энэ нлинкэд API –ын хичээл, дасгалууд олон бий.Жишээ хувилбар: Бид Их Британийн Траффорд хотын түргэн хоолны газруудын жагсаалтыг импортлох хэрэгтэй болов. Энэ датаг Их Британийн хоолны ариун цэврийн үнэлгээний мэдээг боловсруулдаг Хоолны Стандартын Агентлагийн API-д нэвтэрснээр авч болох юм. Бидний хүсэлт гаргах параметрууд:HTTP үйл үг: GETAPI –ийн эцсийн цэг URL: http://api.ratings.food.gov.uk/EstablishmentsСонгосон параметрүүд: нэр, хаяг, уртраг, өргөрөг, бизнессийн төрлийн дугаар, үнэлгээний төрөл, зөвшөөрөл өгөгчийн дугаарТолгой: “x-api-version”, 2Өгөгдлийн формат(s): JSON, XMLДүрэм: http://api.ratings.food.gov.uk/helpКодыг дараах маягаар бичнэ:Ингээд мөр бүрт нэг түргэн хоолны газрын мэдээлэл агуулсан response дататай болох ба үүнийг та янзалж болохоор боллоо.","code":"\n# Хүсэлтээ бэлд\npath <- \"http://api.ratings.food.gov.uk/Establishments\"\nrequest <- GET(url = path,\n             query = list(\n               localAuthorityId = 188,\n               BusinessTypeId = 7844,\n               pageNumber = 1,\n               pageSize = 5000),\n             add_headers(\"x-api-version\" = \"2\"))\n\n# server –т гарах алдааг хянах  (\"200\" байвал сайн!)\nrequest$status_code\n\n# хүсэлтийг илгээж, хариуг үнэлж, хүснэгт болгон хувирга\nresponse <- content(request, as = \"text\", encoding = \"UTF-8\") %>%\n  fromJSON(flatten = TRUE) %>%\n  pluck(\"establishments\") %>%\n  as_tibble()"},{"path":"файл-импортлож-экспортлох.html","id":"баталгаажуулалт-шаардлагатай-үед","chapter":"7 Файл импортлож экспортлох","heading":"Баталгаажуулалт шаардлагатай үед","text":"Зарим API-руу нэвтрэхийн тулд та өөрийгөө мөн эсэхийг баталгаажуулах шаардлагатай байдаг. Ингэснээр хязгаарлалттай мэдээлэлд нэвтрэх эрх авна. Энэ үед эхлээд хэрэглэгчийн нэр, нууц үг, код зэргийг POST -аргаар явуулдаг. Ингэснээр нэвтрэх эрх (token) авч улмаар GET аргаар хүсэлт явуулж хүссэн датагаа авдаг.Доорх жишээнд Go.Data хэмээх өвчний дэгдэлтийг судалдаг аппликэйшнээс лавлагааг хэрхэн татаж авах талаар харуулав. Go.Data веб front-end болон дата цуглуулах зориулаттай гар утасны аппликэйшн хоёрын бүх харилцан үйлдэлд API ашигладаг. Go.Data-г дэлхий даяар ашиглагддаг боловч өвчний дэгдэлтийн талаарх мэдээлэл нууцлалтай учраас өөрийгөө мөн эсэхийг баталгаажуулсны үндсэн дээр зөвхөн өөрийн дэгдэлтийн мэдээлэлд орох эрхтэй болдог.Дараах жишээнд Go.Data–ын httr болон jsonlite -аар API-тай харьцаж дэгдэлтийн үеийн хавьтагсдын датаг импорт хийхийг харуулав.АНХААРУУЛГА: API –ийн зөвшөөрөл шаардлагатай вебсайтаас том хэмжээний дата татаж байх явцад сайт завсарлага авч үйлдэл зогсох магадлалтай. Үүнээс сэргийлж нэвтрэх эрхийг (access_token) API GET хүсэлт болгоны өмнө эргүүлж татах хэрэгтэй ба мөн асуумжыг хязгаарлах эсвэл шүүлтүүр ашиглаж болно.TIP: fromJSON() function jsonlite package fully un-nest first time ’s executed, likely still list items resulting tibble. need un-nest certain variables; depending nested .json . view info , view documentation jsonlite package, flatten() function.Нэмэлт мэдээлэл, зааврыг LoopBack Explorer, [Contact Tracing] хуудас эсвэл Go.Data Github repository доторх API зөвлөгөөнөөс харна уу.линкээс httr багцын талаар уншна уу.Мөн энэхүү хэсгийг бичихэд tutorial болон tutorial линк дэх хичээлээс ашигласан.","code":"\n# баталгаажуулалт\nurl <- \"https://godatasampleURL.int/\"           # Go.Data –н зөв url\nusername <- \"username\"                          # Go.Data -ийн хэрэглэгчийн нэр  \npassword <- \"password\"                          # Go.Data –ын нууц үг\noutbreak_id <- \"xxxxxx-xxxx-xxxx-xxxx-xxxxxxx\"  # Go.Data дахь дэгдэлтийн ID \n\n# Нэвтрэх эрх, тасалбар (token)\nurl_request <- paste0(url,\"api/oauth/token?access_token=123\") # үндсэн URL хүсэлтийг тодорхойл\n\n\n# хүсэлтийг бэлд\nresponse <- POST(\n  url = url_request,  \n  body = list(\n    username = username,    # дээр хадгалсан хэрэглэгчийн нэр, нууц үгээ ашиглан орох эрхийг баталгаажуулна                     \n    password = password),                                       \n    encode = \"json\")\n\n# хүсэлтийг илгээж, ирсэн хариуг задал\ncontent <-\n  content(response, as = \"text\") %>%\n  fromJSON(flatten = TRUE) %>%          # сүлжилдсэн JSON-г нэгтгэ\n  glimpse()\n\n# Хариултад ирсэн нэвтрэх эрх (token)-ийг хадгал\naccess_token <- content$access_token    # нэвтрэх эрхийг хадгалснаар дараагийн API –ийн үйлдлүүд хийгдэх боломжтой болно\n\n# Дэгдэлтийн хавьтлуудын өгөгдлийг импортлох\n# нэвтрэх эрх (token)-ийг хэрэглэ\nresponse_contacts <- GET(\n  paste0(url,\"api/outbreaks/\",outbreak_id,\"/contacts\"),          # GET хүсэлт\n  add_headers(\n    Authorization = paste(\"Bearer\", access_token, sep = \" \")))\n\njson_contacts <- content(response_contacts, as = \"text\")         # текстийг JSON луу хувирга\ncontacts <- as_tibble(fromJSON(json_contacts, flatten = TRUE))   # JSON –г tibble (хүснэгт) -руу хувирга"},{"path":"файл-импортлож-экспортлох.html","id":"экспорт","chapter":"7 Файл импортлож экспортлох","heading":"7.11 Экспорт","text":"","code":""},{"path":"файл-импортлож-экспортлох.html","id":"rio-багцаар-экспортлох","chapter":"7 Файл импортлож экспортлох","heading":"rio багцаар экспортлох","text":"rio -ын export() функц import() тэй ижил хэрэглэгддэг. Эхлээд хадгалах гэж буй R обьектоо (linelist гэх мэт) бичээд, араас нь шинээр үүсгэж буй файлын нэрийг өргөтгөлтэй нь хамт хашилтанд оруулж бичнэ. Жишээ:Доорх жишээгээр linelist гэсэн хүснэгтийг Excel хүснэгт болгож R-ийн үндсэн ажлын хавтаст хадгалахыг харуулав.Дээрх linelist хүснэгтийг csv файл болгож хадгалая гэвэл дээрх кодон дах өргөтгөлийг өөрчлөхөд л болно. Үүнийгээ мөн () -аар файлын замыг нь зааж хадгална:","code":"\nexport(linelist, \"my_linelist.xlsx\") # ажлын хавтаст хадгалагдна\nexport(linelist, here(\"data\", \"clean\", \"my_linelist.csv\"))"},{"path":"файл-импортлож-экспортлох.html","id":"clipboard-д-экспорт-хийх","chapter":"7 Файл импортлож экспортлох","heading":"Clipboard-д экспорт хийх","text":"Хүснэгтийг өөрийн компьютерийн “clipboard” –д экспорт хийхийн тулд (дараагаар нь Excel, Google spreadsheet -руу орууулах зориулалтаар) clipr -ын write_clip() -ыг ашиглана.","code":"\n# linelist хүснэтгийг системийн clipboard -д экспортлох\nclipr::write_clip(linelist)"},{"path":"файл-импортлож-экспортлох.html","id":"import_rds","chapter":"7 Файл импортлож экспортлох","heading":"7.12 RDS файлууд","text":"Хүснэгтийг .csv, .xlsx зэрэг өртгөтгөлөөс гадна .rds өргөтгөлөөр экспортлож болно. Энэ нь зөвхөн R –т өвөрмөц ба тухайн датаг R дээр дахин хэрэглэх нь тодорхой бол энэ өргөтгөлөөр хадгалах нь тохиромжтой.Багануудын дата төрөл хэвээр хадгалагдсан байдаг тул импорт хийхэд дахин янзалж, цэвэрлэх шаардлагагүй (Excel, CSV файлууд дээр энэ үйлдлийг хийх нь толгойны өвчин болдог!). Мөн файлын хэмжээ багасгадаг учир том хэмжээний дата импорт, экспорт хийхэд тохиромжтой.Жишээ нь та тархвар судлалын багтай ажиллаж байлаа гэж бодъё. Тэдний ГИС (GIS)-ийн багт газрын зураг үүсгүүлэхээр файл явуулах бол .rds хэлбэрээр явуулбал оновчтой (тэд бас R хэрэглэдэг бол)! Учир нь багана тус бүрийн дата төрөл өөрчлөгддөггүй тул тэдний хийх ажлыг хөнгөвчилж өгдөг.","code":"\nexport(linelist, here(\"data\", \"clean\", \"my_linelist.rds\"))"},{"path":"файл-импортлож-экспортлох.html","id":"import_rdata","chapter":"7 Файл импортлож экспортлох","heading":"7.13 Rdata файл ба list-үүд","text":".Rdata файлууд олон R обьектыг зэрэг хадгалдаг. Тухайлбал олон хүснэгт, математик загварын үр дүнгүүд, list-үүд зэрэг файлууд хадгалагддаг. Энэ нь аливаа төсөл дээр хамтран ажиллаж, хоорондоо олон файл солилцож өөрчлөх шаардлагатай тохиолдолд их хэрэгтэй байдаг.Жишээнд “my_objects.Rdata” хэмээх файл дотор олон R обьектуудыг оруулан экспортолж буйг харуулав.Тэмдэглэл: list импорт хийх үед rio -ын import_list()–ыг ашигласнаар list-ийн бүтэц, агууламжийг яг хэвээр нь хадгалах боломжтой.","code":"\nrio::export(my_list, my_dataframe, my_vector, \"my_objects.Rdata\")\nrio::import_list(\"my_list.Rdata\")"},{"path":"файл-импортлож-экспортлох.html","id":"график-зураг-хадгалах","chapter":"7 Файл импортлож экспортлох","heading":"7.14 График, зураг хадгалах","text":"ggplot()-ээр бүтээсэн график хадгалах талаар [ggplot basics] хэсэгт дэлгэрэнгүй заасан буй.Товчхондоо графикийг хэвлэсний дараа ggsave(\"my_plot_filepath_and_name.png\") коммандаар хадгална. Хамгийн сүүлд хэвлэгдсэн графикийг хадгалахдаа үүсгэж буй файлын нэрийг (өргөтгөлтэй нь хамт ) бичиж болно, эсвэл өмнө нь хадгалагдсан байсан график дээр өөрчлөлт хийн хадгалж буй бол нэрийг нь plot = аргументэд шууд зааж болно. Графикийн өргөн, урт, нэгж, нарийвчлал зэргийг width =,height =,units =,dpi = аргументуудаар тохируулж болно.Халдварын тархалт харуулдаг тор хэлбэрийн (network) график хадгалах талаар [Transmission chains] хуудаст оруулсан.","code":""},{"path":"файл-импортлож-экспортлох.html","id":"эх-сурвалж-материал","chapter":"7 Файл импортлож экспортлох","heading":"7.15 Эх сурвалж материал","text":"R Data Import/Export ManualR 4 Data Science chapter data importggsave() documentationДараах хүснэгтийг rio -ын онлайн vignette –ээс авсан. Энэхүү хүснэгтээр rio багцын импорт, экспорт хийхдээ файлын өргөтгөлтэй холбоотойгоор зэрэг ажиллуулдаг багцууд, эдгээр нь rio-ын default -д орсон эсэхийг харуулав. .","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"дата-цэвэрлэгээ-ба-үндсэн-функцууд","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"8 Дата цэвэрлэгээ ба үндсэн функцууд","text":"Энэ бүлэгт датаг “цэвэрлэхэд” хэрэглэгддэг нийтлэг аргууд болон R-ын дата менежментийн үндсэн функцуудыг сурах болно.Дата цэвэрлэгээ хийх алхам бүрийг “raw” (түүхий) дата (linelist) импортлохоос авахуулаад хийгдэх үйлдэл бүрийг нэг бүрчлэн тайлбарлах болно. R- дата цэвэрлэгээ “pipe” (хоолой) холбоосоор дамжин хийгддэг бөгөөд “pipe” %>% буюу холбогч оператор дамжуулах үйлдлийг гүйцэтгэдэг.","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"үндсэн-функцууд","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Үндсэн функцууд","text":"Энэхүү номонд tidyverse -ын харъяа багцууд, тэдний функцуудыг голчлон тайлбарлна. Гол хэрэглэгдэх функцуудыг дор жагсаав.tidyverse багцын нэг dplyr багцын дата засаж, янзалдаг “үйл үгэн” функцууд түлхүү орсон (dplyr багцын нэр “data frame-plier буюу”хүснэгт засагч” гэсэн утгатай).( tidyverse –ын бусад багцуудад ggplot2,tidyr,stringr,tibble,purrr,magrittr,forcats ордог).Эдгээр функцууд Stata болон SAS программ дээр хэрхэн бичигддэг талаар [Transition R] -линкээс үзэж болно.Датаг янзалж байхад R-ын data.table багцын операторууд болох :=,[ ] гарч ирж болно. data.table багцын хэрэглэгддэг синтакс, аргачлалыг [Data Table] хуудаст товч оруулсан.","code":"| **magrittr**  | **dplyr**     | **dplyr** | **dplyr** | **dplyr**             | **base** R"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"нэр-томьёо","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Нэр томьёо","text":"Энэхүү номонд хувьсагч (variable) -ийг багана, ажиглалт (observations) -ийг мөр гэж нэрших болно. Тархвар судлалын ихэнх датаг гол бүрдүүлдэг зүйлс бол багана, мөр, доторх утга гэж “tidy data” -д тайлбарласан байдаг.Variables (Хувьсагч) нь ижил хэв шинжтэй утгуудыг агуулсан байдаг (насны бүлэг, өвчин эхэлсэн огноо, эмчилгээний үр дүн гэх мэт). Observations (Ажиглалт) гэж тухайн нэгжид хийгдсэн бүх хэмжилтүүдийг хэлнэ (хүн, газар, лабораторийн дээж материал). Эдгээр шинж талуудыг бодитоор, барьцтай илэрхийлэх нь бэрхшээлтэй.“Tidy” (цэгцтэй) датанд багана болгон хувьсагч, мөр болгон ажиглалт, нэг нүд болгон нэг утгыг зааж байдаг. Цэгцтэй загварт хэлбэржээгүй дата зарим тохиолдол бий. Тухайлбал “wide”(өргөн) дата гэхэд хувьсагч нь хэд хэдэн баганад хуваагдан байрладаг. Үүний жишээг [Pivoting data]-т хэсэгт харуулсан. Ажиглалт ч гэсэн хэд хэдэн мөрөнд хуваагдан байрласан байх тохиолдол бий.Энэ номонд бид датаг хэрхэн хувиргаж, янзлаж, менежмент хийд талаар харуулахыг илүү эрмэлзсэн. Тийм ч учраас хувьсагч, ажиглалт зэрэг хийсвэр ойлголт хэрэглэхийн оронд мөр, багана зэрэг бодитой бүтэц заасан нэршилийг хэрэглэхээр шийдсэн. Харин статистик дүн шинжилгээний талаар тайлбарласан хэсгүүдэд хувьсагч, ажиглалт гэсэн нэршил илүү хэрэглэгдсэн.","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"цэвэрлэх-холбоос","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"8.1 Цэвэрлэх холбоос","text":"Энэ хэсэгт дата цэвэрлэгээг үе шат тус бүрээр нь тайлбарласан. Цэвэрлэгээний явцыг “pipe” цэвэрлэх холбоост нэг бүрчлэн залгаж үзүүлсэн.Тархвар судлалд датаг янзлах, цэвэрлэх нь хоорондоо холбоотой дараалласан үйлдлүүдээс бүрддэг. R программ дээр цэвэрлэгээг хийхдээ мөн адил датаг нэг цэвэрлэх шатнаас нөгөөд угсруулан үйлддэг.Ийм угсруулсан үйлдлүүдийг dplyr -ын “үйл үгт” функцуууд болон magrittr-ын pipe%>% холбогч оператор хамтран гүйцэтгэдэг. Цэвэрлэгээ түүхий датагаар (“linelist_raw.xlsx”) эхлээд R -ын “цэвэрхэн” хүснэгт (linelist) болж гардаг. Үүнийг шууд ашиглаж, хадгалж, экспортлож болно.Цэвэрлэгээ хийж байхад үйлдлийн дараалал чухал. Нийтлэг хийгддэг үйлдлийн дараалалд:Датаг оруулж ирэхБаганын нэрсийг өөрчлөх, арилгахДавхардсан утгуудыг арилгахБагана нэмж, хувиргах (утгыг дахин кодлох, стандардчилах гэх мэт)Мөрүүдийг шүүж, хасаж, нэмэх","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"багцуудыг-ачааллах","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"8.2 Багцуудыг ачааллах","text":"Дараах кодыг уншуулж шаардлагатай багцуудыг ачааллана. Энэ номонд багцыг ачааллахад pacman -ны p_load()-ыг голчлон хэрэглэнэ. Учир нь энэ функц шаардлагатай багцыг автоматаар татаж авч, ачааллаад ажиллахад бэлэн болгодог. base R-ын багцыг library()-аар та өөрөө шууд (татаж авалгүйгээр ) ачааллаж бас болно. [R basics] хэсгээс энэ талаар нэмж үзнэ үү.","code":"\npacman::p_load(\n  rio,        # дата оруулах  \n  here,       # файлын холбоотой замыг тогтоох \n  janitor,    # дата, хүснэгт цэвэрлэх\n  lubridate,  # огноотой ажиллах\n  epikit,     # age_categories() функц\n  tidyverse   # дата менежмент ба график зураглал\n)"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"датаг-импортлох","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"8.3 Датаг импортлох","text":"","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"импорт-хийх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Импорт хийх","text":"Түүхий дата агуулсан Excel файлыг rio-ын import() функцээр импортлоно. rio нь файлын олон янзын төрөлтэй ажиллаж чаддагаараа давуу (.xlsx, .csv, .tsv, .rds. гэх мэт). [Import export] хэсгээс дэлгэрүүлж үзнэ үү.Энэ бүлгийн дасгалыг хамт хийх бол датаг дараах линкээс татаж авна уу. линк дээр дарж “түүхий” linelist -ыг татаж ав ( .xlsx файл).Хэмжээ том датасетийн хувьд импортлоход хугацаа их шаарддаг учраас импорт хийх коммандаа pipe залгааснаас салангид уншуулж, түүхий датагаа тусдаа файлаар хадгалах нь тохиромжтой. Ингэснээр мөн анхны болон цэвэрлэгдсэн дата хувилбаруудыг харьцуулахад хялбар болдог.Дорх жишээнд бид Excel-ийн түүхий файлыг импортлоод linelist_raw гэсэн хүснэгт болгож хадгаллаа.Энэхүү файлыг та өөрийн ажлын хавтас эсвэл R төслийн үндсэн хавтастаа байрлуулна гэж тооцсон учир файлын замыг бичихэд дэд хавтсыг оруулсангүй.Үүссэн хүснэгтийн эхний 50 мөрийг дараахаас харж болно. Тэмдэглэл: base R”-ын head(n) функцээр эхний n мөрийг R console дээр шууд харж болдог.","code":"\nlinelist_raw <- import(\"linelist_raw.xlsx\")"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"тоймлон-үзэх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Тоймлон үзэх","text":"Дата хүснэгтийн талаарх ерөнхий тойм мэдээг авахдаа skimr -ын skim() функцыг хэрэглэж болно. ([Descriptive tables] хэсгээс нэмж харна уу). Баганууд numeric (тоон), character (үсгэн) зэргээр төрөл төрлөөрөө тоймлогддог. Тэмдэглэл: “POSIXct” гэдэг нь нэг төрлийн боловсруулагдаагүй огноо датаны төрөл ([Working dates] хэсгээс харна уу).\nTable 8.1: Data summary\nVariable type: characterVariable type: numericVariable type: POSIXct","code":"\nskimr::skim(linelist_raw)"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"баганын-нэрс","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"8.4 Баганын нэрс","text":"Хүснэгт импортлоход хамгийн эхний, толгой мөрийг баганын нэр гэж R уншдаг. Синтакст мөн энэ нэр хэрэгдэгднэ.SAS, STATA зэрэг бусад статистик программд баганын толгой дох товчилсон нэрнээс гадна “labels” (дэлгэрэнгүй нэр) гэж байдаг. R дээр багана тус бүрт label өгөх боломжтой ч өргөн хэрэглэдэггүй. График дээр баганын нэрийг хэвлэлд үзэмжтэй харагдахуйцаар болгоход график хэвлэх комманддаа дэлгэцийн тохируулгад нь зааж өгч болно (тэнхлэгийн (axis) нэрс, ялгах тэмдгийн (legends), нэрс, багана толгой гэх мэт. scales section ggplot tips page болон Tables presentation хуудсаас нэмж уншна уу). Баганад label өгөх талаар болон линкүүдээс үзэж болно.Баганын нэрс R дээр байнга хэрэглэгдэх тул “цэвэр” синтакстай байх нь чухал. Дараах аргаар нэрлэвэл тохиромжтой:БогиноЗай авахгүй, доогуур зураас _ хэрэглэхӨвөрмөц тэмдэглэгээ оруулахгүй (&, #, <, >, …)Төстэй нэрлэх ( жишээ нь бүх огноотой баганыг date_onset, date_report, date_death гэж нэрлэх)base R –ын names() функцээр linelist_raw–дах баганын нэрсийг хэвлэж харахад:Зарим нэрс зай авсан (жишээ нь infection date)Огноотой баганууд жигд бус нэрлэгдсэн (жишээ нь date onset багана infection date ээс өөр).xlsx файл дээр нь сүүлийн хоёр баганын толгой нэгтгэгдсэн (merged) байсан нь харагдаж байна. Учир нь нэгтгэгдсэн баганын эхний баганын нэр R -т “merged_header” гэж импортлогдоод хоёр дах баганын нэр “…28” гэж импортлогдсон байна ( хоосон 28 -р багана байсан).ТЭМДЭГЛЭЛ: зай авсан баганы нэрийг хойшоо харсан дан хашилтад хийдэг. Жишээ нь: linelist$` '\\x60infection date\\x60'`. Ингэхдээ компьютерийн гаран дээрх хойшоо харсан дан хашилт (`) бичгийн дан хашилтаас ( ’ ) өөр гэдгйиг анхаарна уу.","code":"\nnames(linelist_raw)##  [1] \"case_id\"         \"generation\"      \"infection date\"  \"date onset\"     \n##  [5] \"hosp date\"       \"date_of_outcome\" \"outcome\"         \"gender\"         \n##  [9] \"hospital\"        \"lon\"             \"lat\"             \"infector\"       \n## [13] \"source\"          \"age\"             \"age_unit\"        \"row_num\"        \n## [17] \"wt_kg\"           \"ht_cm\"           \"ct_blood\"        \"fever\"          \n## [21] \"chills\"          \"cough\"           \"aches\"           \"vomit\"          \n## [25] \"temp\"            \"time_admission\"  \"merged_header\"   \"...28\""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"автомат-цэвэрлэгээ","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Автомат цэвэрлэгээ","text":"janitor багцын clean_names() функц баганын нэрсийн өвөрмөц байдлыг алдуулалгүйгээр жигдрүүлдэг. Ингэхдээ:Бүх баганыг зөвхөн доогуур зураас, тоо, үсгээс бүрдсэн нэртэй болгож хувиргана.Өргөгдсөн эгшгүүд ASCII хэлрүү галиглагдна (Герман хэлний ö –г “o”-руу, Испани хэлний “enye” -г “n” болгох гэх мэт)Үсгийн том жижгийг case = аргументэд зааж өгч болно (“snake” хэлбэр default сонголт, “sentence”, “title”, “small_camel” гэх мэт өөр сонголтууд буй)Нэр өөрчлөх, орлуулахдаа replace = аргументийг ашиглаж болно (ж: replace = c(onset = \"date_of_onset\"))Онлайн vignette –г эндээс харж болноЦэвэрлэх процесс clean_names() -эд түүхий linelist –ийг оруулснаар эхэлнэ:ТЭМДЭГЛЭЛ: сүүлийн баганын нэр “…28” байснаа “x28” болж хувирсан”.","code":"\n# түүхий датагаа clean_names() –д холбоод, үр дүнг нь \"linelist\" -доноо\nlinelist <- linelist_raw %>% \n  janitor::clean_names()\n\n# баганын шинэ нэрс\nnames(linelist)##  [1] \"case_id\"         \"generation\"      \"infection_date\"  \"date_onset\"     \n##  [5] \"hosp_date\"       \"date_of_outcome\" \"outcome\"         \"gender\"         \n##  [9] \"hospital\"        \"lon\"             \"lat\"             \"infector\"       \n## [13] \"source\"          \"age\"             \"age_unit\"        \"row_num\"        \n## [17] \"wt_kg\"           \"ht_cm\"           \"ct_blood\"        \"fever\"          \n## [21] \"chills\"          \"cough\"           \"aches\"           \"vomit\"          \n## [25] \"temp\"            \"time_admission\"  \"merged_header\"   \"x28\""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"баганын-нэрийг-гараар-цэвэрлэх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Баганын нэрийг гараар цэвэрлэх","text":"Баганын нэрсийг дээрх байдлаар жигдрүүлсний дараа гараар цэвэрлэх хэрэг заавал гардаг. Дорх кодонд dplyr –ын rename() -ыг pipe холбоост залгаж зарим баганын нэрийг янзалсан. rename() функц NEW = OLD– гэсэн дарааллаар аргументээ авдаг. Эхлээд шинэ, дараа нь хуучин нэрийг бичнэ.Дараах цэвэрлэгээний процесст нэр өгөх комманд нэмэгдэж орсныг ажиглаарай. Уншихад амар болгож зарим газар зай авсан.Баганын нэрс өөрчлөгдсөн байна:","code":"\n# ЦЭВЭРЛЭХ 'PIPE' ХОЛБООС (түүхий датаг үе шаттайгаар дамжуулан цэвэрлэдэг холбоос) \n##################################################################################\n\n# Цэвэрлэх холбоосыг эхлэх\n###########################\nlinelist <- linelist_raw %>%\n    \n    # баганын нэрсийг жигдрүүлэх\n    janitor::clean_names() %>% \n    \n    # зарим баганын нэрийг гараар өөрчил\n           # ШИНЭ нэр             # ХУУЧИН нэр\n    rename(date_infection       = infection_date,\n           date_hospitalisation = hosp_date,\n           date_outcome         = date_of_outcome)##  [1] \"case_id\"              \"generation\"           \"date_infection\"      \n##  [4] \"date_onset\"           \"date_hospitalisation\" \"date_outcome\"        \n##  [7] \"outcome\"              \"gender\"               \"hospital\"            \n## [10] \"lon\"                  \"lat\"                  \"infector\"            \n## [13] \"source\"               \"age\"                  \"age_unit\"            \n## [16] \"row_num\"              \"wt_kg\"                \"ht_cm\"               \n## [19] \"ct_blood\"             \"fever\"                \"chills\"              \n## [22] \"cough\"                \"aches\"                \"vomit\"               \n## [25] \"temp\"                 \"time_admission\"       \"merged_header\"       \n## [28] \"x28\""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"баганын-байрлалаар-нь-нэр-өгөх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Баганын байрлалаар нь нэр өгөх","text":"Баганыг нэрийг солихдоо нэрээр нь дуудахаас гадна байрлалыг нь дуудаж болдог. Жишээ нь:","code":"\nrename(newNameForFirstColumn  = 1,\n       newNameForSecondColumn = 2)"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"selectболон-summarise-ашиглан-нэр-өгөх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"select()болон summarise() ашиглан нэр өгөх","text":"Нэр өгөхдөө dplyr -ын select()болон summarise() функцуудыг хавсран ашиглавал арай түргэн. select()–ээр ажиллах гэж буй багануудаа сонгож авахад хэрэглэдэг (дараагийн хэсгүүдэд дахин дурьдна).summarise()–ын талаар [Grouping data] болон [Descriptive tables] хэсгүүдэд тайлбарласан. Эдгээр функц мөн адил new_name = old_name гэсэн дарааллаар аргументээ авна. Жишээ:","code":"\nlinelist_raw %>% \n  select(# ШИНЭ нэр              # ХУУЧИН нэр\n         date_infection       = `infection date`, # нэрийг солиод, ЗӨВХӨН тухайн багануудыг л авч үлднэ\n         date_hospitalisation = `hosp date`)"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"бусад","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Бусад","text":"","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"excel-дээрх-баганын-нэр-хоосон-байх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Excel дээрх баганын нэр хоосон байх","text":"R-т баганын нэргүй дата байх боломжгүй. Тухайлбал Excel –ийн хүснэгт хоосон толгойтой баганатай R –луу импортлогдвол баганын байрлалаас нь хамаарч R автоматаар “…1”, “…2” гэх мэтээр нэр өгдөг (жишээ нь хүснэгтийн 4 дэх багана нэргүй хоосон орж ирсэн бол R тэр баганыг “…4” гэж нэрлэнэ).Энэ автоматаар өгөгдсөн нэрсийг байрлалынх нь дугаараар (дээр дурьдсан жишээний дагуу), эсвэл оноосон нэрээр нь дуудаж гараар цэвэрлэх боломжтой (linelist_raw$...1.","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"excel-багана-нүднүүд-нэтгэгдсэн-merged-байх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Excel багана, нүднүүд нэтгэгдсэн (merged) байх","text":"Заримдаа Excel –ийн файл ыг хүлээж аваад харахад хүснэгтийн нүднүүд нэтгэгдсэн (merged) байдаг. Нэгтгэгдсэн нүдтэй хүснэгт хүн уншихад амар боловч, “цэгцтэй дата/tidy data” хэлбэрт ороогүй учраас компьютерт сайн уншигддаггүй ([Transition R] хэсэгт тайлбарласан). R –дээр нэгтгэгдсэн нүднүүд уншигдахгүй.Дата оруулж буй хүмүүстээ хүнд уншигддаг дата машинд уншигддаг дата хоёр өөр гэдгийг сайн ойлгуулах хэрэгтэй. Цэгцтэй датаны tidy data зарчмыг ойлгуулахыг мөн эрмэлз. Болж өгвөл дата оруулах аргачлалд нь өөрчлөлт хийж аль болох цэгцэрсэн, ямар нэг нэгтгэсэн нүдгүй дата хүлээж авахаар зохицуулбал сайн.Хувьсагч тус бүр баганатай байна.Ажиглалт тус бүр мөртэй байнаУтга тус бүр өөрийн нүдэнд байна.rio-ын import() -ээр дата импортлож байхад нэтгэгдсэн нүд датанд байх тохиолдолд тухайн нүд задарч, доторх утга эхний нүдэнд бичигдээд дараах нүднүүд нь хоосон орхигддог.Нэтгэгдсэн нүдний асуудлыг openxlsx багцын readWorkbook()функцээр шийдвэрлэх боломжтой. Үүний fillMergedCells = аргументийг TRUE гэж тохируулбал нэтгэгдсэн нүднүүд задрахад доторх утга бүгдэд нь зэрэг хуваарилагдан ордог онцлогтой.АЮУЛТАЙ: readWorkbook() -өөр баганын нэрс нэгтгэгдсэн бол давхардсан нэртэй багануудтай болчихдог. Үүнийг гараар цэвэрлэх шаардлагатай. R давхардсан нэртэй ажиллахдаа муу! Давхар нэртэй багануудын нэрийг байршлаар нь дуудаж янзалж болно (баганын нэрийг гараар цэвэрлэх хэсэгт тайлбарласан)","code":"\nlinelist_raw <- openxlsx::readWorkbook(\"linelist_raw.xlsx\", fillMergedCells = TRUE)"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"багана-сонгох-болон-эрэмбэлэх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"8.5 Багана сонгох болон эрэмбэлэх","text":"dplyr-ын select() –д баганыг дуудаж оруулахдаа дэс дарааг нь зааж өгч болно.БОЛГООМЖЛОЛ: linelist- датаг select() –ээр янзалсан байгааг жишээ болгож харуулсан боловч хадгалаагүй. Pipe холбоостоо names()-ыг залгаснаар баганы нэр хэрхэн өөрчлөгдсөнийг харж болно.Цэвэрлэх холбоосонд linelist –ын БҮХ нэрс цэвэрлэгдсэн байх үеийг энд харуулав:","code":"\nnames(linelist)##  [1] \"case_id\"              \"generation\"           \"date_infection\"      \n##  [4] \"date_onset\"           \"date_hospitalisation\" \"date_outcome\"        \n##  [7] \"outcome\"              \"gender\"               \"hospital\"            \n## [10] \"lon\"                  \"lat\"                  \"infector\"            \n## [13] \"source\"               \"age\"                  \"age_unit\"            \n## [16] \"row_num\"              \"wt_kg\"                \"ht_cm\"               \n## [19] \"ct_blood\"             \"fever\"                \"chills\"              \n## [22] \"cough\"                \"aches\"                \"vomit\"               \n## [25] \"temp\"                 \"time_admission\"       \"merged_header\"       \n## [28] \"x28\""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"баганыг-үлдээх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Баганыг үлдээх","text":"Зөвхөн үлдээх шаардлагатай багануудаа л сонго.Шаардлагатай багануудаа select()коммандад хашилтгүйгээр оруул. Таны оруулсан дарааллаар хүснэгтийн багана эрэмбэлэгднэ. Байхгүй баганыг select()–д бичвэл R алдаа заана. (алдаа заахгүйгээр үргэлжлүүлэх талаар any_of()–ын тайлбараас үзнэ үү).","code":"\n# linelist датаг select() коммандаар цэвэрлээд names() -ээр баганын нэрсийг хэвлэсэн\nlinelist %>% \n  select(case_id, date_onset, date_hospitalisation, fever) %>% \n  names()  # баганын нэрсийг хэвлэж харуулах## [1] \"case_id\"              \"date_onset\"           \"date_hospitalisation\"\n## [4] \"fever\""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"clean_tidyselect","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"“tidyselect” туслах функцууд","text":"Багана үлдээх, хасах, хувиргах үйлдэл хийхдээ туслах функц ашиглавал хялбар болдог. Эдгээр туслах функцууд tidyverse-ын харьяа tidyselect багцыннх ба dplyr -ын багана сонгох үйлдэлтэй хавсарч хийгддэг.Жишээ нь everything() функцээр “бичигдсэнээс бусад баганыг” сонгодог бөгөөд ингэх нь баганын дарааллыг өөрчлөхөд их хэрэгтэй. Дараах код date_onset болон date_hospitalisation багануудыг хамгийн эхэнд (зүүн талд) авчраад, үлдсэн багануудыг ард нь хэвээр нь үлдээсэн. everything() комманд хоосон хаалттай байгааг анхаар:dplyr багцын select(), across(), summarise() нартай хамтран хэрэглэддэг tidyselect -ын функцуудыг дор жагсаав :everything() - бичсэнээс бусад бүх багануудыг сонгоноeverything() - бичсэнээс бусад бүх багануудыг сонгоноlast_col() - сүүлийн баганаlast_col() - сүүлийн баганаwhere() - аливаа функцыг бүх баганад уншуулж үзээд, TRUE тохиодлуудыг сонгоноwhere() - аливаа функцыг бүх баганад уншуулж үзээд, TRUE тохиодлуудыг сонгоноcontains() - заасан үсэг, тэмдэгт (character) агуулсан баганыг сонгох\nжишээ: select(contains(\"time\"))\ncontains() - заасан үсэг, тэмдэгт (character) агуулсан баганыг сонгохжишээ: select(contains(\"time\"))starts_with() - баганын нэрийн эхлэл хэсгийг тааруулж сонгох\nжишээ: select(starts_with(\"date_\"))\nstarts_with() - баганын нэрийн эхлэл хэсгийг тааруулж сонгохжишээ: select(starts_with(\"date_\"))ends_with() - баганын нэрийн төгсгөл хэсгийг тааруулж сонгох\nжишээ: select(ends_with(\"_post\"))\nends_with() - баганын нэрийн төгсгөл хэсгийг тааруулж сонгохжишээ: select(ends_with(\"_post\"))matches() -заасан regular expression (regex) тэй таарсан баганыг сонгох\nжишээ: select(matches(\"[pt]al\"))\nmatches() -заасан regular expression (regex) тэй таарсан баганыг сонгохжишээ: select(matches(\"[pt]al\"))num_range() - x01, x02, x03 зэрэг тоо, дугаараар тааруулж сонгохnum_range() - x01, x02, x03 зэрэг тоо, дугаараар тааруулж сонгохany_of() - аль нэг багана байхгүй тохиолдолд алдаа заахгүйгээр үйлдлийг гүйцэтгэнэ.\nжишээ: select(any_of(date_onset, date_death, cardiac_arrest))\nany_of() - аль нэг багана байхгүй тохиолдолд алдаа заахгүйгээр үйлдлийг гүйцэтгэнэ.жишээ: select(any_of(date_onset, date_death, cardiac_arrest))Үүнээс гадна ердийн операторуудыг ашиглаж болно. Жишээ нь c()-аар хэд хэдэн баганыг жагсааж, : тэмдэгтээр дарааллаж байрласан багануудыг сонгож болно. ! (эсрэг),& (БА), | (ЭСВЭЛ) зэрэг тэмдэгтүүдээр багана сонгохдоо туслуулж болно.Баганыг логик шалгуураар сонгох бол ()-ийг хэрэглэ. Хэрэв ()-ийг функцын дотор бичихээр бол хаалтыг нь хоосон байлгаж болохгүй. Дорх жишээнд зөвхөн тоон утгатай баганууд сонгохыг харууллаа.Нэрэндээ зөвхөн заасан character -ыг агуулагсан багануудыг сонгох бол contains() -ыг хэрэглэ. Мөнends_with() болон starts_with() strings -ын байрлалыг илүү тодорхой зааж өгч болно.matches() функц contains() -тай төстэй үүрэгтэй боловч regular expression ашигладгаараа онцлог ([Characters strings]) хэсгээс нэмж харна уу. Энэ функцыг хэрэглэхдээ олон strings -үүдээ (ЭСВЭЛ) хооронд нь босоо зураасаар тусгаарлаад хашилтанд хийнэ :БОЛГООМЖИЛ: Датанд байхгүй баганын нэрийг эдгээр функцэд өгвөл код алдаа зааж үйлдэл тэр дороо зогсчихдог. Тиймээс заасан strings байхгүй байх магадлалтай тохиолдолд any_of() -ийг хэрэглэвэл тохиромжтой. Ялангуяа багана хасахад их хэрэг болдог.Дор жишээнд бичсэн багануудын нэг нь л датанд буй боловч дорх код алдаа заахгүйгүээр үргэлжилж, цэвэрлэх холбоосын йлдлүүд зогсолтгүйгээр гүйцэтгэлээ хийж байна.","code":"\n# date_onset болон date_hospitalisation -г хамгийн урд зөөж авчрах\nlinelist %>% \n  select(date_onset, date_hospitalisation, everything()) %>% \n  names()##  [1] \"date_onset\"           \"date_hospitalisation\" \"case_id\"             \n##  [4] \"generation\"           \"date_infection\"       \"date_outcome\"        \n##  [7] \"outcome\"              \"gender\"               \"hospital\"            \n## [10] \"lon\"                  \"lat\"                  \"infector\"            \n## [13] \"source\"               \"age\"                  \"age_unit\"            \n## [16] \"row_num\"              \"wt_kg\"                \"ht_cm\"               \n## [19] \"ct_blood\"             \"fever\"                \"chills\"              \n## [22] \"cough\"                \"aches\"                \"vomit\"               \n## [25] \"temp\"                 \"time_admission\"       \"merged_header\"       \n## [28] \"x28\"\n# Тоон утгатай багануудыг сонгох\nlinelist %>% \n  select(where(is.numeric)) %>% \n  names()## [1] \"generation\" \"lon\"        \"lat\"        \"row_num\"    \"wt_kg\"     \n## [6] \"ht_cm\"      \"ct_blood\"   \"temp\"\n# тодорхой үг, үсэг нэрэндээ агуулсан багануудыг сонгох\nlinelist %>% \n  select(contains(\"date\")) %>% \n  names()## [1] \"date_infection\"       \"date_onset\"           \"date_hospitalisation\"\n## [4] \"date_outcome\"\n# олон strings-ийг эрэг хайж, тааруулах\nlinelist %>% \n  select(matches(\"onset|hosp|fev\")) %>%   # note the OR symbol \"|\"\n  names()## [1] \"date_onset\"           \"date_hospitalisation\" \"hospital\"            \n## [4] \"fever\"\nlinelist %>% \n  select(any_of(c(\"date_onset\", \"village_origin\", \"village_detection\", \"village_residence\", \"village_travel\"))) %>% \n  names()## [1] \"date_onset\""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"баганыг-хасах","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Баганыг хасах","text":"Хасах (“-”) тэмдэг (ж:select(-outcome)) эсвэл баганын нэрс жагсаасан вектороор (дор жишээнд үзүүлсэн) аль баганыг хасахаа зааж өг. Бусад баганууд хэвээр үлдэх болно.base R -ын синтакс NULL-ыг ашиглаж баганыг хасч бас болно. Жишээ нь:","code":"\nlinelist %>% \n  select(-c(date_onset, fever:vomit)) %>% # date_onset багана, fever-ээс vomit хүртэлх багануудыг хасах\n  names()##  [1] \"case_id\"              \"generation\"           \"date_infection\"      \n##  [4] \"date_hospitalisation\" \"date_outcome\"         \"outcome\"             \n##  [7] \"gender\"               \"hospital\"             \"lon\"                 \n## [10] \"lat\"                  \"infector\"             \"source\"              \n## [13] \"age\"                  \"age_unit\"             \"row_num\"             \n## [16] \"wt_kg\"                \"ht_cm\"                \"ct_blood\"            \n## [19] \"temp\"                 \"time_admission\"       \"merged_header\"       \n## [22] \"x28\"\nlinelist$date_onset <- NULL   # base R -ын синтаксаар date_onset баганыг хасах"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"дангаараа-үйлдэх-коммандууд","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Дангаараа үйлдэх коммандууд","text":"select() -ийг дангаар нь хэрэглэж болдог (pipe холбоостой залгаа биш). Энэ тохиолдолд эхний аргумент нь янзлах гэж буй хүснэгтийн нэр байна.","code":"\n#  id болон насыг харуулсан шинэ linelist үүсгэх\nlinelist_age <- select(linelist, case_id, contains(\"age\"))\n\n# үүсгэсэн linelist-ийн баганын нэрсийг харуул\nnames(linelist_age)## [1] \"case_id\"  \"age\"      \"age_unit\""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"pipe-холбоосонд-нэмж-залгах","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Pipe холбоосонд нэмж залгах","text":"linelist_raw-хүснэгт дэх дараах баганууд бидэнд шаардлагагүй: row_num, merged_header, x28. Эдгээрийг хасахдаа select() коммандыг pipe холбоосонд залгаж хасдаг:","code":"\n# ЦЭВЭРЛЭХ 'PIPE' ХОЛБООС (түүхий датаг үе шаттайгаар дамжуулан цэвэрлэдэг холбоос)\n##################################################################################\n\n# Цэвэрлэх холбоосыг эхлэх\n###########################\nlinelist <- linelist_raw %>%\n    \n    # баганын нэрсийг жигдрүүлэх\n    janitor::clean_names() %>% \n    \n    # зарим баганын нэрийг гараар өөрчил\n           # ШИНЭ нэр             # ХУУЧИН нэр\n    rename(date_infection       = infection_date,\n           date_hospitalisation = hosp_date,\n           date_outcome         = date_of_outcome) %>% \n    \n    # ЭНЭ ХҮРТЭЛХ ҮЙЛДЭЛ ӨМНӨХ ХЭСЭГТТЭЙ АДИЛ\n    #####################################################\n\n    # баганыг хас\n    select(-c(row_num, merged_header, x28))"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"давхардалтыг-арилгах","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"8.6 Давхардалтыг арилгах","text":"Энэхүү номын [De-duplication] хэсгээс давхардалтыг арилгах нэмэлт аргатай танилцаж болно. Энэ хэсэгт бид зөвхөн мөрний энгийн давхардалтыг арилгахыг харуулна.dplyr багц distinct() гэсэн функцтэй. Энэ функц датан дах бүх мөрний давхардалтыг шалгасны дараа датаг зөвхөн өвөрмөц мөртэй болгож хувиргадаг. Энэ үйлдлээр зөвхөн 100% адилхан мөрүүдийн давхардалт арилдаг.Давхардсан мөрийг хайхдаа мөрүүдийг хэсэгчилэн шалгаж болно (default аар бүх мөрийг зэрэг шалгана). Хэдий хэмжээний мөрүүдэд хайгуул хийхээ өөрөө тохируулж болно (давхардалтыг арилгах хэсэгт мөн тайлбарласан). Энэ тохиолдолд зөвхөн тухайн хайлт хийсэн хэсэгт л өвөрмөц мөртэй болдог.Жишээнд хоосон distinct() цэвэрлэх холбоосонд залгасан байна. Ингэснээр 100% ижилхэн мөрүүдийн давхардал датанаас цэвэрлэгдсэн гэсэн үг (бүх мөр зэрэг шалгагдсан).Жишээнд linelist -ийн мөрний тоо nrow(linelist) -оор эхэлж байна.Давхардалтыг арилгасны дараа үлдсэн мөрийн тоог nrow(linelist) -ээр уншуулж шалгана. Хэрэв мөрийн тоо багассан бол 100% ижил давхардсан мөрнүүд арилсан гэсэн үг.Pipe холбоосондоо distinct() -ийг залгаж өгөв:","code":"\nlinelist <- linelist %>% \n  distinct()\n# ЦЭВЭРЛЭХ 'PIPE' ХОЛБООС (түүхий датаг үе шаттайгаар дамжуулан цэвэрлэдэг холбоос) \n##################################################################################\n\n# Цэвэрлэх холбоосыг эхлэх\n###########################\nlinelist <- linelist_raw %>%\n    \n    # баганын нэрсийг жигдрүүлэх\n    janitor::clean_names() %>% \n    \n    # зарим баганын нэрийг гараар өөрчил\n            # ШИНЭ нэр             # ХУУЧИН нэр\n    rename(date_infection       = infection_date,\n           date_hospitalisation = hosp_date,\n           date_outcome         = date_of_outcome) %>% \n    \n    # баганыг хас\n    select(-c(row_num, merged_header, x28)) %>% \n  \n    # ЭНЭ ХҮРТЭЛХ ҮЙЛДЭЛ ӨМНӨХ ХЭСЭГТТЭЙ АДИЛ\n    #####################################################\n    \n    # давхардлыг арилгах\n    distinct()"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"багана-үүсгэх-ба-хувиргах","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"8.7 Багана үүсгэх ба хувиргах","text":"Шинэ багана нэмэх эсвэл багана хувиргахдаа dplyr-ын mutate() функцыг ашиглахыг зөвлөж байна.Дараах жишээнд mutate()-аар хэрхэн шинэ багана нэмэхийг харуулав. Синтакс нь: mutate(new_column_name = value transformation)R-ын mutate() Stata-ын generateкоммандтай төстэй боловч хуучин баганыг хувиргадаж болдгоороо онцлог.","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"шинэ-багана","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Шинэ багана","text":"mutate() -ээр шинэ багана үүсгэх энгийн жишээг дор харуулав. Бүх мөрөндөө 10 гэсэн утгатай new_col хэмээх багана нэмж байна.Өөр баганын утгыг оролцуулан тооцоолол хийж бас болно. Дор жишээнд ht_cm, wt_kg гэсэн хуучин хоёр баганы утгыг оролцуулан тооцоолол хийж bmi (Биеийн Жингийн Индекс-БЖИ) -гэсэн шинэ багана үүсгэв (БЖИ = кг/жин^2) .Олон багана зэрэг шинээр үүсгэх бол багана тус бүрийг таслалаар тусгаарлаж шинэ мөрөнд бичнэ. Үүнийг дор жишээгээр харуулав. Хуучин баганыг нэтгэхдээ stringr -ын str_glue()-эийг бас ашиглаж болдог. ([Characters strings] -аас харж болно.Үүссэн шинэ багануудыг шалга. Жишээ болгож шинээр үүссэн багана, эдгээрий үүсгэхэд оролцсон хуучин багануудыг дор хэвлэлээ :ЗӨВЛӨГӨӨ: mutate() -ын өөр нэгэн хувилбар нь transmute() юм. Энэ функц mutate() шиг шинэ багана нэмэхээс гадна функц дотор бичигдээгүй бүх баганыг хасдаг.","code":"\nlinelist <- linelist %>% \n  mutate(new_col = 10)\nlinelist <- linelist %>% \n  mutate(bmi = wt_kg / (ht_cm/100)^2)\nnew_col_demo <- linelist %>%                       \n  mutate(\n    new_var_dup    = case_id,             # шинэ багана = хуучин баганыг хувилах\n    new_var_static = 7,                   # шинэ багана = бүх утга ижилхэн\n    new_var_static = new_var_static + 5,  # хуучин багана дээр шинэ багана үүсгэж болох ба ингэхдээ өөр баганын утгыг оролцуулан тооцоолол хийж болно. \n    new_var_paste  = stringr::str_glue(\"{hospital} on ({date_hospitalisation})\") #  бусад баганын утгыг хооронд нь нийлүүлж (paste) шинэ баганаү үсгэж болно.\n    ) %>% \n  select(case_id, hospital, date_hospitalisation, contains(\"new\"))        # жишээ үзүүлэх зорилгоор зөвхөн шинэ багануудыг харуулсан\n# УНШИГЧИД ХАРАГДАХГҮЙ\n# дээр үүсгэсэн баганыг хасна\n# linelist <- linelist %>% \n#   select(-contains(\"new_var\"))"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"багана-дах-дата-төрлийг-хувиргах","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Багана дах дата төрлийг хувиргах","text":"Огноо, тоо, логик (TRUE/FALSE) утгатай баганын дата төрлийг зөв тодорхойлж оруулбал цаашид ажиллахад хялбар байдаг. Жишээ нь хашилттай “2” character гэж уншигддаг бол хашилтгүй 2 -ыг тоо гэж уншина!Импорт хийж байхдаа баганын дата төрлийг тохируулж болдог ч олон үйлдэлтэй. [R Basics] хэсэгт обьектийн дата төрөл, үүнийг хэрхэн хувиргах талаар дэлгэрүүлж уншиж болно.Дараах кодоор багануудын төрөл зөв танигдсан эсэхийг шалгана. Мөн skim() -ээр багана дах дата төрлийг харж болно.Энд харуулснаар age баганын дата төрөл character байна. Энэ багананд математик тооцоолол хийхийн тулд дата төрөл нь тоо байх шаардлагатай!date_onset баганын төрөл нь мөн character байна! Анализ хийхийн тулд эдгээр багана огноо гэж танигдсан байх шаардлагатай!Эдгээр тохиолдолд mutate()-аар баганыг дахин тодорхойлж зөв төрөлд нь хувиргаж болно. Ингэхэд багана дах утга өөрчлөгдөхгүй зөвхөн дата төрөл өөрчлөгддөг. Дорх жишээнд age баганын дата төрлийг тоо болгож хувиргаж байна:Мөн .character(), .logical() функцуудыг дээрхийн адил хэрэглэж болно. Factor төрөлрүү хувиргахдаа base R -ын factor() эсвэл forcats-ын as_factor()-г хэрэглэдэг. Энэ талаар [Factors] хэсгээс нэмж уншна уу.Огноог болгоомжтой хувиргах шаардлагатай. [Working dates] хэсэгт хэд хэдэн аргуудыг дурьдсан. Түүхий дата дах огноонууд бүгд ижилхэн форматтай байвал цаашид Date төрөлд хувиргахад хялбар ( “MM/DD/YYYY”, эсвэл “DD MM YYYY” гэх мэт). Огноог Date төрөлд хувиргасны дараа зөв хувирсан эсэхийг заавал шалгаж бай.","code":"\nclass(linelist$age)## [1] \"character\"\nclass(linelist$date_onset)## [1] \"character\"\nlinelist <- linelist %>% \n  mutate(age = as.numeric(age))"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"бүлэглэсэн-дата","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Бүлэглэсэн дата","text":"mutate() функц бүлэглэгдсэн датанд ( [Grouping data] хэсгийг хар) арай өөр байдлаар хэрэглэдэг. Ихэнх статистикийн mean(), median(), max() зэрэг тооцооллыг нийт датанд биш бүлэглэсэн хэсгүүдэд тооцоолдог.Бүлэглэсэн хүснэгтэд mutate () -г хэрхэн хэрэглэх талаар tidyverse mutate documentation хэсгээс нэмж уншна уу.","code":"\n# насыг бүх мөрний дунджаар хуваах\nlinelist %>% \n  mutate(age_norm = age / mean(age, na.rm=T))\n\n# насыг эмнэлэгт хэвтсэн бүлгийн дунджаар хуваах\nlinelist %>% \n  group_by(hospital) %>% \n  mutate(age_norm = age / mean(age, na.rm=T))"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"clean_across","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Олон баганыг хувиргах","text":"Кодыг богино болгох үүднээс багануудыг зэрэг хувиргах шаардлага гардаг. Үүнийг dplyr -ын ( tidyverse багцуудын нэг) across()-оор хийж болно. dplyr -ын фүх функцийг across() -тай хавсарч хэрэглэх боломжтой ч select(), mutate(), filter(), summarise() зэрэгтэй илүү хамт хэрэглэдэг.[Descriptive tables] хэсгээс summarise() -тай хэрхэн хавсарч хэрэглэж болох талаар харна уу.across()-ын.cols = аргументэд сонгосон багануудаа оруулаад, .fns = аргументэд гүйцэтгэх функцээ зааж өгнө. .fns -д заагдсан функц өөрийн аргументтэй бол таслал аваад across() хаалт дотроо нэмж оруулна.","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"across-багана-сонгох","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"across() багана сонгох","text":"Хувиргах багануудаа .cols = -д зааж өг. Баганыг нэг бүрчлэн нэрлэж оруул. Эсвэл “tidyselect” -ын туслах функцээс ашиглаж болно. Сонгосон функцээ .fns =-д зааж өг. Оруулсан функц хаалтгүйгээр бичигдсэн байгааг дор жишээнээс харна уу.Дор жишээнд across() дотор бичигдсэн багануудад .character() хувиргалт зэрэг хийгдэж байна.Багана сонгох үйлдлийг “tidyselect” -ын туслах функцууд ашиглаж хялбарчилдаг. Энэ функцуудын талаар Багана сонгох болон эрэмбэлэх хэсэгт дэлгэрүүлж тайлбарласан. Эдгээр туслах функцэд : everything(), last_col(), (), starts_with(), ends_with(), contains(), matches(), num_range() any_of() орно.Энд бүх баганыг хэрхэн зэрэг character төрөлд хувиргахыг харуулав:Дор зөвхөн нэрэндээ “date” гэсэн үг агуулсан багануудыг character -руу хувиргаж байна (таслал, хаалтны байрлалыг ажигла):Дор POSIXct хэлбэрт (цаг хугацааг харуулсан түүхий датаны хэлбэр) байсан багануудыг хэрхэн хувиргахыг харуулав. Ингэхдээ .POSIXct() функцээр багануудыг шалгаад TRUE хариу өгсөн багана болгоныг .Date()-руу хувиргаснаар зөв Date хэлбэрт оруулах болно.Дээр бичсэнээр across() доторх () функцээр .POSIXct функц үнэн (TRUE), худал (FALSE) эсэхийг шалгаж байна.Энэхүү .POSIXct() нь lubridate багцын функц. Бусад төстэй “”-ээр эхэлдэг функцууд .character(), .numeric(), .logical() нар base R багцын функцууд.","code":"\nlinelist <- linelist %>% \n  mutate(across(.cols = c(temp, ht_cm, wt_kg), .fns = as.character))\n#бүх баганыг character болгож хувиргах\nlinelist <- linelist %>% \n  mutate(across(.cols = everything(), .fns = as.character))\n#\"date\" -гэсэн үг нэрэнд нь бичигдсэн бүх баганыг character болгож хувиргах\nlinelist <- linelist %>% \n  mutate(across(.cols = contains(\"date\"), .fns = as.character))\nlinelist <- linelist %>% \n  mutate(across(.cols = where(is.POSIXct), .fns = as.Date))"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"across-функцууд","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"across() функцууд","text":"?across() коммандаар зааврыг гаргаж ирж танилцаж across -коммандад функц хэрхэн оруулах талаар дэлгэрэнгүйтэй танилцаж болно . Функц гэдэг ойлголтод хэд хэдэн тодорхойлолт байдаг ба таны зохиосон функц ч бас үүнд ордог.Функцын нэрийг дангаар нь өгч болно (ж:mean эсвэл .character)Функцын нэрийг дангаар нь өгч болно (ж:mean эсвэл .character)Функцыг purrr-багцын форматаар уншуулж (ж:~ mean(.x, na.rm = TRUE)) ( [page][Iteration, loops, lists]-ээс хар)Функцыг purrr-багцын форматаар уншуулж (ж:~ mean(.x, na.rm = TRUE)) ( [page][Iteration, loops, lists]-ээс хар)Олон функцуудыг list -д жагсааж оруулж болно (ж: list(mean = mean, n_miss = ~ sum(.na(.x))).\nОлон функц зэрэг оруулж буй үед , multiple transformed columns returned per input column, unique names format col_fn. Шинээр үүсэх багануудын нэрийг glue -ын .names = аргументээр тохируулж болно ( [Characters strings]-ээс нэмж хар) {.col} болон {.fn} shorthand input column function.\nОлон функцуудыг list -д жагсааж оруулж болно (ж: list(mean = mean, n_miss = ~ sum(.na(.x))).Олон функц зэрэг оруулж буй үед , multiple transformed columns returned per input column, unique names format col_fn. Шинээр үүсэх багануудын нэрийг glue -ын .names = аргументээр тохируулж болно ( [Characters strings]-ээс нэмж хар) {.col} болон {.fn} shorthand input column function.across()-ын талаарх нэмэлт онлайн эх сурвалжууд: creator Hadley Wickham’s thoughts/rationale","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"coalesce","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"coalesce()","text":"Энэхүү dplyr багцын функц хамгийн эхний дутуу биш утгыг байрлал бүрт олж тогтоодог. Ингэснээр хамгийн эхний боломжит дутуу биш утгыг дутуу утгатай газар таны заавраар “нөхдөг”.Үүнийг дараах байдлаар тайлбарлая: Таньд хоёр вектор дата байна гэж бодъё. Нэг нь өвчтөний оношлогдсон тосгонууд, нөгөө нь өвчтөний амьдардаг хотууд. Үүний эхний дутуу биш утгыг coalesce-г ашиглаж индекс бүрт олж болно:Хүснэгтэд мөн адил хэрэглэгднэ: таны заасан багана дах эхний дутуу биш утгыг мөрийн дагуу өөр баганад оноож өгнө (таны заасан дарааллын дагуу ).Энэ жишээнд “мөр - дагуух” гүйцэтгэлийг харуулав. Энэ үйлдлийг хэрхэн хийх талаар Мөр-дагуу тооцоолол хэсгээс харна уу.","code":"\nvillage_detection <- c(\"a\", \"b\", NA,  NA)\nvillage_residence <- c(\"a\", \"c\", \"a\", \"d\")\n\nvillage <- coalesce(village_detection, village_residence)\nvillage    # хэвлэ## [1] \"a\" \"b\" \"a\" \"d\"\nlinelist <- linelist %>% \n  mutate(village = coalesce(village_detection, village_residence))"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"cumulative-математик","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Cumulative математик","text":"Мөрний утгыг өмнөх мөрний утгатай нэгтгэж sum/mean/min/max зэрэг функцуудээр бодолт хийж үр дүнг cumulative байдлаар харуулах бол дараах функцыг хэрэглэнэ:cumsum() -аар cumulative нийлбэрийг олно:Хүснэгтийн хувьд мөн адилхан. Дэгдэлтийн үеийн тохиолдлын сumulative нийлбэрийг дараах кодоор бодно.Дээрх коммандаар хийсэн хүснэгтийн эхний 10 мөрийг харах:Cumulative тохиолдлын тоогоор график хийх тухай [Epidemic curves] хэсгээс уншина уу.Мөн дараах функцуудын талаар харна уу:cumsum(), cummean(), cummin(), cummax(), cumany(), cumall()","code":"\nsum(c(2,4,15,10))     # нийлбэр нэг утга бодогдно## [1] 31\ncumsum(c(2,4,15,10))  # энэхүү векторын утга тус бүрт cumulative нийлбэр бодогдно## [1]  2  6 21 31\ncumulative_case_counts <- linelist %>%  # linelist-ээс эхэл\n  count(date_onset) %>%                 # Огноог тоолох ('n')   \n  mutate(cumulative_cases = cumsum(n))  # Мөр бүрт cumulative нийлбэртэй шинэ багана үүсгэ\nhead(cumulative_case_counts, 10)##    date_onset n cumulative_cases\n## 1  2012-04-15 1                1\n## 2  2012-05-05 1                2\n## 3  2012-05-08 1                3\n## 4  2012-05-31 1                4\n## 5  2012-06-02 1                5\n## 6  2012-06-07 1                6\n## 7  2012-06-14 1                7\n## 8  2012-06-21 1                8\n## 9  2012-06-24 1                9\n## 10 2012-06-25 1               10"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"base-r--г-ашиглах","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"base R -г ашиглах","text":"base R-аар шинэ багана үүсгэх (эсвэл хуучин баганыг өөрчлөх) бол хүснэгтийн нэрийн ард $ тэмдэгт тавьж шинэ үүсгэх (эсвэл өөрчлөх) баганын нэрийг шууд ардаас нь залгаж бичдэг. Шинэ баганад утга оруулахдаа оноох оператор <- ашиглана. base R -т хүснэгтийн нэрийг баганын нэрний өмнө бичдэг болохыг анхаарна уу (ж: dataframe$column). Дараах жишээнд bmi баганыг base R ашиглаж үүсгэж буйг харуулав:","code":"linelist$bmi = linelist$wt_kg / (linelist$ht_cm / 100) ^ 2)"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"pipe-холбоосонд-залгах","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Pipe холбоосонд залгах","text":"Дараах кодны төгсгөлд шинэ мөр үүсгэх болон зарим багануудын төрөл хувиргах үйлдлүүдийг pipe холбоосонд залгаж үзүүлэв.","code":"\n# ЦЭВЭРЛЭХ 'PIPE' ХОЛБООС (түүхий датаг үе шаттайгаар цэвэрлэдэг холбоос) \n##################################################################################\n\n# Цэвэрлэх холбоосыг эхлэх\n###########################\nlinelist <- linelist_raw %>%\n    \n    # баганын нэрсийг жигдрүүлэх\n    janitor::clean_names() %>% \n    \n    # зарим баганын нэрийг гараар өөрчил\n            # ШИНЭ нэр             # ХУУЧИН нэр\n    rename(date_infection       = infection_date,\n           date_hospitalisation = hosp_date,\n           date_outcome         = date_of_outcome) %>% \n    \n    # баганыг хас\n    select(-c(row_num, merged_header, x28)) %>% \n\n    # давхардалтыг арилга\n    distinct() %>% \n  \n    # ЭНЭ ХҮРТЭЛХ ҮЙЛДЭЛ ӨМНӨХ ХЭСЭГТТЭЙ АДИЛ\n    ###################################################\n    # Шинэ багана нэм\n    mutate(bmi = wt_kg / (ht_cm/100)^2) %>% \n  \n    # баганын төрлийг хувирга\n    mutate(across(contains(\"date\"), as.Date), \n           generation = as.numeric(generation),\n           age        = as.numeric(age)) "},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"утга-өөрчлөх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"8.8 Утга өөрчлөх","text":"Дараах тохиолдлуудад датаны утгыг өөрчлөх шаардлага гардаг:аливаа нэг утгыг янзлах (ж: аль нэг огнооны жил буруу эсвэл буруу форматтай орсон байх)янз бүрээр галиглагдаж бичигдсэн утгуудыг жигд болгохcategorical утгатай шинэ багана үүсгэхnumerical утгыг бүлэглэж шинэ багана нэмэх (ж: насны бүлэглэл)","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"өвөрмөц-утгууд","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Өвөрмөц утгууд","text":"Утгыг гараар өөрчлөхийн тулд mutate() дотор recode() -ыг оруулдаг.Жишээ нь буруу бичигдсэн огноо өөрчлөхдөө (ж: “2014-14-15”) шууд эх дата дээрээ (боловсруулалт хийхийн өмнө) гараар янзалж болно. Эсвэл mutate(), recode()-функцуудыг pipe холбоост залгаж огноог өөрчилж болно. Сүүлийн аргыг хэрэглэх нь бусдад нээлттэй (transparent), дахин боловсруулалт хийх боломж олгодгоороо ач холбогдолтой.Дээр бичигдсэн mutate() үйлдлийг дараах байдлаар уншина: “date_onset баганыг шинэчлэгдсэн date_onset тай тэнцүүлж бичих ба ингэснээр ХУУЧИН УТГА нь ШИНЭ УТГА-аар солигдно”. recode() функцын энэ дараалал (ХУУЧИН = ШИНЭ) R -ын ихэнх функцэд эсрэгээрээ байдаг (шинэ = хуучин). R хөгжлийн нийгэмлэг үүнийг сайжруулахаар ажиллаж байна.Нэг баганад олон утгыг зэрэг өөрчлөх жишээг дор харуулав.linelist -ын “hospital” баганыг цэвэрлэх шаардлагатай боллоо. Учир нь хэд хэдэн газар алдаатай бичигдэж, дутуу утгууд болж уншигдсан байна.Энэ жишээнд “hospital” багана хэвээр боловч recode() комманд ашиглаж зарим утгад өөрчлөлт оруулж байна. Тус бүр ардаа таслалтай байгааг анхаар!Одоо hospital баганын галиглал хэрхэн засагдсаныг харья:ЗӨВЛӨГӨӨ: тэнцүүгийн тэмдгийн ард, урд авах зайн урт чухал биш. Бичсэн кодоо уншихад хялбар байлгах үүднээс = тэмдгийг мөр болгонд тэгшхэн тааруулж бичсэн. Мөн хүмүүст ойлгомжтой болгохын тулд “хэш” (#) тэмдэгтээр аль нь хуучин, шинэ утгаболохыг зааж өгсөн.ЗӨВЛӨГӨӨ: заримдаа хоосон утга датанд орж ирсэн байдаг ( R-ын дутуу утга (NA) болж танигдааuшй). Хоосон утгыг тодорхойлохдоо дундаа зайгүй давхар хашилтан бичдэг (““).","code":"\n# алдаатай утгыг засах                   # хуучин утга  # шинэ утга\nlinelist <- linelist %>% \n  mutate(date_onset = recode(date_onset, \"2014-14-15\" = \"2014-04-15\"))\ntable(linelist$hospital, useNA = \"always\")  # бүх өвөрмөц утгыг (дутуу утгатайгаар) хэвлэ  ## \n##                      Central Hopital                     Central Hospital \n##                                   11                                  457 \n##                           Hospital A                           Hospital B \n##                                  290                                  289 \n##                     Military Hopital                    Military Hospital \n##                                   32                                  798 \n##                     Mitylira Hopital                    Mitylira Hospital \n##                                    1                                   79 \n##                                Other                         Port Hopital \n##                                  907                                   48 \n##                        Port Hospital St. Mark's Maternity Hospital (SMMH) \n##                                 1756                                  417 \n##   St. Marks Maternity Hopital (SMMH)                                 <NA> \n##                                   11                                 1512\nlinelist <- linelist %>% \n  mutate(hospital = recode(hospital,\n                     # лавлагаа: ХУУЧИН = ШИНЭ\n                      \"Mitylira Hopital\"  = \"Military Hospital\",\n                      \"Mitylira Hospital\" = \"Military Hospital\",\n                      \"Military Hopital\"  = \"Military Hospital\",\n                      \"Port Hopital\"      = \"Port Hospital\",\n                      \"Central Hopital\"   = \"Central Hospital\",\n                      \"other\"             = \"Other\",\n                      \"St. Marks Maternity Hopital (SMMH)\" = \"St. Mark's Maternity Hospital (SMMH)\"\n                      ))\ntable(linelist$hospital, useNA = \"always\")## \n##                     Central Hospital                           Hospital A \n##                                  468                                  290 \n##                           Hospital B                    Military Hospital \n##                                  289                                  910 \n##                                Other                        Port Hospital \n##                                  907                                 1804 \n## St. Mark's Maternity Hospital (SMMH)                                 <NA> \n##                                  428                                 1512"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"логик-үйлдлүүд","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Логик үйлдлүүд","text":"Энэ хэсэгт логик болон нөхцөл (conditions) ашиглаж баганын утгыг хэрхэн өөрчилдгийг харуулав:replace(), ifelse(), if_else() функцыг энгийн логик үйлдэлд хэрэглэнэ.case_when() функцыг нарийн логик үйлдэлд хэрэглэнэ.","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"энгийн-логик-үйлдэл","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Энгийн логик үйлдэл","text":"","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"replace","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"replace()","text":"Энгийн логик шалгуурыг үүгэхдээ mutate() дотор base R-ын replace() функцыг оруулаад үүн дотор шаардлагатай логик нөхцөлөө оруулж өгнө. Синтаксын ерөнхий формат:mutate(col_to_change = replace(col_to_change, мөрний шалгуур үзүүлэлт, шинэ утга)).Мөн датан дах аль нэг утгыг өвөрмөц дугаараар нь дуудаж өөрчлөх үйлдэлд replace() -ийг их хэрэглэдэг. Дорх кодоор case_id баганад 2195 гэсэн утга байвал үүнтэй харалдаа орших мөрний gender баганын утгыг “Female” болгож өөрчлөх комманд өгсөн.base R -т дээрхитэй ижил үйлдлийг индекслэх тэмдэг буюу дөрвөлжин хаалт [ ] гүйцэтгэдэг (дор жишээнд харуулав). Дор кодыг дараах байдлаар уншина: “linelist хүснэгтийн gender баганыг (case_id баганадаа ‘2195’ гэсэн утгатай тохиолдолд) ‘Female’ болго”.","code":"\n# Жишээ: заасан ганц ажиглалтыг \"Female\" болгож өөрчлөх\nlinelist <- linelist %>% \n  mutate(gender = replace(gender, case_id == \"2195\", \"Female\"))\nlinelist$gender[linelist$case_id == \"2195\"] <- \"Female\""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"ifelse-болон-if_else","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"ifelse() болон if_else()","text":"Энгийн логик үйлдэл хийдэг ifelse(), if_else() хэмээх функцууд байдаг ч оронд нь case_when() функцыг хэрэглэвэл илүү ойлгомжтой (дэлгэрэнгүйг доор бичсэн). Эдгээр “else” коммандууд нь болон else программчлалын хялбаршуулсан хэлбэр. Синтаксын ерөнхий формат:ifelse(нөхцөл, хэрэв нөхцөл TRUE бол дуудах утга, нөхцөл FALSE бол дуудах утга)Дор source_known баганыг тодорхойлсон байна. Энэхүү кодоор source баганын мөр бүрт үзлэг хийж дутуу утга байхгүй бол харалдаа мөрний source_known баганын утгыг “known” болгоод, харин source мөрөнд дутуу утга байвал харалдаа мөрний source_known баганын утгыг “unknown” болгох болно.dplyr багцын if_else() -ээр огноо их янзалдаг. Үүнийг хэрэглэж байхад FALSE нөхцөлд таарсан утгыг NA гэлгүй NA_real_ гэж оруулдаг. Учир нь TRUE огноо бол FALSE бас огноо байх болно.Олон зэрэг ifelse -ийг бичихэээс зайлсхий. Оронд нь case_when() -ийг хэрэглэ! Ингэснээр хялбар уншигдаж, алдаа бага гаргадаг.Outside context data frame, want object used code switch value, consider using switch() base R {style=“color: red;”}","code":"\nlinelist <- linelist %>% \n  mutate(source_known = ifelse(!is.na(source), \"known\", \"unknown\"))\n# Нас баралтын огноотой багана үүсгэ. Өвчтөн нас бараагүй бол `NA`-аар бич.\nlinelist <- linelist %>% \n  mutate(date_death = if_else(outcome == \"Death\", date_outcome, NA_real_))"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"clean_case_when","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Комплекс логик үйлдлүүд","text":"Бүлэг үүсгэсэн утгуудад өөрчлөлт оруулах эсвэл комплекс логик үйлдэл хийх бол dplyr -ын case_when() -ийг хэрэглэвал оновчтой. Энэхүү функц хүснэгтийн мөр болгоныг шалгаад, шалгуурт нийцсэн утгыг заасны дагуу өөрчилдөг.case_when() комманд нь Баруун-Тал/Right-Hand Side (RHS) болон Зүүн-Тал/Left-Hand Side (LHS) -ын зарчмаар бичигдэж “тилда” ~ тэмдэгээр хуваагддаг. Логик шалгуур нь зүүн талдаа, харин нийцүүлэх утга нь баруун талдаа бичигдэж, тус бүр таслалаар зааглагдна.Энэ жишээнд age болон age_unit баганыг ашиглаж age_years баганыг үүсгэсэн:row data evaluated, criteria applied/evaluated order case_when() statements written - top--bottom. top criteria evaluates TRUE given row, RHS value assigned, remaining criteria even tested row. Thus, best write specific criteria first, general last.Along lines, final statement, place TRUE left-side, capture row meet previous criteria. right-side statement assigned value like “check !” missing.DANGER: Vvalues right-side must class - either numeric, character, date, logical, etc. assign missing (NA), may need use special variations NA NA_character_, NA_real_ (numeric POSIX), .Date(NA). Read [Working dates].","code":"\nlinelist <- linelist %>% \n  mutate(age_years = case_when(\n            age_unit == \"years\"  ~ age,       # хэрэв age жилээр бичигдсэн бол\n            age_unit == \"months\" ~ age/12,    # хэрэв age сараар бичигдсэн бол\n            is.na(age_unit)      ~ age,       # хэрэв age_unit-д дутуу утга байвал (age жилээр)\n            TRUE                 ~ NA_real_)) # бусад бүх тохиолдолд дутуу утгаар оруул"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"дутуу-утга","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Дутуу утга","text":"Дата цэвэрлэгээний үед дутуу утгыг янзалдаг функцуудыг энд тайлбарлав.Дутуу утгыг олж, янзлах талаар [Missing data] хэсгээс нэмж үзэж болно. Тухайлбал логик шалгуураар дутуу утгыг олдог функцыг .na() гэдэг.replace_na()NA дутуу утгыг өөрөөр тэмдэглэсэн дутуу утгаар (жишээ нь “Missing”) солихдоо dplyr -ын replace_na() функцыг mutate() дотор оруулж бичнэ. recode функцын адил баганын нэрийг replace_na() -ын дотор оруулж бичихийг анхаар.fct_explicit_na()Энэ forcats багцын функц. forcats багц factor төрлийн датаг янзалхад зориулагдсан. Factor утга нь дараалалтай ( жишээ нь c(\"First\", \"Second\", \"Third\") ) утга болон аливаа шатлал заагдсэн ( жишээ нь: эмнэлэгүүд) утгын R хэлэнд хөрвүүлсэн хэлбэр. [Factors] хэсгээс нэмж харна уу.Factor датаны NA -г “Missing” болгож өөрчлөхөөр replace_na() комманд өгвөл invalid factor level, NA generated гэсэн алдаа гарч ирдэг. tried add “Missing” value, defined possible level factor, rejected.Ийм тохиолдолд forcats багцад байдаг fct_explicit_na() функцыг ашиглах нь тохиромжтой ба энэ функц баганыг factor болгож, NA -г character “(Missing)” хэлбэрт хувиргадаг.Өөр нэгэн хувилбар бол fct_expand() функцээр factor -ын шатлалыг нэмж оруулсны дараа дутуу утгаруу өөрчлөх юм.na_if()Тодорхой нэг утгыг NA- болгохын тулд dplyr’s-ын na_if() -г хэрэглэдэг. Доорх комманд нь replace_na()-ын эсрэг үйлдэл хийгднэ. Дараах жишээнд hospital багана дах “Missing” утга болгон NA болж хувирсан байна.Тэмдэглэл na_if() -г логик шалгуурт хэрэглэх боломжгүй (жишээ нь “бүх утга > 99”). Оронд нь replace() эсвэл case_when() -ыг хэрэглэ:","code":"\nlinelist <- linelist %>% \n  mutate(hospital = replace_na(hospital, \"Missing\"))\nlinelist %>% \n  mutate(hospital = fct_explicit_na(hospital))\nlinelist <- linelist %>% \n  mutate(hospital = na_if(hospital, \"Missing\"))\n# 40 -өөс дээш градусыг NA  болго\nlinelist <- linelist %>% \n  mutate(temp = replace(temp, temp > 40, NA))\n\n# 1 Jan 2000 -аас өмнөх огноог дутуу утга болго\nlinelist <- linelist %>% \n  mutate(date_onset = replace(date_onset, date_onset > as.Date(\"2000-01-01\"), NA))"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"цэвэрлэгээний-толь-бичиг","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Цэвэрлэгээний толь бичиг","text":"linelist болон түүний clean_variable_spelling() функцээр цэвэрэлэгээний тольтой (cleaning dictionary) хүснэгтийг янзалдаг. linelist багцыг R Epidemics Consortium RECON боловсруулж гаргасан.Цэвэрлэгээний толийг дараах гурван баганатайгаар байгуул:\nалдаатай утгуудыг заасан багана\nзөв утгуудыг заасан багана\nөөрчлөлт оруулах баганууд (жишээ нь “.global” гэвэл бүх баганыг өөрчлөх)\nЦэвэрлэгээний толийг дараах гурван баганатайгаар байгуул:алдаатай утгуудыг заасан баганазөв утгуудыг заасан баганаөөрчлөлт оруулах баганууд (жишээ нь “.global” гэвэл бүх баганыг өөрчлөх)Тэмдэглэл: аль нэг баганад зориулсан өвөрмөц өөрчлөлтийг .global өөрчлөлт давамгайлж гүйцэтгэгддэг.Цэвэрлэгээний толь бичсэн хүснэгтээ R луу импортло. Энэ жишээг [Download handbook data] хуудсанд заасны дагуу татаж авч болно.Түүхий linelist -ийг clean_variable_spelling() функцэд оруулаад wordlists = аргументэд цэвэрлэгээний тольтой хүснэгтээ зааж өгнө. Энэ хүснэгтийн өөрчлөх гэж буй баганын нэрстэй баганыг spelling_vars = аргументэд зааж өгнө ( default)-аар гуравдах багана) . Хэрэв factor болон character бүх баганыг хамруулья гэвэл spelling_vars = аргументийг NULL гэж заана. Энэ функц удаан уншигдаж болохыг анхаар.Одоо (баруун тийш нь гүйлгээд) датанд хэрхэн өөрчлөлт орсныг харж болно. Энд gender багана жижгээс том үсэгрүү, шинж тэмдэг агуулсан бүх багана yes/-өөс 1/0 болж хувирсан байна.Цэвэрлэгээний тольтой хүснэгтийн баганын нэрс таны одоо бичиж буй коммандны скрипттэй яг таарч байх шаардлагатайг анхаарна уу. Энэ талаар online reference linelist package -ээс харна уу.","code":"\ncleaning_dict <- import(\"cleaning_dict.csv\")\nlinelist <- linelist %>% \n  linelist::clean_variable_spelling(\n    wordlists = cleaning_dict,\n    spelling_vars = \"col\",        # өөрчлөх баганын нэрстэй багана. default-аар гуравдах багана\n  )"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"цэвэрлэх-pipe-холбоосонд-залгах","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Цэвэрлэх pipe холбоосонд залгах","text":"Доорхи pipe холбоосонд багана нэмэх, баганын хувиргах үйлдлүүд залгагдсан.","code":"\n# ЦЭВЭРЛЭХ 'PIPE' ХОЛБООС (түүхий датаг үе шаттайгаар дамжуулан цэвэрлэдэг холбоос)\n##################################################################################\n\n# Цэвэрлэх холбоосыг эхлэх\n###########################\nlinelist <- linelist_raw %>%\n    \n    # баганын нэрсийг жигдрүүлэх\n    janitor::clean_names() %>% \n    \n    # зарим баганын нэрийг гараар өөрчил\n            # ШИНЭ нэр             # ХУУЧИН нэр\n    rename(date_infection       = infection_date,\n           date_hospitalisation = hosp_date,\n           date_outcome         = date_of_outcome) %>% \n    \n    # баганыг хас\n    select(-c(row_num, merged_header, x28)) %>% \n\n    # давхардалтыг арилга\n    distinct() %>% \n  \n    # Шинэ багана нэм\n    mutate(bmi = wt_kg / (ht_cm/100)^2) %>% \n  \n    # баганын төрлийг хувирга\n    mutate(across(contains(\"date\"), as.Date), \n           generation = as.numeric(generation),\n           age        = as.numeric(age)) |> \n    \n    # багана нэм: эмнэлэгт хожуу ирэлт\n    mutate(days_onset_hosp = as.numeric(date_hospitalisation - date_onset)) %>% \n    \n   # ЭНЭ ХҮРТЭЛХ ҮЙЛДЭЛ ӨМНӨХ ХЭСЭГТ ХЭЛЦЭГДСЭН\n   ###################################################\n\n    # эмнэлэгийн баганууддах утгыг цэвэрлэх\n    mutate(hospital = recode(hospital,\n                      # ХУУЧИН = ШИНЭ\n                      \"Mitylira Hopital\"  = \"Military Hospital\",\n                      \"Mitylira Hospital\" = \"Military Hospital\",\n                      \"Military Hopital\"  = \"Military Hospital\",\n                      \"Port Hopital\"      = \"Port Hospital\",\n                      \"Central Hopital\"   = \"Central Hospital\",\n                      \"other\"             = \"Other\",\n                      \"St. Marks Maternity Hopital (SMMH)\" = \"St. Mark's Maternity Hospital (SMMH)\"\n                      )) %>% \n    \n    mutate(hospital = replace_na(hospital, \"Missing\")) %>% \n\n    # age_years баганыг үүсгэ (age болон age_unit баганыг ашиглаж)\n    mutate(age_years = case_when(\n          age_unit == \"years\" ~ age,\n          age_unit == \"months\" ~ age/12,\n          is.na(age_unit) ~ age,\n          TRUE ~ NA_real_))"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"num_cats","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"8.9 Тоог ангилах","text":"Энэ хэсэгт numeric баганаас хэрхэн categorical (ангилсан) утгатай багана үүсгэх талаар үзнэ. Тоон (numeric) ангилалын жишээнд насны ангилал, шинжилгээний үзүүлэлтийн ангилал зэрэг орно. Гол хэрэглэгдэх функцууд:epikit багцын age_categories()base R -ын cut()case_when()quantile(), ntile()зэрэг кванталууд","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"тархалтыг-шалгах","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Тархалтыг шалгах","text":"Жишээнд age_years баганыг ашиглаж age_cat баганыг үүсгэх болно.Эхлээд датаны тархалтын дүрсийг шалгаж хуваах цэгүүдээ (cut-points) тогтооно. [ggplot basics] хэсгээс дэлгэрүүлж харна уу.АНХААРУУЛГА Заримдаа тоон хувьсагч нар “character” хэлбэрээр импортлогдох тохиолдол байдаг. Энэ нь тухайн хувьсагчын аль нэг утганд тоон биш тэмдэгт агуулагдсан байснаас болдог. Жишээ нь нас заасан баганад “2 сар” (2 months) гэж бичигдэх, бутархай тоонд цэг биш таслал тавигдах тохиолдлууд байдаг (“4,5” -аар дөрөв аравны тав гэсэн санаа илэрхийлсэн байх).","code":"\n# linelist -хүснэгт дэх нас заасан баганын дата төрлийг тогтоох\nclass(linelist$age_years)## [1] \"numeric\"\n# тархалтын дүрсийг шалга\nhist(linelist$age_years)\nsummary(linelist$age_years, na.rm=T)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n##    0.00    6.00   13.00   16.04   23.00   84.00     107"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"age_categories","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"age_categories()","text":"Тоон баганын утгад ангилалал үүсгэх бол epikit багцын age_categories() -ыг хэрэглэвэл хялбар (тэмдэглэл: энэхүү функцыг тоон биш хувьсагчид хэрэглэж бас болдог ). Ингэснээр үүссэн багана нь автоматаар эрэмбэлэгдсэн (ordered) factor болдог ач холбогдолтой.Шаардлагатай оролтууд:Тоон вектор (багана)breakers = аргумент - шинэ үүсэх ангиллын хуваагдах цэгүүдийг заасан тоон векторуудыг оруулна.Эхлээд энгийн жишээ авч үзье:break values specify default lower bounds - , included “higher” group / groups “open” lower/left side. shown , can add 1 break value achieve groups open top/right.Ангиллын нэрсийг separator = аргументээр тохируулж болно. Default тэмдэг нь “-”.Тоон утгын дээд хязгаарыг хэрхэхийг ceiling =аргументээр тохируулна. Дээд хязгаар тогтоох бол ceiling = TRUEгэж өгнө. Ингэснээр хамгийн дээд тогтоосон тоогоор ангилал дуусч “XX+” гэсэн ангилал үүсэхгүй. Энэхүү зааж өгсөн дээд хязгаараас их (эсвэл upper = -т зааж өгсөн) ямар ч тоо NA ангилалд орно. Доор жишээнд ceiling = TRUE гэж өгсөн тул XX+ ангилал үүсэхгүй, 70 -аас дээш (зааж өгсөн хамгийн дээд хязгаар) тоо NA болж хувирсан.Мөн breakers = аргументийн оронд та өөрөө lower =, upper =, = гэсэн аргументуудэд хуваах цэгүүдтэы тоон дарааллыг оруулж өгч болно:lower = таны зааж өгсөн хамгийн бага тоо - default нь 0upper = таны зааж өгсөн хамгийн их тооby = ангилал хоорондын интервалэнэ функцын Help хуудаснаас нэмэлт мэдээллийг үзэж болно (R console-д ?age_categories гэсэн коммандаар гаргана).","code":"\n# Энгийн жишээ\n################\npacman::p_load(epikit)                    # багцыг ачаалла\n\nlinelist <- linelist %>% \n  mutate(\n    age_cat = age_categories(             # багана үүсгэ\n      age_years,                            # шинэ багана үүсгэхэд ашиглах numeric багана\n      breakers = c(0, 5, 10, 15, 20,        # хуваагдах цэгүүд\n                   30, 40, 50, 60, 70)))\n\n# хүснэгтийг харуул\ntable(linelist$age_cat, useNA = \"always\")## \n##   0-4   5-9 10-14 15-19 20-29 30-39 40-49 50-59 60-69   70+  <NA> \n##  1227  1223  1048   827  1216   597   251    78    27     7   107\n# дээд хязгаарыг ижилхэн ангилалд оруулж байна\n############################################\nlinelist <- linelist %>% \n  mutate(\n    age_cat = age_categories(\n      age_years, \n      breakers = c(0, 6, 11, 16, 21, 31, 41, 51, 61, 71)))\n\n# хүснэгтийг харуул\ntable(linelist$age_cat, useNA = \"always\")## \n##   0-5  6-10 11-15 16-20 21-30 31-40 41-50 51-60 61-70   71+  <NA> \n##  1469  1195  1040   770  1149   547   231    70    24     6   107\n# ceiling аргументийг TRUE дээр тохируулсан\n##########################\nlinelist <- linelist %>% \n  mutate(\n    age_cat = age_categories(\n      age_years, \n      breakers = c(0, 5, 10, 15, 20, 30, 40, 50, 60, 70),\n      ceiling = TRUE)) # 70 бол дээд хязгаар ба үүнээс дээш тоо NA болно\n\n# хүснэгтийг харуул\ntable(linelist$age_cat, useNA = \"always\")## \n##   0-4   5-9 10-14 15-19 20-29 30-39 40-49 50-59 60-70  <NA> \n##  1227  1223  1048   827  1216   597   251    78    28   113\nlinelist <- linelist %>% \n  mutate(\n    age_cat = age_categories(\n      age_years, \n      lower = 0,\n      upper = 100,\n      by = 10))\n\n# хүснэгтийг харуул\ntable(linelist$age_cat, useNA = \"always\")## \n##   0-9 10-19 20-29 30-39 40-49 50-59 60-69 70-79 80-89 90-99  100+  <NA> \n##  2450  1875  1216   597   251    78    27     6     1     0     0   107"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"cut","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"cut()","text":"cut() бол base R -д багтдаг age_categories() -тай адил үйлдэлтэй функц. Гэвч age_categories() дээр ажиллахад илүү хялбар. age_categories() -аас гол ялгаатай шинжүүд:Өөр багц суулгаж/уншуулах шаардлагагүй.Ангилал баруун/зүүн талруугаа нээлттэй/хаалттай эсэхийг зааж өгч болно.Ангиллын нэрсийг та өөрөө оруулж өгнө.Хамгийн бага ангилалдаа 0-г оруулах бол өөрөө зааж өгөх шаардлагатай.cut() дотор эхлээд ангилах гэж буй numeric баганаа (age_years) оруулаад, хуваах цэгүүдээ breaks=аргументэд тоон вектор хэлбэрээр c() -д оруулна. cut() -аар үүсгэгдсэн багана эрэмбэлэгдсэн factor төрөл болдог.Default-аар баруун/дээд тал “нээлттэй” (зүүн/доод тал нь “хаалттай” ) байдаг. Энэ нь age_categories() функцэд эсрэгээрээ хийгддэг. Default тэмдэглэгээ нь “(, B]” бөгөөд энэ нь ороогүй B орсон гэсэн утгатай. Үүний эсрэг хийх бол right = TRUE гэж зааж өгнө.Үүнээс болоод хамгийн бага тоотой ангилалд default -аар “0” ордоггүй ба “0” утга NA болж хувирдаг. Гэтэл зарим тохиолдолд тухайлбал нярай хүүхдүүдийн нас 0 гэж кодлогддог зэргийг анхаарч байх шаардлагатай. Үүнийг өөрчлөхийн тулд include.lowest = TRUE гэсэн аргументийг нэмснээр “0” утга хамгийн бага тоотой ангилалд багтдаг. Автоматаар үүссэн ангиллын нэр хамгийн бага ангилалд “[],B]” болдог. Note include include.lowest = TRUE argument right = TRUE, extreme inclusion now apply highest break point value category, lowest.Үүсгэсэн ангилалд нэр өгөхдөө labels = аргументэд оруулна. Гараар бичигдэх тул алдаа гаргахаас сэргийлээрэй! Cross-tabulation (солбисон хүснэгт) ашиглаж алдаагаа шалгаарайcut() ашиглаж age_years баганаас age_cat гэсэн шинэ багана үүсгэх жишээг дор харуулав:Хийсэн ажлаа шалга!!! Насны тоон үзүүлэлтүүд зөв ангилалдаа орсон эсэхийг тоон болон ангилагдсан багануудыг солбиж харуулсан хүснэгтээр шалга. Ялангуяа захын утгуудыг шалгаарай (жишээ нь 15- ын тоо 10-15, 16-20 гэсэн ангилалуудын ойролцоо байгаа эсэх).NA утгуудад дахин нэр өгөхNA -утгуудыг “Missing” гэсэн нэртэй ангилалд оруулж болно. Шинээр үүсэх багана factor учир (хязгаарлагдмал утгууд) шууд replace_na() аар хувиргалт хийх боломжгүй. [Factors] хэсэгт тайлбарсанчлан forcats багцын fct_explicit_na() функцыг хэрэглээрэй.Хуваах, нэрлэх үйлдлийг хялбарчлахАливаа векторыг түргэн хугацаанд хувааж, нэр өгөх жишээг дор харуулав. [R basics] хэсгийн seq(), rep() -ийн тайлбараас нэмж үзэж болно.?cut коммандыг R console -д өгч cut() функцын Help хуудаснаас нэмж тодруулж болно.","code":"\n# Тоон age хувьсагчийг хувааж, ангилагдсан багана үүсгэ\n# Ангиллын доод хязгаар нь битүү харин дээд хязгаар нь нээллттэй байна.\nlinelist <- linelist %>% \n  mutate(\n    age_cat = cut(\n      age_years,\n      breaks = c(0, 5, 10, 15, 20,\n                 30, 50, 70, 100),\n      include.lowest = TRUE         # 0 -г доод ангиолд багтаа\n      ))\n\n# ангилал тус бүр дэх ажиглалтын тоог жагсааж хар\ntable(linelist$age_cat, useNA = \"always\")## \n##    [0,5]   (5,10]  (10,15]  (15,20]  (20,30]  (30,50]  (50,70] (70,100] \n##     1469     1195     1040      770     1149      778       94        6 \n##     <NA> \n##      107\n# Тоон болон ангилагдсан баганыг солбиж харуулсан хүснэгт\ntable(\"Numeric Values\" = linelist$age_years,   # ойлгомжтой болгох үүднээс багануудад нэр өгсөн\n      \"Categories\"     = linelist$age_cat,\n      useNA = \"always\")                        # NA утгуудыг шалгахаа бүү мартаарай##                     Categories\n## Numeric Values       [0,5] (5,10] (10,15] (15,20] (20,30] (30,50] (50,70]\n##   0                    136      0       0       0       0       0       0\n##   0.0833333333333333     1      0       0       0       0       0       0\n##   0.25                   2      0       0       0       0       0       0\n##   0.333333333333333      6      0       0       0       0       0       0\n##   0.416666666666667      1      0       0       0       0       0       0\n##   0.5                    6      0       0       0       0       0       0\n##   0.583333333333333      3      0       0       0       0       0       0\n##   0.666666666666667      3      0       0       0       0       0       0\n##   0.75                   3      0       0       0       0       0       0\n##   0.833333333333333      1      0       0       0       0       0       0\n##   0.916666666666667      1      0       0       0       0       0       0\n##   1                    275      0       0       0       0       0       0\n##   1.5                    2      0       0       0       0       0       0\n##   2                    308      0       0       0       0       0       0\n##   3                    246      0       0       0       0       0       0\n##   4                    233      0       0       0       0       0       0\n##   5                    242      0       0       0       0       0       0\n##   6                      0    241       0       0       0       0       0\n##   7                      0    256       0       0       0       0       0\n##   8                      0    239       0       0       0       0       0\n##   9                      0    245       0       0       0       0       0\n##   10                     0    214       0       0       0       0       0\n##   11                     0      0     220       0       0       0       0\n##   12                     0      0     224       0       0       0       0\n##   13                     0      0     191       0       0       0       0\n##   14                     0      0     199       0       0       0       0\n##   15                     0      0     206       0       0       0       0\n##   16                     0      0       0     186       0       0       0\n##   17                     0      0       0     164       0       0       0\n##   18                     0      0       0     141       0       0       0\n##   19                     0      0       0     130       0       0       0\n##   20                     0      0       0     149       0       0       0\n##   21                     0      0       0       0     158       0       0\n##   22                     0      0       0       0     149       0       0\n##   23                     0      0       0       0     125       0       0\n##   24                     0      0       0       0     144       0       0\n##   25                     0      0       0       0     107       0       0\n##   26                     0      0       0       0     100       0       0\n##   27                     0      0       0       0     117       0       0\n##   28                     0      0       0       0      85       0       0\n##   29                     0      0       0       0      82       0       0\n##   30                     0      0       0       0      82       0       0\n##   31                     0      0       0       0       0      68       0\n##   32                     0      0       0       0       0      84       0\n##   33                     0      0       0       0       0      78       0\n##   34                     0      0       0       0       0      58       0\n##   35                     0      0       0       0       0      58       0\n##   36                     0      0       0       0       0      33       0\n##   37                     0      0       0       0       0      46       0\n##   38                     0      0       0       0       0      45       0\n##   39                     0      0       0       0       0      45       0\n##   40                     0      0       0       0       0      32       0\n##   41                     0      0       0       0       0      34       0\n##   42                     0      0       0       0       0      26       0\n##   43                     0      0       0       0       0      31       0\n##   44                     0      0       0       0       0      24       0\n##   45                     0      0       0       0       0      27       0\n##   46                     0      0       0       0       0      25       0\n##   47                     0      0       0       0       0      16       0\n##   48                     0      0       0       0       0      21       0\n##   49                     0      0       0       0       0      15       0\n##   50                     0      0       0       0       0      12       0\n##   51                     0      0       0       0       0       0      13\n##   52                     0      0       0       0       0       0       7\n##   53                     0      0       0       0       0       0       4\n##   54                     0      0       0       0       0       0       6\n##   55                     0      0       0       0       0       0       9\n##   56                     0      0       0       0       0       0       7\n##   57                     0      0       0       0       0       0       9\n##   58                     0      0       0       0       0       0       6\n##   59                     0      0       0       0       0       0       5\n##   60                     0      0       0       0       0       0       4\n##   61                     0      0       0       0       0       0       2\n##   62                     0      0       0       0       0       0       1\n##   63                     0      0       0       0       0       0       5\n##   64                     0      0       0       0       0       0       1\n##   65                     0      0       0       0       0       0       5\n##   66                     0      0       0       0       0       0       3\n##   67                     0      0       0       0       0       0       2\n##   68                     0      0       0       0       0       0       1\n##   69                     0      0       0       0       0       0       3\n##   70                     0      0       0       0       0       0       1\n##   72                     0      0       0       0       0       0       0\n##   73                     0      0       0       0       0       0       0\n##   76                     0      0       0       0       0       0       0\n##   84                     0      0       0       0       0       0       0\n##   <NA>                   0      0       0       0       0       0       0\n##                     Categories\n## Numeric Values       (70,100] <NA>\n##   0                         0    0\n##   0.0833333333333333        0    0\n##   0.25                      0    0\n##   0.333333333333333         0    0\n##   0.416666666666667         0    0\n##   0.5                       0    0\n##   0.583333333333333         0    0\n##   0.666666666666667         0    0\n##   0.75                      0    0\n##   0.833333333333333         0    0\n##   0.916666666666667         0    0\n##   1                         0    0\n##   1.5                       0    0\n##   2                         0    0\n##   3                         0    0\n##   4                         0    0\n##   5                         0    0\n##   6                         0    0\n##   7                         0    0\n##   8                         0    0\n##   9                         0    0\n##   10                        0    0\n##   11                        0    0\n##   12                        0    0\n##   13                        0    0\n##   14                        0    0\n##   15                        0    0\n##   16                        0    0\n##   17                        0    0\n##   18                        0    0\n##   19                        0    0\n##   20                        0    0\n##   21                        0    0\n##   22                        0    0\n##   23                        0    0\n##   24                        0    0\n##   25                        0    0\n##   26                        0    0\n##   27                        0    0\n##   28                        0    0\n##   29                        0    0\n##   30                        0    0\n##   31                        0    0\n##   32                        0    0\n##   33                        0    0\n##   34                        0    0\n##   35                        0    0\n##   36                        0    0\n##   37                        0    0\n##   38                        0    0\n##   39                        0    0\n##   40                        0    0\n##   41                        0    0\n##   42                        0    0\n##   43                        0    0\n##   44                        0    0\n##   45                        0    0\n##   46                        0    0\n##   47                        0    0\n##   48                        0    0\n##   49                        0    0\n##   50                        0    0\n##   51                        0    0\n##   52                        0    0\n##   53                        0    0\n##   54                        0    0\n##   55                        0    0\n##   56                        0    0\n##   57                        0    0\n##   58                        0    0\n##   59                        0    0\n##   60                        0    0\n##   61                        0    0\n##   62                        0    0\n##   63                        0    0\n##   64                        0    0\n##   65                        0    0\n##   66                        0    0\n##   67                        0    0\n##   68                        0    0\n##   69                        0    0\n##   70                        0    0\n##   72                        1    0\n##   73                        3    0\n##   76                        1    0\n##   84                        1    0\n##   <NA>                      0  107\nlinelist <- linelist %>% \n  \n  # cut() -аар age_cat-ыг үүсгэнэ. Factor төрлийн багана үүснэ.     \n  mutate(age_cat = cut(\n    age_years,\n    breaks = c(0, 5, 10, 15, 20, 30, 50, 70, 100),          \n    right = FALSE,\n    include.lowest = TRUE,        \n    labels = c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-29\", \"30-49\", \"50-69\", \"70-100\")),\n         \n    # Дутуу утгыг тодорхой болго\n    age_cat = fct_explicit_na(\n      age_cat,\n      na_level = \"Missing age\")  # нэрийг өөрөө өгч болно\n  )    \n\n# ангилал тус бүр дэх ажиглалтын тоог харуулсан хүснэгт\ntable(linelist$age_cat, useNA = \"always\")## \n##         0-4         5-9       10-14       15-19       20-29       30-49 \n##        1227        1223        1048         827        1216         848 \n##       50-69      70-100 Missing age        <NA> \n##         105           7         107           0\n#  0 -ээс 90 хүртэлх тоог 5 аар хуваасан цэгүүд үүсгэ. \nage_seq = seq(from = 0, to = 90, by = 5)\nage_seq\n\n# Дээрх үүссэн ангиллуудад нэр өг (cut() default тохируулгатай)\nage_labels = paste0(age_seq + 1, \"-\", age_seq + 5)\nage_labels\n\n# ажиглалтын тоо хоёр векторт адилхан байна\nlength(age_seq) == length(age_labels)"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"квантил-хуваагдлууд","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Квантил хуваагдлууд","text":"common understanding, “quantiles” “percentiles” typically refer value proportion values fall. Жишээ нь, linelist -ийн нас заасан баганын 95 дах персентил гэдэг нь нас заасан бүх утгын 95% нь орж буй утгуудыг хэлнэ.Ердийн хэллэгт “квантил”, “децил” гэдэг нь аливаа датаг 4 эсвэл 10 тэнцүү хуваахыг хэлдэг (хуваасан тооноос нэг илүү ангилал үүсэхийг анхаараарай).Квантилаар хуваахдаа base R-ын stats багц дах quantile() функцыг ашигладаг. Та тоон вектор болон 0-оос 1 хүртэлх магадлал оноогдсон векторыг (ж: нэг баганадах тоо) оруулж өгнө. Эдгээр нь тоон векторууд юм. Энэ функцын статистикийн аргачлалын талаар ?quantileкомманд өгч уншна уу.хэрэв таны оруулсан тоон вектор дутуу утгатай бол na.rm = TRUE гэж тохируулах хэрэгтэй.names = FALSE гэж тохируулснаар нэрлэгдээгүй тоон векторыг гаргаж ирнэ.quantile() -аар бодогдсон хуваагдах цэгүүдээ age_categories(), cut() функцын оролтод оруулж болно. Дор жишээнд age_years багана дах утгыг quantiles() -д өгч хуваагдах цэгүүдийг бодож гарган cut() коммандад өгснөөр deciles баганыг үүсгэж буй жишээг харуулав. Гарсан үр дүнгийн хувийг janitor багцын tabyl() функцийг ашиглаж харуулав ( [Descriptive tables] хуудсаас харна уу). Ангилалууд яг тэнцүү 10% -аар хуваагдаагүйг ажиглаарай.","code":"\nquantile(linelist$age_years,               # ажиллах гэж буй тоон вектороо зааж өгнө\n  probs = c(0, .25, .50, .75, .90, .95),   # персентилээ зааж өгнө\n  na.rm = TRUE)                            # дутуу утгыг үл тоох ##  0% 25% 50% 75% 90% 95% \n##   0   6  13  23  33  41\nlinelist %>%                                # linelist-ээс эхэл\n  mutate(deciles = cut(age_years,           # cut()-аар age_years баганасс decile баганыг үүсгэ\n    breaks = quantile(                      # quantile()-аар хуваагдах цэгүүдийг тодорхойл\n      age_years,                               # age_years дээр хэрэгжүүл\n      probs = seq(0, 1, by = 0.1),             # 0.0 -ээс 1.0 -ыг 0.1 -ээр хуваа\n      na.rm = TRUE),                           # дутуу утгуудыг үл тоох\n    include.lowest = TRUE)) %>%             # cut() -д  0 насыг оролцуул\n  janitor::tabyl(deciles)                   # хүснэгт болгож харуулах##  deciles   n    percent valid_percent\n##    [0,2] 748 0.11319613    0.11505922\n##    (2,5] 721 0.10911017    0.11090601\n##    (5,7] 497 0.07521186    0.07644978\n##   (7,10] 698 0.10562954    0.10736810\n##  (10,13] 635 0.09609564    0.09767728\n##  (13,17] 755 0.11425545    0.11613598\n##  (17,21] 578 0.08746973    0.08890940\n##  (21,26] 625 0.09458232    0.09613906\n##  (26,33] 596 0.09019370    0.09167820\n##  (33,84] 648 0.09806295    0.09967697\n##     <NA> 107 0.01619249            NA"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"тэнцүү-хэмжээтэй-бүлгүүд-үүсгэх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Тэнцүү хэмжээтэй бүлгүүд үүсгэх","text":"Тооноос бүлэг үүсгэх өөр нэгэн функц бол dplyr багцын ntile() юм. Энэ функц таны датаг яг тэнцүү бүлгүүдэд хуваахыг оролддог. quantile() -аас ялгаатай тал нь нэг тоо хоёр өөр бүлэгт орж болдог тул анхаарах хэрэгтэй. Хуваагдах тоон вектор болон үүсгэх бүлгүүдийн тоог оруулж өгөх хэрэгэтй. cut() функцээр үүсгэгдсэн баганын утга тухайн бүлгийн нэр байдаг бол ntile()-ээр үүссэн багана дах утга зөвхөн бүлгийн дугаарууд болохыг анхаарна.","code":"\n# ntile()-аар бүлэг үүсгэ\nntile_data <- linelist %>% \n  mutate(even_groups = ntile(age_years, 10))\n\n# бүлэг тус бүрт ноогдох ажиглалтын тоо пропорцыг харуулах\nntile_table <- ntile_data %>% \n  janitor::tabyl(even_groups)\n  \n# зах хязгаарыг харуулах үүднээс min/max -г мөн нэмж харуул\nntile_ranges <- ntile_data %>% \n  group_by(even_groups) %>% \n  summarise(\n    min = min(age_years, na.rm=T),\n    max = max(age_years, na.rm=T)\n  )## Warning in min(age_years, na.rm = T): no non-missing arguments to min;\n## returning Inf## Warning in max(age_years, na.rm = T): no non-missing arguments to max;\n## returning -Inf\n# нэгтгэж, хэвлэ - зарим утга олон бүлэгт зэрэг орж болохыг анхаар\nleft_join(ntile_table, ntile_ranges, by = \"even_groups\")##  even_groups   n    percent valid_percent min  max\n##            1 651 0.09851695    0.10013844   0    2\n##            2 650 0.09836562    0.09998462   2    5\n##            3 650 0.09836562    0.09998462   5    7\n##            4 650 0.09836562    0.09998462   7   10\n##            5 650 0.09836562    0.09998462  10   13\n##            6 650 0.09836562    0.09998462  13   17\n##            7 650 0.09836562    0.09998462  17   21\n##            8 650 0.09836562    0.09998462  21   26\n##            9 650 0.09836562    0.09998462  26   33\n##           10 650 0.09836562    0.09998462  33   84\n##           NA 107 0.01619249            NA Inf -Inf"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"case_when","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"case_when()","text":"dplyr -ын case_when() -ыг ашиглаж тоон баганаас ангилал үүсгэж бас болно. Гэхдээ шууд автоматаар эрэмбэлэгдсэн factor төрлийн багана үүсдэг тул epikit -ын age_categories() эсвэл cut() -ыг хэрэглэх нь илүү хялбар байдаг.Хэрэв case_when() -г хэрэглэх бол Re-code values хэсгээс хэрхэн зөв хэрэглэх талаар үзнэ үү. Мөн энэ үед бүх баруун гар талын утгууд ижил төрөл байх хэрэгтэй. Хэрэв NA -г баруун гар талд бичих бол “Missing” эсвэл NA -г төлөөлсөн тусгай NA_character_ хэрэглэх шаардлагатай.","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"цэвэрлэх-холбоост-залгах","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Цэвэрлэх холбоост залгах","text":"Жишээгээр хоёр ангилагдсан баганыг цэвэрлэх pipe холбоостоо залгаж өгч харууллаа.","code":"\n# ЦЭВЭРЛЭХ 'PIPE' ХОЛБООС (түүхий датаг үе шаттайгаар дамжуулан цэвэрлэдэг холбоос)\n##################################################################################\n\n# Цэвэрлэх холбоосыг эхлэх\n###########################\nlinelist <- linelist_raw %>%\n    \n    # баганын нэрсийг жигдрүүлэх\n    janitor::clean_names() %>% \n    \n    # зарим баганын нэрийг гараар өөрчил\n            # ШИНЭ нэр             # ХУУЧИН нэр\n    rename(date_infection       = infection_date,\n           date_hospitalisation = hosp_date,\n           date_outcome         = date_of_outcome) %>% \n    \n    # баганыг хас\n    select(-c(row_num, merged_header, x28)) %>% \n\n    # давхардалтыг арилга\n    distinct() %>% \n  \n    # Шинэ багана нэм\n    mutate(bmi = wt_kg / (ht_cm/100)^2) %>% \n  \n    # баганын төрлийг хувирга\n    mutate(across(contains(\"date\"), as.Date), \n           generation = as.numeric(generation),\n           age        = as.numeric(age)) |> \n    \n    # багана нэм: эмнэлэгт хожуу ирэлт\n    mutate(days_onset_hosp = as.numeric(date_hospitalisation - date_onset)) %>% \n\n    # эмнэлэгийн баганууддах утгыг цэвэрлэх\n    mutate(hospital = recode(hospital,\n                      # ХУУЧИН = ШИНЭ\n                      \"Mitylira Hopital\"  = \"Military Hospital\",\n                      \"Mitylira Hospital\" = \"Military Hospital\",\n                      \"Military Hopital\"  = \"Military Hospital\",\n                      \"Port Hopital\"      = \"Port Hospital\",\n                      \"Central Hopital\"   = \"Central Hospital\",\n                      \"other\"             = \"Other\",\n                      \"St. Marks Maternity Hopital (SMMH)\" = \"St. Mark's Maternity Hospital (SMMH)\"\n                      )) %>% \n    \n    mutate(hospital = replace_na(hospital, \"Missing\")) %>% \n\n    # age_years баганыг үүсгэ (age болон age_unit баганыг ашиглаж)\n    mutate(age_years = case_when(\n          age_unit == \"years\" ~ age,\n          age_unit == \"months\" ~ age/12,\n          is.na(age_unit) ~ age,\n          TRUE ~ NA_real_)) |> \n  \n   # ЭНЭ ХҮРТЭЛХ ҮЙЛДЭЛ ӨМНӨХ ХЭСЭГТ ХЭЛЦЭГДСЭН\n   ################################################### \n    mutate(\n          # насны ангилал: өөрөө оруулах\n          age_cat = epikit::age_categories(age_years, breakers = c(0, 5, 10, 15, 20, 30, 50, 70)),\n        \n          # насны ангилал: 0 -оос 85 хүртэл 5 -аар\n          age_cat5 = epikit::age_categories(age_years, breakers = seq(0, 85, 5)))"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"мөр-нэмэх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"8.10 Мөр нэмэх","text":"","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"нэг-нэгээр-нэмэх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"нэг нэгээр нэмэх","text":"Мөрийг dplyr-ын add_row() -аар оруулах нь гар ажиллагаа ихтэй байдаг. Энэ үед багана тус бүр нэг төрлийн дата агуулсан байх шаардлагатайг санаарай (character, numeric, logical гэх мэт). Тиймээс нэмэх мөрийн дата төрлийг тааруулах шаардлагатай..болон .. аргументээр нэмэх мөрийн байрлалыг зааж өгдөг. Жишээ нь.= 3 гэвэл шинэ мөрийг одоогийн 3 дугаар мөрний өмнө нэм гэсэн үг. Default -аар мөрийг баганын төгсгөлд нэмдэг. Тодорхойлгоогүй багануудыг дутуу утгаар (NA) -авах болно.Шинэ үүссэн мөрийн дугаар хачин харагдаж болох ба (“…23”) row numbers pre-existing rows changed. using command twice, examine/test insertion carefully.Хэрэв зааж өгсөн дата төрөл нь таарахгүй бол дараахийн адил алдаа гарч ирнэ:(огноо төрлийн мөр нэмэхдээ огноогоо .Date() функцэд оруулж өгөөрэй ( .Date(\"2020-10-10\")).","code":"\nlinelist <- linelist %>% \n  add_row(row_num = 666,\n          case_id = \"abc\",\n          generation = 4,\n          `infection date` = as.Date(\"2020-10-10\"),\n          .before = 2)Error: Can't combine ..1$infection date <date> and ..2$infection date <character>."},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"мөрүүдийг-холбох","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Мөрүүдийг холбох","text":"Нэг хүснэгтийн мөрийг өөр нэг хүснэгтийн доороос залгах бол dplyr -ын bind_rows()- ыг хэрэглэдэг. Энэ талаар [Joining data] хэсэгт илүү тайлбарласан.","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"мөрийг-шүүх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"8.11 Мөрийг шүүх","text":"Багануудыг цэвэрлээд, шинэ утгуудыг оруулсны дараа нийтлэг хийгддэг алхам бол dplyr -ын filter() -ээр мөрөнд шүүлт хийх юм.TRUE байх ёстой логикийг filter() дотор зааж өгнө. Дараах хэсгүүдэд энгийн болон комплекс логик шалгуураар хэрхэн мөрийг шүүдгийг харуулав.","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"энгийн-шүүлт-хийх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Энгийн шүүлт хийх","text":"Логик шалгуурт нийцсэн мөрүүдийг linelist хүснэгтэд шүүж гаргаж ирэх жишээг харуулав. Зөвхөн хаалтан доторх логик шалгуурт TRUE нөхцлүүд л үлддэг.Энэ жишээний логик шалгуур нь gender == \"f\". Үүнийг үгчилбэл gender багана дах утгууд “f” (үсгийн том жижиг хамааатай) -тэй тэнцүү байна уу гэсэн үг.Шүүлтүүр уншигдахын өмнө linelist дэх мөрийн тоо nrow(linelist).Шүүж ялгасны дараа linelist хүснэгтэд linelist %>% filter(gender == \"f\") %>% nrow() мөр үлдсэн.","code":"\nlinelist <- linelist %>% \n  filter(gender == \"f\")   # gender баганад \"f\" гэсэн мөрүүдийг л авч үлднэ"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"дутуу-утгуудыг-ялгах","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Дутуу утгуудыг ялгах","text":"Нийтлэг хийдэг үйлдлүүдийн нэг бол дутуу утгатай мөрүүдийг ялгах юм. Ингэхдээ шууд filter(!.na(column) & !.na(column)) коммандыг өгөхийн оронд tydir багцын яг энэ үйлдэлд зориулсан drop_na() функцыг хэрэглэвэл оновчтой. Энэ функцын хаалтыг хоосон орхивол дутуу утга агуулсан мөр болгоныг арилгах болно. Баганын нэрийг зааж өгч болно эсвэл “tidyselect” функцын тусламжтай () багануудыг сонгож дутуу утгыг шүүж болно.[Missing data] хэсгээс дутуу утгыг янзлах төрөл бүрийн аргатай танилцаж болно.","code":"\nlinelist %>% \n  drop_na(case_id, age_years)  # case_id, age_years багануудад дутуу утгатай  мөрийг арилгах"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"мөрийн-дугаараар-шүүлт-хийх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Мөрийн дугаараар шүүлт хийх","text":"Хүснэгт болон tibble-ийн эхний баганын зүүн талд мөрийн дугаар харагддаг (R Viewer цонхоор харахад). Энэ дугаарууд бие даасан багана биш боловч filter() хийхэд хэрэглэгддэг.Дугаараар нь шүүлт хийхдээ логик шалгуурын нөхцлийн нэг хэсэгт dplyr -ын row_number() функцыг нээлттэй хааллтайгаар оруулдаг. Логик нөхцөлд %% оператор болон жагсаасан тоо шаардлагатай (дор үзүүлсний дагуу). Эхний N мөрийг харахаын тулд dplyr функцын head() функцыг хэрэглэнэ үү.can also convert row numbers true column piping data frame tibble function rownames_to_column() (put anything parentheses).","code":"\n# Эхний 100 мөр\nlinelist %>% head(100)     # tail() -аар сүүлийн мөрүүдийг харж болно\n\n# Эхний 5 мөр\nlinelist %>% filter(row_number() == 5)\n\n# Заасан гурван баганын 2-20 дах мөрийг харуул\nlinelist %>% filter(row_number() %in% 2:20) %>% select(date_onset, outcome, age)"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"комплекс-шүүлт-хийх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Комплекс шүүлт хийх","text":"Илүү комплекс логик шүүлт хийхдээ хаалт ( ), ЭСВЭЛ |, үгүйсгэх !, %%, БОЛОН & операторуудыг ашигладаг.Тэмдэглэл: ! операторыг үгүйсгэх логик шалгуурын өмнө тавьдаг. Жишээ нь !.na(column) комманд өгөхөд тухайн баганад дутуу утга байхгүй бол TRUE гэж гарна. Үүний адил !column %% c(\"\", \"b\", \"c\") комманд өгөхөд баганын утга вектор биш бол TRUE гэж гарна.","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"датаг-шалга","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Датаг шалга","text":"Доорх коммандаар өвчний эхлэлийг харуулсан гистограмм хийгднэ. Зургаас харахад 2012-2013 оны хооронд гарсан жижиг дэгдэлтийн дата түүхий датаны нэг хэсэг болж орсон байна. Бидний анализдаа энэхүү өмнөх дэгдэлтийн датаг арилгах шаардлагатай.","code":"\nhist(linelist$date_onset, breaks = 50)"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"тоон-болон-огноон-датаны-дутуу-утгад-шүүлт-хийх","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Тоон болон огноон датаны дутуу утгад шүүлт хийх","text":"2013 оны 6 сараас хойшхи мөрүүдийг date_onset баганад шууд шүүлт хийснээр ялгах боломжтой уу? Анхааруулга! filter(date_onset > .Date(\"2013-06-01\"))) комманд өгвөл дараагийн дэгдэлт дэх дутуу утгатай бүх мөрийг утгагдах болохыг анхаар!АЮУЛТАЙ: Тоон болон огноонд их (>) багын (<) тэмдэг хэрэглэхээр дутуу утгатай (NA) бүх мөр арилчихдаг! Учир нь NA нь хязгааргүй их эсвэл бага утга гэж уншигддаг.(Огноо болон lubridate багцтай ажиллах талаар [Working dates] хэсгээс үзээрэй)","code":""},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"шүүлтүүрийн-загвар-гаргах","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Шүүлтүүрийн загвар гаргах","text":"Солбисон хүснэгтээр зөв мөрүүд хамрагдсан эсэхийг шалга:Энэхүү датанаас эхний дэгдэлтийн (2012 болон 2013 онуудын) хэсгийг шүүхийн тулд ямар шалгуур нэмж болох вэ? Үүнээс харахад:2012 болон 2013 онд болсон эхний дэгдэлтүүд , B эмнэлэгт гарч Port эмнэлэгт ердөө 10 тохиолдол бүртгэгдсэн байна.Хоёрдах дэгдэлтийн үед болон B эмнэлэгүүдэд дэгдэлт гараагүй. Port эмнэлэгт дэгдэлт гарсан байна.Дараах хэсгийг хасах хэрэгтэй:А, B, Port эмнэлэгүүдийн тохиолдлуудын өвчин эхэлсэн өдөр нь 2012, 2013 онд тэмдэглэгдсэн мөрүүд nrow(linelist %>% filter(hospital %% c(\"Hospital \", \"Hospital B\") | date_onset < .Date(\"2013-06-01\"))):\n2012 болон 2013 онд тэмдэглэгдсэн өвчний эхлэлтэй мөрүүдийг хасах nrow(linelist %>% filter(date_onset < .Date(\"2013-06-01\")))\nболон B эмнэлэгийн огноо нь дутуу мөрүүдийг хасах nrow(linelist %>% filter(hospital %% c('Hospital ', 'Hospital B') & .na(date_onset)))\nОгноо нь дутуу утгатай бусад мөрийг хасахгүй байх nrow(linelist %>% filter(!hospital %% c('Hospital ', 'Hospital B') & .na(date_onset))).\nА, B, Port эмнэлэгүүдийн тохиолдлуудын өвчин эхэлсэн өдөр нь 2012, 2013 онд тэмдэглэгдсэн мөрүүд nrow(linelist %>% filter(hospital %% c(\"Hospital \", \"Hospital B\") | date_onset < .Date(\"2013-06-01\"))):2012 болон 2013 онд тэмдэглэгдсэн өвчний эхлэлтэй мөрүүдийг хасах nrow(linelist %>% filter(date_onset < .Date(\"2013-06-01\")))болон B эмнэлэгийн огноо нь дутуу мөрүүдийг хасах nrow(linelist %>% filter(hospital %% c('Hospital ', 'Hospital B') & .na(date_onset)))Огноо нь дутуу утгатай бусад мөрийг хасахгүй байх nrow(linelist %>% filter(!hospital %% c('Hospital ', 'Hospital B') & .na(date_onset))).Эхлээд linelist -ийн мөрийн тоо nrow(linelist)` байсан. Шүүлт хийх нөхцөл:Солбицох хүснэгт дахин хийж үзвэл болон B эмнэлэгүүдийн дата бүтнээрээ, Port эмнэлэгт 2012, 2013 онд гарсан 10 тохиолдлын мөрүүд хасагдаж бусад утгууд хэвэндээ байна (яг бидний зорьсны дагуу).Шүүлт хийх ганц коммандаар олон нөхцөл зэрэг оруулж (таслалаар тугаарлан) оруулж болно. Эсвэл ойлгомжтой болгох үүднээс нөхцөл тус бүрт filter() -т оруулж pipe -аар залгаж болно.Тэмдэглэл: зарим уншигчид шууд date_hospitalisation шүүлтүүрийг ашиглах нь хялбар болохыг анзаарсан байх. Энэ нь дутуу утга байхгүй 100% бүрэн. бүртгэл юм. Таны зөв. Дээрх жишээний хувьд бол комплекс шүүлт хэрхэн хийхийг үзүүлэх үүднээс date_onset-г сонгосон гэдгийг анхаарна уу.","code":"\ntable(Hospital  = linelist$hospital,                     # эмнэлэгийн нэр\n      YearOnset = lubridate::year(linelist$date_onset),  # өвчний эхэлсэн (date_onset) жил\n      useNA     = \"always\")                              # дутуу утгыг харуул##                                       YearOnset\n## Hospital                               2012 2013 2014 2015 <NA>\n##   Central Hospital                        0    0  351   99   18\n##   Hospital A                            229   46    0    0   15\n##   Hospital B                            227   47    0    0   15\n##   Military Hospital                       0    0  676  200   34\n##   Missing                                 0    0 1117  318   77\n##   Other                                   0    0  684  177   46\n##   Port Hospital                           9    1 1372  347   75\n##   St. Mark's Maternity Hospital (SMMH)    0    0  322   93   13\n##   <NA>                                    0    0    0    0    0\nlinelist <- linelist %>% \n  # Өвчний эхлэл нь 2013  оны 6 сарын 1 нээс хойш ЭСВЭЛ өвчин эхэлсэн огноо нь дутуу бичигдсн , B эмнэлэгээс эмнэлэгийн бус тохиолдол\n  filter(date_onset > as.Date(\"2013-06-01\") | (is.na(date_onset) & !hospital %in% c(\"Hospital A\", \"Hospital B\")))\n\nnrow(linelist)## [1] 6019\ntable(Hospital  = linelist$hospital,                     # Эмнэлэгийн нэр\n      YearOnset = lubridate::year(linelist$date_onset),  # өвчин эхэлсэн (date_onset) жил\n      useNA     = \"always\")                              # дутуу утгыг харуул##                                       YearOnset\n## Hospital                               2014 2015 <NA>\n##   Central Hospital                      351   99   18\n##   Military Hospital                     676  200   34\n##   Missing                              1117  318   77\n##   Other                                 684  177   46\n##   Port Hospital                        1372  347   75\n##   St. Mark's Maternity Hospital (SMMH)  322   93   13\n##   <NA>                                    0    0    0"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"бие-даасан-үйлдэл","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Бие даасан үйлдэл","text":"Шүүлт хийх үйлдлийг дангаар нь бас гүйцэтгэж болно (pipe холбоосонд залгалгүйгээр). Энэ тохиолдолд dplyr -ын бусад функцын адил эхний аргумент нь дата хүснэгт өөрөө байх болно.base R -ын дөрвөлжин [ ] хаалтыг (сонгосон багана, мөрийг заадаг) ашиглан хүссэн хэсгээ салгаж үзэж болно.","code":"\n# dataframe <- filter(хүснэгт, мөрийг үлдээх нөхцлүүд )\n\nlinelist <- filter(linelist, !is.na(case_id))\n# dataframe <- dataframe[row conditions, column conditions] (blank means keep all)\n\nlinelist <- linelist[!is.na(case_id), ]"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"мөрүүдийг-түргэн-шалгах","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Мөрүүдийг түргэн шалгах","text":"Дата янзалж байх явцад зарим мөрийг яаралтай шалгах шаардлага цөөнгүй гардаг. RStudio дээр дата хүснэгттийг хэвлэж үзэхэд base R -ын функц View()-ийг хэрэглэдэг.linelist-ийг RStudio-д харах код:Доор тодорхой нэг нүдийг шалгаж харах хоёр аргыг харуулав (тодорхий мөр, тодорхой багана):dplyr -ын filter() болон select() функцууд:Авч үлдэх мөрүүдээ filter() -т, багануудаа select() -д оруулэ pipe -аар холбож View() дотор бичнэ. Жишээ нь дараах 3 тохиолдлын өвчин эхэлсэн болон эмнэлэгт хэвтсэн огноог харахын тулд доорхи коммандыг өгнө:base R -ын [ ] хаалтыг ашиглан хүссэн хэсгээ салгаж үзэж, дээрхитэй ижил үр дүнг гаргаж бас болно.","code":"\nView(linelist)\nView(linelist %>%\n       filter(case_id %in% c(\"11f8ea\", \"76b97a\", \"47a5f5\")) %>%\n       select(date_onset, date_hospitalisation))\nView(linelist[linelist$case_id %in% c(\"11f8ea\", \"76b97a\", \"47a5f5\"), c(\"date_onset\", \"date_hospitalisation\")])"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"pipe-холбоост-залгах","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"Pipe холбоост залгах","text":"","code":"\n# ЦЭВЭРЛЭХ 'PIPE' ХОЛБООС (түүхий датаг үе шаттайгаар дамжуулан цэвэрлэдэг холбоос)\n##################################################################################\n\n# Цэвэрлэх холбоосыг эхлэх\n###########################\nlinelist <- linelist_raw %>%\n    \n    # баганын нэрсийг жигдрүүлэх\n    janitor::clean_names() %>% \n    \n    # зарим баганын нэрийг гараар өөрчил\n            # ШИНЭ нэр             # ХУУЧИН нэр\n    rename(date_infection       = infection_date,\n           date_hospitalisation = hosp_date,\n           date_outcome         = date_of_outcome) %>% \n    \n    # баганыг хас\n    select(-c(row_num, merged_header, x28)) %>% \n\n    # давхардалтыг арилга\n    distinct() %>% \n  \n    # Шинэ багана нэм\n    mutate(bmi = wt_kg / (ht_cm/100)^2) %>% \n  \n    # баганын төрлийг хувирга\n    mutate(across(contains(\"date\"), as.Date), \n           generation = as.numeric(generation),\n           age        = as.numeric(age)) |> \n    \n    # багана нэм: эмнэлэгт хожуу ирэлт\n    mutate(days_onset_hosp = as.numeric(date_hospitalisation - date_onset)) %>% \n\n    # эмнэлэгийн баганууддах утгыг цэвэрлэх\n    mutate(hospital = recode(hospital,\n                      # ХУУЧИН = ШИНЭ\n                      \"Mitylira Hopital\"  = \"Military Hospital\",\n                      \"Mitylira Hospital\" = \"Military Hospital\",\n                      \"Military Hopital\"  = \"Military Hospital\",\n                      \"Port Hopital\"      = \"Port Hospital\",\n                      \"Central Hopital\"   = \"Central Hospital\",\n                      \"other\"             = \"Other\",\n                      \"St. Marks Maternity Hopital (SMMH)\" = \"St. Mark's Maternity Hospital (SMMH)\"\n                      )) %>% \n    \n    mutate(hospital = replace_na(hospital, \"Missing\")) %>% \n\n    # age_years баганыг үүсгэ (age болон age_unit баганыг ашиглаж)\n    mutate(age_years = case_when(\n          age_unit == \"years\" ~ age,\n          age_unit == \"months\" ~ age/12,\n          is.na(age_unit) ~ age,\n          TRUE ~ NA_real_)) |> \n  \n    mutate(\n          # насны ангилал: өөрөө оруулах\n          age_cat = epikit::age_categories(age_years, breakers = c(0, 5, 10, 15, 20, 30, 50, 70)),\n        \n          # насны ангилал: 0 -оос 85 хүртэл 5 -аар\n          age_cat5 = epikit::age_categories(age_years, breakers = seq(0, 85, 5))) |> \n    \n   # ЭНЭ ХҮРТЭЛХ ҮЙЛДЭЛ ӨМНӨХ ХЭСЭГТ ХЭЛЦЭГДСЭН\n   ################################################### \n    \n    filter(\n          # case_id баганад дутуу утгагүй мөрүүдийг л үлдээ\n          !is.na(case_id),  \n          \n          # зөвхөн хоёрдах дэгдэлтийн датаг үлдээ\n          date_onset > as.Date(\"2013-06-01\") | (is.na(date_onset) & !hospital %in% c(\"Hospital A\", \"Hospital B\")))"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"мөр-дагуу-тооцоолол","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"8.12 Мөр дагуу тооцоолол","text":"Хэрэв мөр дагуу уртаашаа тооцоолол хийх бол dplyr-ын rowwise() функцыг хэрэглэ. Онлайн винньетийг row-wise calculations- ээс нэмж үзнэ үү .Дор жишээнд linelist датанд rowwise() функц мөр болгоныг уртааш нь шалгаж үзээд “yes” гэсэн утгатай нүднүүдийн нийлбэртэй шинэ багана нэмсэн. Шалгагдах багануудыг sum() функцэд нэрээр нь вектороор c() уагсааж оруулна. rowwise() функц нь group_by() функцын нэг төрөл тул үйлдлээ хийж дуусаад эргүүлээд ungroup() коммандаар задлах шаардлагатай ([Grouping data] хэсэг).Шалгах багануудыг сонгохдоо “tidyselect” туслах функцуудыг ( select() хэсэгт тайлбарласны дагуу) хэрэглэж болно. Зөвхөн тохируулгыг нь солиход л болно (dplyr -ын select(), summarise() зэрэг функц биш учраас).dplyr -ын c_across() дотор нөхцлөө оруулж өгнө. Учир нь c_across (documentation) функц rowwise() -аар ажилладаг. Жишээ нь дараах код ажиллах дараалал нь:эхлээд rowwise() гүйцэтгэгдэх ба ингэснээр үүний дараа хийгдэх үйлдэл (sum()) мөр болгонд хийгднэ (багануудын нийлбэр биш).num_NA_dates хэмээх шинэ баганыг нэмж, defined row number columns (name containing “date”) .na() evaluated TRUE (missing data).ungroup() хийснээр дараагийн хийгдэх үйлдлүүдэд rowwise() нөлөөлөхгүй байх болно.Нэмж max() гэх мэт бусад функцыг хэрэглэж болно. max()-аар мөр болгон дах хамгийн шинэ огноог харуулдаг:","code":"\nlinelist %>%\n  rowwise() %>%\n  mutate(num_symptoms = sum(c(fever, chills, cough, aches, vomit) == \"yes\")) %>% \n  ungroup() %>% \n  select(fever, chills, cough, aches, vomit, num_symptoms) # үзүүлэх зорилготой## # A tibble: 5,888 x 6\n##    fever chills cough aches vomit num_symptoms\n##    <chr> <chr>  <chr> <chr> <chr>        <int>\n##  1 no    no     yes   no    yes              2\n##  2 <NA>  <NA>   <NA>  <NA>  <NA>            NA\n##  3 <NA>  <NA>   <NA>  <NA>  <NA>            NA\n##  4 no    no     no    no    no               0\n##  5 no    no     yes   no    yes              2\n##  6 no    no     yes   no    yes              2\n##  7 <NA>  <NA>   <NA>  <NA>  <NA>            NA\n##  8 no    no     yes   no    yes              2\n##  9 no    no     yes   no    yes              2\n## 10 no    no     yes   no    no               1\n## # ... with 5,878 more rows\nlinelist %>%\n  rowwise() %>%\n  mutate(num_NA_dates = sum(is.na(c_across(contains(\"date\"))))) %>% \n  ungroup() %>% \n  select(num_NA_dates, contains(\"date\")) # үзүүлэх зорилготой## # A tibble: 5,888 x 5\n##    num_NA_dates date_infection date_onset date_hospitalisation date_outcome\n##           <int> <date>         <date>     <date>               <date>      \n##  1            1 2014-05-08     2014-05-13 2014-05-15           NA          \n##  2            1 NA             2014-05-13 2014-05-14           2014-05-18  \n##  3            1 NA             2014-05-16 2014-05-18           2014-05-30  \n##  4            1 2014-05-04     2014-05-18 2014-05-20           NA          \n##  5            0 2014-05-18     2014-05-21 2014-05-22           2014-05-29  \n##  6            0 2014-05-03     2014-05-22 2014-05-23           2014-05-24  \n##  7            0 2014-05-22     2014-05-27 2014-05-29           2014-06-01  \n##  8            0 2014-05-28     2014-06-02 2014-06-03           2014-06-07  \n##  9            1 NA             2014-06-05 2014-06-06           2014-06-18  \n## 10            1 NA             2014-06-05 2014-06-07           2014-06-09  \n## # ... with 5,878 more rows\nlinelist %>%\n  rowwise() %>%\n  mutate(latest_date = max(c_across(contains(\"date\")), na.rm=T)) %>% \n  ungroup() %>% \n  select(latest_date, contains(\"date\"))  # үзүүлэх зорилготой## # A tibble: 5,888 x 5\n##    latest_date date_infection date_onset date_hospitalisation date_outcome\n##    <date>      <date>         <date>     <date>               <date>      \n##  1 2014-05-15  2014-05-08     2014-05-13 2014-05-15           NA          \n##  2 2014-05-18  NA             2014-05-13 2014-05-14           2014-05-18  \n##  3 2014-05-30  NA             2014-05-16 2014-05-18           2014-05-30  \n##  4 2014-05-20  2014-05-04     2014-05-18 2014-05-20           NA          \n##  5 2014-05-29  2014-05-18     2014-05-21 2014-05-22           2014-05-29  \n##  6 2014-05-24  2014-05-03     2014-05-22 2014-05-23           2014-05-24  \n##  7 2014-06-01  2014-05-22     2014-05-27 2014-05-29           2014-06-01  \n##  8 2014-06-07  2014-05-28     2014-06-02 2014-06-03           2014-06-07  \n##  9 2014-06-18  NA             2014-06-05 2014-06-06           2014-06-18  \n## 10 2014-06-09  NA             2014-06-05 2014-06-07           2014-06-09  \n## # ... with 5,878 more rows"},{"path":"дата-цэвэрлэгээ-ба-үндсэн-функцууд.html","id":"эрэмбэлэн-ялгах","chapter":"8 Дата цэвэрлэгээ ба үндсэн функцууд","heading":"8.13 Эрэмбэлэн ялгах","text":"Мөрийг баганын утгаар эрэмбэлэх бол dplyr функцын arrange() -ыг хэрэглэнэ.Багануудыг эрэмбэлэх дарааллын дагуу жагсааж бичнэ. Хэрэв эрэмбэлэлтийг аль нэг баганын ангиллын дагуу хийх бол .by_group = TRUE гэж аргументийг тохируулна ([Grouping data] хэсгээс харна уу).Default-аар бол баганын утга “ихсэх” дарааллаар эрэмбэлэгддэг (тоо болон үсгэн утга). Баганын нэрийг desc() -д оруулсанаар “буурах” дараалалд оруулж болно.Ялангуяа тайлан, илтгэлд зориулсан хүснэгт ([Tables presentation]) дээр ажиллахад arrange() -ыг ашиглавал оновчтой. slice() -аар ангилал тус бүрийн “оройн” мөрүүдийг харуулж болно. Мөн factor-ын шатлалыг харагдах байдлаар нь эрэмбэлж тохируулж болдог.Жишээ нь, linelist датаг hospital баганын дагуу эрэмбэлээд, дараа нь date_onset -ээр буурах дарааллаар эрэмбэлэе гэвэл дараах байдлаар кодыг бичнэ:","code":"\nlinelist %>% \n   arrange(hospital, desc(date_onset))"},{"path":"огноотой-ажиллах-нь.html","id":"огноотой-ажиллах-нь","chapter":"9 Огноотой ажиллах нь","heading":"9 Огноотой ажиллах нь","text":"R дээр огноог ашиглах нь бусад объектын төрлүүдтэй ажиллахаас илүү анхаарал шаарддаг. Доор бид энэ үйл явцыг арай хялбар болгохын тулд зарим хэрэгсэл, жишээг санал болгож байна. Аз болоход lubridate гэх мэт багцуудын тусламжтайгаар, практик дадлагын үр дүнд огноог хялбархан янзалж чаддаг болно.Боловсруулаагүй өгөгдлийг R руу импортлох үед огноог ихэвчлэн тэмдэгт (character) обьект хэмээн таньж оруулдаг бөгөөд энэ обьектыг цагийн цуврал хийх, хугацааны интервалыг тооцоолох гэх мэт огнооны ерөнхий үйлдлүүдэд ашиглах боломжгүй байдаг. Дээрээс нь огноог форматлах олон арга байдаг тул та огнооны аль хэсэг нь юу болохыг (сар, өдөр, цаг гэх мэт) танихад нь R-д туслах шаардлагатай болдог нь огноотой ажиллах процессыг улам төвөгтэй болгодог.R дахь огноо нь өөрсдийн гэсэн объектын ангитай буюу Date анги юм. Энд огноо, цаг хоёуланг нь агуулсан объектуудыг хадгалдаг тусгай анги бас байдаг гэдгийг тэмдэглэх нь зүйтэй. Огноо, цагийн объектуудыг албан ёсоор POSIXt, POSIXct ба/эсвэл POSIXlt анги гэж нэрлэдэг (ялгаа нь чухал биш). Эдгээр объектыг албан бусаар datetime ангид оруулдаг.Багана нь огноог агуулсан бол R-д тухайн баганыг огноо гэдгийг таниулах нь чухал.Багана нь огноог агуулсан бол R-д тухайн баганыг огноо гэдгийг таниулах нь чухал.Огноо бол объектын ангилал бөгөөд түүнтэй ажиллахад төвөгтэй байдаг.Огноо бол объектын ангилал бөгөөд түүнтэй ажиллахад төвөгтэй байдаг.Энд бид огноо агуулсан багануудыг Date анги руу хөрвүүлэх хэд хэдэн аргыг танилцуулж байна.\nЭнд бид огноо агуулсан багануудыг Date анги руу хөрвүүлэх хэд хэдэн аргыг танилцуулж байна.","code":""},{"path":"огноотой-ажиллах-нь.html","id":"бэлтгэл","chapter":"9 Огноотой ажиллах нь","heading":"9.1 Бэлтгэл","text":"","code":""},{"path":"огноотой-ажиллах-нь.html","id":"багцуудыг-ачаалах","chapter":"9 Огноотой ажиллах нь","heading":"Багцуудыг ачаалах","text":"Доорх кодын хэсэг нь энэ хуудсанд шаардлагатай багцуудын ачааллыг харуулж байна. Энэхүү гарын авлагад бид pacman багцаас p_load() функцыг онцлон ашиглаж буй бөгөөд энэ функц нь шаардлагатай бол тухайн багцыг шууд суулгаж, ашиглахаар ачаалдаг. Мөн та аль хэдийн суулгасан багцуудыг base R-ын library() функц ашиглан ачаалж болно. R багцуудын талаар дэлгэрэнгүй мэдээллийг \\[R суурь ойлголтууд\\] хуудаснаас үзнэ үү.","code":"\n# Багц суулгасан эсэхийг шалгаж, шаардлагатай бол суулгаж, одоогийн сесс рүү багцыг ачаална\n\npacman::p_load(\n  lubridate,  # огноог зохицуулах, хөрвүүлэх ерөнхий багц\n  linelist,   # замбараагүй огноог \"таах\" функцтэй \n  aweek,      # огноог долоо хоног, долоо хоногийг огноо болгон хөрвүүлэх өөр сонголт\n  zoo,        # нэмэлт огноо/цаг функцүүд\n  tidyverse,  # дата менежмент болон дүрслэл\n  rio)        # дата импорт/экспорт"},{"path":"огноотой-ажиллах-нь.html","id":"дата-импортлох-1","chapter":"9 Огноотой ажиллах нь","heading":"Дата импортлох","text":"Бид Эбола тахлын зохиомол тохиолдлын датасетийг импортолж байна. Хэрэв та датаг татаж аван алхам алхмаар дагахыг хүсвэл \\[Гарын авлага, дата татаж авах\\] хуудасны зааврыг харна уу. Бид энэ файлыг ажлын директор дотор байгаа гэж үзэж байгаа тул энэ файлын замд дэд хавтас заагаагүй болно.","code":"\nlinelist <- import(\"linelist_cleaned.xlsx\")"},{"path":"огноотой-ажиллах-нь.html","id":"одоогийн-огноо","chapter":"9 Огноотой ажиллах нь","heading":"9.2 Одоогийн огноо","text":"Та base R дээр дараах зүйлийг хийснээр таны компьютерийн одоогийн “систем” огноо эсвэл системийн огнооцагийг авах боломжтой.lubridate багцын тусламжтайгаар эдгээрийг today() болон now() функцүүдээр тус тус авах боломжтой. date() функц нь өдөр, сарын нэрийн хамт одоогийн огноо, цагийг харуулна.","code":"\n# системийн огноог авах - энэ бол DATE анги юм\nSys.Date()## [1] \"2022-01-05\"\n# системийн цагийг авах - энэ бол DATETIME анги юм \nSys.time()## [1] \"2022-01-05 18:16:53 +08\""},{"path":"огноотой-ажиллах-нь.html","id":"огноо-руу-хөрвүүлэх","chapter":"9 Огноотой ажиллах нь","heading":"9.3 Огноо руу хөрвүүлэх","text":"Датасетийг R руу импортлосны дараа огнооны баганын утгууд “1989/12/30”, “05/06/2014”, эсвэл “2020 оны 1-р сарын 13” гэх мэтээр харагдаж болно. Эдгээр тохиолдолд R нь эдгээр утгуудыг тэмдэгт утга гэж оруулсан байх магадлалтай. Эдгээр утгууд нь огноо мөн… бөгөөд огнооны формат ямар байхыг R-д хэлж өгөх шаардлагатай (аль хэсэг нь Өдөр, аль нь Сар, аль нь Жил гэх мэт).Ингээд хэлээд өгөхөд R эдгээр утгыг Date анги руу хөрвүүлдэг. Харин хөшигний цаана R огноог тоогоор хадгална (1970 оны 1-р сарын 1-ний “эх” өдрөөс хойшхи өдрийн тоо). Та огнооны энэхүү тоотой бараг харьцахгүй боловч R огноог ингэж хадгалснаар огноог үргэлжилсэн (continuous) хувьсагч гэж үзэн огноо хоорондын зайг тооцоолох зэрэг тусгай үйлдлүүдийг хийх боломжийг олгодог.Өгөгдмөлөөр, R дахь Date ангийн утгууд нь YYYY-MM-DD хэлбэрээр харагдана. Энэ бүлэгт бид огнооны утгын харагдах байдлыг хэрхэн өөрчлөх талаар харуулах болно.Доор бид баганыг тэмдэгтийн утгаас Date анги руу хөрвүүлэх хоёр аргыг танилцуулж байна.ЗӨВЛӨМЖ: Та баганын одоогийн ангийг class(linelist$date_onset) зэргээр base R-ын class()функц ашиглан шалгаж болно.","code":""},{"path":"огноотой-ажиллах-нь.html","id":"base-r","chapter":"9 Огноотой ажиллах нь","heading":"base R","text":".Date() нь объект эсвэл баганыг Date анги руу хөрвүүлдэг стандарт, base R функц юм (“D”-н том үсгийг анхаарна уу)..Date()-г ашиглахад дараахь зүйлийг шаарддаг:Хэрэв та огноог тоогоор оруулж буй бол эх огноог эсвэл огноог тэмдэгт хэлбэрээр оруулж буй бол одоо байгаа форматыг зааж өгнө (Excel огнооны хэсгийг үзнэ үү)Хэрэв та огноог тоогоор оруулж буй бол эх огноог эсвэл огноог тэмдэгт хэлбэрээр оруулж буй бол одоо байгаа форматыг зааж өгнө (Excel огнооны хэсгийг үзнэ үү)Хэрэв тэмдэгтийн баганад ашигласан бол бүх огнооны утгууд яг ижил форматтай байх ёстой (хэрэв тийм биш бол linelist багцын guess_dates() функцыг ашиглаж үзнэ үү)Хэрэв тэмдэгтийн баганад ашигласан бол бүх огнооны утгууд яг ижил форматтай байх ёстой (хэрэв тийм биш бол linelist багцын guess_dates() функцыг ашиглаж үзнэ үү)Эхлээд баганыхаа ангийг base R-ын class() функцээр шалгана уу. Хэрэв та датаныхаа ангийн талаар эргэлзэж байвал (жишээ нь “POSIXct” зэрэг анги гараад ирэх үед) эхлээд тухайн баганыг .character() функц ашиглан тэмдэгт анги руу хөрвүүлээд дараа нь Date анги руу хөрвүүлэх нь хамгийн хялбар арга юм.Хоёрдугаарт, .Date() функц дотор format = аргументыг ашиглан R-д тэмдэгтийн огнооны бүрэлдэхүүн хэсгүүдийн одоогийн форматыг хэлж болно - аль тэмдэгтүүд нь сар, өдөр, жилийг зааж буй болон, тэдгээрийг хэрхэн тусгаарласан зэргийг. Хэрэв таны утгууд аль хэдийн R-ын стандарт огнооны форматын аль нэгэнд байгаа бол (“YYYY-MM-DD” эсвэл “YYYY/MM/DD”) format = аргумент шаардлагагүй.Форматлахын (format =) тулд доорх тусгай “strptime” товчлолуудыг ашиглан одоогийн огнооны форматыг илэрхийлэх тэмдэгтийн стрингийг (ишлэл дотор) оруулна. Жишээлбэл, хэрэв таны тэмдэгтийн огноо “24/04/1968” гэх мэт “DD/MM/YYYY” форматтай байгаа бол format = \"%d/%m/%Y\" ашиглан утгуудыг огноо руу хөрвүүлнэ. Форматыг ишлэл дотор оруулах шаардлагатай. Мөн ташуу зураас, зураасыг бүү мартаарай!Ихэнх strptime товчиллуудыг доор жагсаав. Та ?strptime командыг ажиллуулан бүрэн жагсаалтыг харах боломжтой.%d = Сарын өдрийн дугаар (5, 17, 28 гэх мэт)\n%j = Жилийн өдрийн дугаар (Жулиан өдөр 001-366)\n%= Товчилсон ажлын өдөр (Mon, Tue, Wed гэх мэт)\n%= Бүтэн ажлын өдөр (Monday, Tuesday гэх мэт)%w = Ажлын өдрийн дугаар (0-6, Ням гараг 0)\n%u = Ажлын өдрийн дугаар (1-7, Даваа гараг 1)\n%W = Долоо хоногийн дугаар (00-53, Даваа гараг долоо хоногийн эхлэл)\n%U = Долоо хоногийн дугаар (01-53, Ням гараг долоо хоногийн эхлэл)\n%m = Сарын дугаар (жишээ нь 01, 02, 03, 04)\n%b = Товчилсон сар (Jan, Feb гэх мэт)\n%B = Бүтэн сар (January, February гэх мэт)\n%y = 2-оронтой жил (жишээ нь 89)\n%Y = 4-оронтой жил (жишээ нь 1989)\n%h = цаг (24 цагийн цаг)\n%m = минут\n%s = секунд%z = GMT-ээс офсет\n%Z = Цагийн бүс (тэмдэгт)ЗӨВЛӨМЖ: .Date()-ын format = аргумент нь таны хүсэж буй огнооны форматыг R-д хэлж буй биш бөгөөд харин командыг ажиллуулахын өмнө огнооны ямар хэсгүүд байгааг R-д зааж өгч буйг хэлж байгаа юм.ЗӨВЛӨМЖ: format = аргументад таны оруулж буй огноонд байгаа огнооны-хэсэг тусгаарлагчийг (жишээ нь, /, -, эсвэл зай) ашиглахаа мартаж болохгүй.Утгууд нь Date ангид орсны дараа R нь тэдгээрийг стандарт формат болох YYYY-MM-DD байдлаар харуулах болно.","code":"\n# Date анги руу хөрвүүлэх\nlinelist <- linelist %>% \n  mutate(date_onset = as.Date(date_of_onset, format = \"%d/%m/%Y\"))"},{"path":"огноотой-ажиллах-нь.html","id":"lubridate","chapter":"9 Огноотой ажиллах нь","heading":"lubridate","text":"lubridate багцыг ашигласнаар тэмдэгтийн объектуудыг огноо руу хөрвүүлэх нь илүү хялбар болно. Энэ багц нь огноо, цагтай ажиллах явцыг base R-аас илүү энгийн бөгөөд тогтвортой болгоход зориулагдсан tidyverse-ийн багц юм. Эдгээр шалтгааны улмаас lubridate-г ихэвчлэн огноо, цагийн хувьд алтан стандартын багц гэж үздэг бөгөөд тэдэнтэй ажиллах бүрт хэрэглэхийг зөвлөдөг.lubridate багц тэмдэгтийн объектуудыг огноо руу хөрвүүлэхэд зориулсан хэд хэдэн туслах функцээр хангадаг бөгөөд эдгээр нь .Date()-д форматыг зааж өгөхөөс илүү хялбар бөгөөд ойлгомжтой байдаг. Эдгээр функцууд нь огнооны форматуудын товчлолын нэрээр нэрлэгдсэн бөгөөд тэдгээр нь тухайн огнооны форматтай тусгай холбоотой боловч төрөл бүрийн ялгагч, огнооны синоним (жишээ нь, 01 vs Jan vs January гэх мэт) ашиглах боломж олгодог.ymd() функц нь огнооны утгыг жил, сар, өдөр гэсэн дараалалтай болгон хувиргадаг.mdy() функц нь сар, өдөр, жил гэсэн дарааллаар өгсөн огнооны утгыг уян хатан байдлаар хөрвүүлдэг.dmy() функц нь өдөр, сар, жил гэсэн дарааллаар өгсөн огнооны утгыг уян хатан байдлаар хөрвүүлдэг.Хэрэв пайп ашиглаж байгаа бол тэмдэгтийн баганыг lubridate ашиглан огноо руу хөрвүүлэх нь дараах байдалтай байж болно:Дууссаны дараа та баганын ангийг шалгахын тулд class() ажиллуулж болно.Утгууд нь Date ангид орсны дараа R нь тэдгээрийг стандарт формат болох YYYY-MM-DD байдлаар харуулах болно.Дээрх функцууд 4 оронтой жил бүхий форматтай хамгийн сайн ажилладаг гэдгийг анхаарна уу. 2 оронтой жил ашиглахад lubridate зууныг нь таах гэж оролддог тул төсөөлөөгүй үр дүнд хүргэж болзошгүй.2 оронтой жилийг 4 оронтой жил (нэг зууны) болгон хөрвүүлэхийн тулд та эхлээд тэмдэгт анги руу хөрвүүлж, дараа нь stringr багцын str_glue() функц ашиглан одоо байгаа цифрүүдийн өмнө pre-fix нэмэн нэгтгэж болно (\\[Тэмдэгтүүд болон стрингүүд бүлгийг харна уу\\]). Үүний дараа нь огноо руу хөрвүүлнэ.","code":"\n# lubridate суулгах/ачаалах\npacman::p_load(lubridate)\n# огноог жил-сар-өдөр хэлбэрээр унших\nymd(\"2020-10-11\")## [1] \"2020-10-11\"\nymd(\"20201011\")## [1] \"2020-10-11\"\n# огноог сар-өдөр-жил форматаар унших\nmdy(\"10/11/2020\")## [1] \"2020-10-11\"\nmdy(\"Oct 11 20\")## [1] \"2020-10-11\"\n# огноог өдөр-сар-жил форматаар унших\ndmy(\"11 10 2020\")## [1] \"2020-10-11\"\ndmy(\"11 October 2020\")## [1] \"2020-10-11\"\nlinelist <- linelist %>%\n  mutate(date_onset = lubridate::dmy(date_onset))\n# Баганын ангийг шалгах\nclass(linelist$date_onset)  \ntwo_digit_years <- c(\"15\", \"15\", \"16\", \"17\")\nstr_glue(\"20{two_digit_years}\")## 2015\n## 2015\n## 2016\n## 2017"},{"path":"огноотой-ажиллах-нь.html","id":"багануудыг-нэгтгэх","chapter":"9 Огноотой ажиллах нь","heading":"Багануудыг нэгтгэх","text":"Та олон тоон багануудыг нэг огнооны баганад нэгтгэхийн тулд lubridate багцын make_date() болон make_datetime() функцуудыг ашиглаж болно. Жишээлбэл, хэрэв таны linelist датафрэймд onset_day, onset_month, onset_year гэсэн тоон баганууд байгаа бол:","code":"\nlinelist <- linelist %>% \n  mutate(onset_date = make_date(year = onset_year, month = onset_month, day = onset_day))"},{"path":"огноотой-ажиллах-нь.html","id":"excel-огноо","chapter":"9 Огноотой ажиллах нь","heading":"9.4 Excel огноо","text":"Ихэнх программ хангамжууд огноог тоогоор хадгалдаг. R нь 1970 оны 1-р сарын 1-нийг эх өдөр болгон түүнээс хойш тоолон огноог хадгалдаг. Тиймээс хэрэв та .numeric(.Date(\"1970-01-01)) гэж ажиллуулбал 0 гарах болно.Microsoft Excel нь таны үйлдлийн системээс хамааран 1899 оны 12-р сарын 30 (Windows) эсвэл 1904 оны 1-р сарын 1-нээр (Mac) эх болгон огноог хадгалдаг. Дэлгэрэнгүй мэдээллийг энэхүү Microsoft-ын заавраас үзнэ үү.Excel-ийн огноо нь ихэвчлэн R руу орохдоо тэмдэгтийн оронд эдгээр тоон утгууд байдлаар импортлогддог. Хэрэв таны Excel-ээс импортолсон датасетийн огноог “41369” гэх мэт тоо эсвэл тэмдэгтээр харуулсан бол хөрвүүлэхийн тулд .Date() (эсвэл lubridate-ийн as_date() функцийг) ашиглана уу. Гэхдээ дээрх шиг “формат” өгөхийн оронд origin = аргументэд Excel-ийн эх огноог өгнө.Хэрэв Excel-ийн огноог R-д тэмдэгтийн хэлбэрээр хадгалсан бол энэ нь ажиллахгүй тул огнооны тоо нь Тоон анги эсэхийг шалгаарай!ТЭМДЭГЛЭЛ: Та R-ийн анхдагч огнооны форматаар (“YYYY-MM-DD”) эх огноог оруулах шаардлагатай.","code":"\n# Excel-ийн тоон огноог хөрвүүлэхдээ Excel-ийн \"эх огноо\"-г өгөх жишээ\ndata_cleaned <- data %>% \n  mutate(date_onset = as.numeric(date_onset)) %>%   # тоон ангитай байхыг бататгах\n  mutate(date_onset = as.Date(date_onset, origin = \"1899-12-30\")) # Excel эх огноо ашиглан огноо руу хөрвүүлэх"},{"path":"огноотой-ажиллах-нь.html","id":"эмх-цэгцгүй-огноо","chapter":"9 Огноотой ажиллах нь","heading":"9.5 Эмх цэгцгүй огноо","text":"linelist багцын guess_dates() функц нь олон янзын форматтай огноог агуулсан “замбараагүй” огнооны баганыг уншиж, огноог стандарт формат руу хөрвүүлэхийг оролддог. Та онлайнаар guess_dates()-ын талаар илүү ихийг уншиж болно. Хэрэв guess_dates() функцын R 4.0.2-д зориулсан хувилбар CRAN дээр байхгүй бол pacman::p_load_gh(\"reconhub/linelist\") командаар суулгаж ашиглана уу.Жишээлбэл, guess_dates нь “2018 оны 1-р сарын 03”, “07/03/1982”, “08/20/85” гэсэн тэмдэгтийн огнооны векторыг хараад дараах Огноо ангилал руу хөрвүүлнэ: 2018-01-03, 1982-03-07, 1985-08-20.Таны guess_dates() функцэд оруулж болох нэмэлт аргументууд:error_tolerance - Огноог тодорхойлох боломжгүй оруулгуудын эзлэх хувийн зөвшөөрөгдөх хэмжээ (өгөгдмөл нь 0.1 эсвэл 10%)error_tolerance - Огноог тодорхойлох боломжгүй оруулгуудын эзлэх хувийн зөвшөөрөгдөх хэмжээ (өгөгдмөл нь 0.1 эсвэл 10%)last_date - сүүлчийн хүчинтэй огноо (өгөгдмөл нь одоогийн огноо)last_date - сүүлчийн хүчинтэй огноо (өгөгдмөл нь одоогийн огноо)first_date - эхний хүчинтэй огноо. Өгөгдмөл нь last_date-ээс тавин жилийн өмнөх огноо.first_date - эхний хүчинтэй огноо. Өгөгдмөл нь last_date-ээс тавин жилийн өмнөх огноо.","code":"\nlinelist::guess_dates(c(\"03 Jan 2018\",\n                        \"07/03/1982\",\n                        \"08/20/85\"))## [1] \"2018-01-03\" \"1982-03-07\" \"1985-08-20\"# guess_dates-г date_onset багана дээр ашигласан жишээ\nlinelist <- linelist %>%                 # linelist датасет\n  mutate(\n    date_onset = linelist::guess_dates(  # \"linelist\" багцын guess_dates() функц\n      date_onset,\n      error_tolerance = 0.1,\n      first_date = \"2016-01-01\"\n    )"},{"path":"огноотой-ажиллах-нь.html","id":"date-time-ангитай-ажиллах","chapter":"9 Огноотой ажиллах нь","heading":"9.6 date-time ангитай ажиллах","text":"Өмнө дурьдсанчлан, R нь огноо болон цагийн мэдээллийг агуулсан datetime ангийг дэмждэг. Date ангийн нэгэн адил эдгээрийг ихэвчлэн тэмдэгтийн объектоос datetime объект руу хөрвүүлэх шаардлагатай болдог.","code":""},{"path":"огноотой-ажиллах-нь.html","id":"цаг-агуулсан-огноог-хөрвүүлэх","chapter":"9 Огноотой ажиллах нь","heading":"Цаг агуулсан огноог хөрвүүлэх","text":"Стандарт datetime объект нь эхлээд огноогоор форматлагдсан бөгөөд дараа нь цагийн бүрэлдэхүүн хэсэг орно - жишээлбэл 2020 оны 1-р сарын 01, 16:30. Огнооны нэгэн адил үүнийг форматлах олон арга байдаг бөгөөд мөн олон түвшний нарийвчлал (цаг, минут, секунд) байдаг.Аз болоход эдгээр стрингүүдийг datetime объект руу хөрвүүлэх lubridate-ийн туслах функцууд бас байдаг. Эдгээр функцууд нь төгсгөлд нь _h (зөвхөн цаг), _hm (цаг, минут) эсвэл _hms (цаг, минут, секунд) нэмж хавсаргасан огнооны туслах функцүүдийн өргөтгөлүүд юм (жишээ нь, dmy_hms()). Эдгээрийг дараах байдлаар ашиглаж болно:Зөвхөн цаг агуулсан огноо, цагийг datetime объект руу хөрвүүлэхЦаг, минут агуулсан огноо, цагийг datetime объект руу хөрвүүлэхЦаг, минут, секунд агуулсан огноо, цагийг datetime объект руу хөрвүүлэхТа цагийн бүсийг өгч болно, гэхдээ үүнийг ашигладаггүй. Цагийн бүсийн талаар энэ бүлгийн сүүл хэсгийг үзнэ үү.Датафрэймтэй ажиллахдаа stringr багцын str_glue() функц ба тохирох lubridate функцийг ашиглан цаг, огнооны баганыг нэгтгэн datetime багана үүсгэж болно. stringr багцын талаарх дэлгэрэнгүй мэдээллийг \\[Тэмдэгтүүд болон стрингүүд\\] хуудаснаас үзнэ үү.Энэ жишээнд linelist датафрэйм нь “цаг:минут” формат бүхий баганатай байна. Үүнийг datetime болгон хөрвүүлэхийн тулд бид хэд хэдэн алхмуудыг дагана:Тухайн баганын голч утга ашиглан хоосон утгыг дүүргэсэн эмнэлэгт хэвтэлтийн “цэвэр” цагийн багана үүсгэнэ. lubridate багц хоосон утгууд дээр ажиллахгүй тул бид үүнийг хийж буй юм. Үүнийг date_hospitalisation баганатай нэгтгээд ymd_hm() функцийг ашиглан хөрвүүлнэ.","code":"\nymd_h(\"2020-01-01 16hrs\")## [1] \"2020-01-01 16:00:00 UTC\"\nymd_h(\"2020-01-01 4PM\")## [1] \"2020-01-01 04:00:00 UTC\"\ndmy_hm(\"01 January 2020 16:20\")## [1] \"2020-01-01 16:20:00 UTC\"\nmdy_hms(\"01 January 2020, 16:20:40\")## [1] \"2020-01-20 16:20:40 UTC\"\nmdy_hms(\"01 January 2020, 16:20:40 PST\")## [1] \"2020-01-20 16:20:40 UTC\"# багцууд\npacman::p_load(tidyverse, lubridate, stringr)\n\n# time_admission багана нь цаг:минут бүхий форматтай\nlinelist <- linelist %>%\n  \n  # эмнэлэгт хэвтэлтийн цаг байхгүй тохиолдолд хэвтэлтийн голч хугацааг онооно\n  mutate(\n    time_admission_clean = ifelse(\n      is.na(time_admission),         # цаг хоосон байгаа үед\n      median(time_admission),        # голч утгыг онооно\n      time_admission                 # хоосон биш байвал хэвээр үлдээнэ\n  ) %>%\n  \n    # str_glue() ашиглан огноо, цагийн багануудыг нэгтгэж нэг тэмдэгт багана үүсгэнэ \n    # дараа нь ymd_hm()-г ашиглан datetime руу хөрвүүлнэ\n  mutate(\n    date_time_of_admission = str_glue(\"{date_hospitalisation} {time_admission_clean}\") %>% \n      ymd_hm()\n  )"},{"path":"огноотой-ажиллах-нь.html","id":"зөвхөн-цагийг-хөрвүүлэх","chapter":"9 Огноотой ажиллах нь","heading":"Зөвхөн цагийг хөрвүүлэх","text":"Хэрэв таны датанд зөвхөн хугацаа (цаг, минут) тэмдэгт байдлаар агуулагдаж байвал та base R-ын strptime()-г ашиглан тэдгээрийг цаг болгон хувиргаж, өөрчлөх боломжтой. Жишээлбэл, эдгээр хоёр цагийн зөрүүг олж авахын тулд:Гэхдээ огнооны утгыг заагаагүй бол огноог өнөөдөр гэж тооцдог гэдгийг анхаарна уу. stringr багцыг ашиглан стринг огноо болон стринг цагийг хэрхэн нэгтгэх талаар дээрх хэсгээс харна уу. strptime()-ийн талаар эндээс уншина уу.Нэг оронтой тоог хоёр оронтой тоонд хөрвүүлэхийн тулд (жишээ нь, 2 оронтой болохын тулд цаг эсвэл минутын урд тэг оруулж дэвсэх) “Тэмдэгтүүд болон стрингүүд” хуудасны “Дэвсэх урт” хэсгийг үзнэ үү.","code":"\n# тэмдэгт ангийн цагууд\ntime1 <- \"13:45\" \ntime2 <- \"15:20\"\n\n# Цагуудыг datetime анги руу хөрвүүлнэ\ntime1_clean <- strptime(time1, format = \"%H:%M\")\ntime2_clean <- strptime(time2, format = \"%H:%M\")\n\n# Ялгаа нь \"difftime\" анги бөгөөд энд тоон цаг руу хөрвүүлж байна \nas.numeric(time2_clean - time1_clean)   # цагийн зөрүү## [1] 1.583333"},{"path":"огноотой-ажиллах-нь.html","id":"цагийг-гаргаж-авах","chapter":"9 Огноотой ажиллах нь","heading":"Цагийг гаргаж авах","text":"Та lubridate багцын hour(), minute(), second() функцүүдийг ашиглан цагийн элементүүдийг гаргаж авч болно.Цагийг гаргаж аваад өдрийн нэг хэсгээр нь ангилах жишээ энд байна. Бид “HH:MM” форматтай Тэмдэгт ангийн time_admission баганаас эхэлнэ. Нэгдүгээрт, тэмдэгтүүдийг datetime анги руу хөрвүүлэхийн тулд дээр дурдсанчлан strptime() ашигладаг. Дараа нь цагийг hour() функцээр гаргаж авахад 0-24 хүртэлх тооны аль нэг гарч ирнэ. Эцэст нь, эмнэлэгт хэвтсэн цагийг логик мэдэгдлүүд ашиглан case_when() функцын тусламжтайгаар Өглөө/Үдээс/Орой/Шөнө гэж ангилсан time_period хэмээх шинэ багана үүсгэж байна.case_when() функцын талаар илүү ихийг мэдэхийг хүсвэл \\[Дата цэвэрлэх болон үндсэн функцууд\\] хуудаснаас үзнэ үү.","code":"\nlinelist <- linelist %>%\n  mutate(hour_admit = hour(strptime(time_admission, format = \"%H:%M\"))) %>%\n  mutate(time_period = case_when(\n    hour_admit > 06 & hour_admit < 12 ~ \"Morning\",\n    hour_admit >= 12 & hour_admit < 17 ~ \"Afternoon\",\n    hour_admit >= 17 & hour_admit < 21 ~ \"Evening\",\n    hour_admit >=21 | hour_admit <= 6 ~ \"Night\"))"},{"path":"огноотой-ажиллах-нь.html","id":"огноотой-ажиллах","chapter":"9 Огноотой ажиллах нь","heading":"9.7 Огноотой ажиллах","text":"lubridate багцыг date/datetime багануудын хэсгийг гаргаж авах, огноон дээр арифметик хийх, огнооны интервалыг тооцоолох зэрэг олон төрлийн функцэд ашиглаж болно.Энд бид жишээнүүдэд ашиглах огноог тодорхойллоо:","code":"\n# Date ангийн объект үүсгэх\nexample_date <- ymd(\"2020-03-01\")"},{"path":"огноотой-ажиллах-нь.html","id":"огнооны-бүрэлдэхүүн-хэсгүүдийг-гаргаж-авах","chapter":"9 Огноотой ажиллах нь","heading":"Огнооны бүрэлдэхүүн хэсгүүдийг гаргаж авах","text":"Та сар, өдөр, ажлын өдөр гэх мэт нийтлэг талуудыг гаргаж авч болно:Та мөн datetime объект эсвэл баганаас цагийн бүрэлдэхүүн хэсгүүдийг гаргаж авах боломжтой. Хэрэв та эмнэлэгт хэвтсэн цагийн тархалтыг харахыг хүсвэл энэ нь хэрэг болно.Долоо хоногуудыг харах хэд хэдэн сонголт байдаг. Доорх Эпидемиологийн долоо хоногийн хэсгийг үзнэ үү.Хэрэв та огноог тодорхой байдлаар харуулахыг хүсч байгаа бол (жишээ нь “2020 оны 1-р сар” эсвэл “3-р сары 20-ны Пүрэв гараг” эсвэл “1977 оны 20-р долоо хоног”) үүнийг Огноо харуулах хэсэгт тайлбарласны дагуу илүү уян хатан байдлаар хийж болно.","code":"\nmonth(example_date)  # сарын дугаар## [1] 3\nday(example_date)    # сарын өдөр (дугаар)## [1] 1\nwday(example_date)   # долоо хоногийн өдрийн дугаар (1-7)## [1] 1\nexample_datetime <- ymd_hm(\"2020-03-01 14:45\")\n\nhour(example_datetime)     # цаг гаргаж авах\nminute(example_datetime)   # минут гаргаж авах\nsecond(example_datetime)   # секунд гаргаж авах"},{"path":"огноотой-ажиллах-нь.html","id":"огнооны-математик","chapter":"9 Огноотой ажиллах нь","heading":"Огнооны математик","text":"Та lubridate багцаас тус тусын функцийг ашиглан тодорхой тооны өдөр, долоо хоног нэмж болно.","code":"\n# энэхүү огноо руу 3 өдөр нэмэх\nexample_date + days(3)## [1] \"2020-03-04\"\n# энэ огноо дээр 7 долоо хоног нэмж, хоёр өдрийг хас\nexample_date + weeks(7) - days(2)## [1] \"2020-04-17\""},{"path":"огноотой-ажиллах-нь.html","id":"огнооны-интервал","chapter":"9 Огноотой ажиллах нь","heading":"Огнооны интервал","text":"Огноо хоорондын зөрүүг дараах байдлаар тооцоолж болно:Хоёр огноо нь хоёулаа date анги мөн эсэхийг шалганаХоёр огноо нь хоёулаа date анги мөн эсэхийг шалганаХоёр огнооны хоорондох “difftime” зөрүүг гаргахын тулд хасаж болноХоёр огнооны хоорондох “difftime” зөрүүг гаргахын тулд хасаж болноШаардлагатай бол дараагийн математик тооцооллыг хийхийн тулд гарсан үр дүнг тоон анги руу хөрвүүлнэШаардлагатай бол дараагийн математик тооцооллыг хийхийн тулд гарсан үр дүнг тоон анги руу хөрвүүлнэДоор хоёр огнооны хоорондох интервалыг тооцон харуулж байна. Огноо ангийн утгууд дээр “хасах” тэмдгийг ашиглан интервалыг олох боломжтой. Гэсэн хэдий ч буцаасан утгын анги нь доор үзүүлсэн шиг “difftime” бөгөөд тоон хэлбэрт хөрвүүлэх ёстой гэдгийг анхаарна уу.“Dfftime” дээр дараагийн үйлдлүүдийг хийхийн тулд үүнийг .numeric() ашиглан тоон хэлбэрт хөрвүүлнэ.Дата ажиллах үед энэ бүгдийг нэгтгэж болно - жишээлбэл:Датафрэймтэй ажиллах үед тодорхой мөр дээр дээрх огнооны аль нэг нь байхгүй бол тухайн мөрийн хувьд энэхүү үйл ажиллагаа амжилтгүй болно. Үүний үр дүнд тоон утгын оронд NA гарч ирнэ. Тиймээс энэ баганыг тооцоололд ашиглахдаа na.rm = аргументыг TRUE гэж тохируулахаа мартуузай. Жишээлбэл:","code":"\n# Жишээ огнооноос 2020 оны 2-р сарын 20-ны хоорондох зайг ол \noutput <- example_date - ymd(\"2020-02-20\")\noutput    # хэвлэ## Time difference of 10 days\nclass(output)## [1] \"difftime\"\npacman::p_load(lubridate, tidyverse)   # багцууд ачааллах\n\nlinelist <- linelist %>%\n  \n  # dmy форматыг зааж өгснөөр шинж тэмдэг эхэлсэн огноог тэмдэгтээс огноо болгон хувиргана \n  mutate(date_onset = dmy(date_onset),\n         date_hospitalisation = dmy(date_hospitalisation)) %>%\n  \n  # Гуравдугаар сард шинж тэмдэг нь эхлээгүй бүх тохиолдлыг шүүж хасна\n  filter(month(date_onset) == 3) %>%\n    \n  # шинж тэмдэг эхэлсэн ба эмнэлэгт хэвтсэн өдрүүдийн хоорондох зөрүүг ол\n  mutate(days_onset_to_hosp = date_hospitalisation - date_of_onset)\n# Дата байгаа бүх тохиолдлын хувьд эмнэлэгт хэвтэх хоногийн голч утгыг тооцоол\nmedian(linelist_delay$days_onset_to_hosp, na.rm = T)"},{"path":"огноотой-ажиллах-нь.html","id":"огноо-харуулах","chapter":"9 Огноотой ажиллах нь","heading":"9.8 Огноо харуулах","text":"Огноог зөв ангид хөрвүүлсний дараа та тэдгээрийг зарим тохиолдолд өөрөөр жишээлбэл “2018-01-05”-ны оронд “1-р сарын 05-ны Даваа” гэж харуулахыг хүсдэг. Та мөн харагдаж буй огнооны элементүүдээр мөрүүдийг бүлэглэхийн тулд харагдах байдлыг өөрчлөх хэрэгтэй болж магадгүй - жишээлбэл сар жилээр бүлэглэх.","code":""},{"path":"огноотой-ажиллах-нь.html","id":"format","chapter":"9 Огноотой ажиллах нь","heading":"format()","text":"base R-ын format() функцээр огнооны харагдах байдлыг тохируулж болно. Энэ функц нь “%” strptime товчлол (.Date()-д ашигласантай ижил синтакс) бүхий хүсэж буй форматыг зааж өгсөн тэмдэгтийн стрингийг (ишлэлд) хүлээн авдаг. Хамгийн түгээмэл товчлолуудыг доор харуулав.Тэмдэглэл: format()-ыг ашигласнаар утгуудыг Тэмдэгт анги руу хөрвүүлэх тул үүнийг ерөнхийдөө дүн шинжилгээний төгсгөлд эсвэл зөвхөн харуулах зорилгоор ашигладаг! Та ?strptime-г ажиллуулснаар бүрэн жагсаалтыг харах боломжтой.%d = Сарын өдрийн дугаар (5, 17, 28 гэх мэт)\n%j = Жилийн өдрийн дугаар (Жулиан өдөр 001-366)\n%= Товчилсон ажлын өдөр (Mon, Tue, Wed гэх мэт)\n%= Бүтэн ажлын өдөр (Monday, Tuesday гэх мэт)%w = Ажлын өдрийн дугаар (0-6, Ням гараг 0)\n%u = Ажлын өдрийн дугаар (1-7, Даваа гараг 1)\n%W = Долоо хоногийн дугаар (00-53, Даваа гараг долоо хоногийн эхлэл)\n%U = Долоо хоногийн дугаар (01-53, Ням гараг долоо хоногийн эхлэл)\n%m = Сарын дугаар (жишээ нь 01, 02, 03, 04)\n%b = Товчилсон сар (Jan, Feb гэх мэт)\n%B = Бүтэн сар (January, February гэх мэт)\n%y = 2-оронтой жил (жишээ нь 89)\n%Y = 4-оронтой жил (жишээ нь 1989)\n%h = цаг (24 цагийн цаг)\n%m = минут\n%s = секунд%z = GMT-ээс офсет\n%Z = Цагийн бүс (тэмдэгт)Өнөөдрийн огноог форматлах жишээ:Хэрэв str_glue() ашиглаж байгаа бол давхар ишлэл ” дотор зөвхөн ганц ишлэл ’ (дээрх шиг) ашиглах ёстойг анхаарна уу.","code":"\n# форматтай өнөөдрийн огноо\nformat(Sys.Date(), format = \"%d %B %Y\")## [1] \"05 Нэгд?гээр сар 2022\"\n# огноо, цагийг бүрэн авах хялбар арга (өгөгдмөл формат)\ndate()## [1] \"Wed Jan 05 18:16:53 2022\"\n# str_glue() функцийг ашиглан форматласан нэгтгэсэн огноо, цаг, цагийн бүс\nstr_glue(\"{format(Sys.Date(), format = '%A, %B %d %Y, %z  %Z, ')}{format(Sys.time(), format = '%H:%M:%S')}\")## лхагва, Нэгд?гээр сар 05 2022, +0000  UTC, 18:16:53\n# Долоо хоногуудыг харуулах форматыг ашиглах\nformat(Sys.Date(), \"%Y Week %W\")## [1] \"2022 Week 01\""},{"path":"огноотой-ажиллах-нь.html","id":"сар-жил","chapter":"9 Огноотой ажиллах нь","heading":"Сар-жил","text":"Огноо баганыг Сар-жил формат руу хөрвүүлэхийн тулд zoo багцаас .yearmon() функцийг ашиглахыг зөвлөж байна. Энэ нь огноог “yearmon” анги руу хувиргаж, зохих дарааллыг хадгална. Үүнтэй харьцуулахад, format(column, \"%Y %B\") ашиглавал Тэмдэгт анги руу хөрвүүлэх ба утгуудыг цагаан толгойн дарааллаар (буруу) дараалуулна.Доор, date_onset баганаас .yearmon() функцийг ашиглан yearmonth шинэ багана үүсгэсэн байна. Үр дүнгийн утгуудын анхдагч (зөв) дарааллыг хүснэгтэд үзүүлэв.Үүнтэй харьцуулахад, та зөвхөн format()-ыг ашигласнаар хэрхэн хүссэн харагдах байдлын форматтай болж буй боловч зөв дараалалгүй болохыг харж болно.Тэмдэглэл: Хэрэв та ggplot() дээр ажиллаж байгаа бөгөөд зөвхөн огноог хэрхэн харуулахыг тохируулахыг хүсвэл scale_x_date() функцийн date_labels = аргументад strptime формат оруулахад хангалттай. Жишээ нь та \"%b %Y\" эсвэл \"%Y %b\" ашиглаж болно. \\[ggplot зөвлөмж\\] хуудсыг үзнэ үү.zoo нь мөн .yearqtr() функцийг санал болгодог бөгөөд та ggplot() ашиглахдаа scale_x_yearmon()-г ашиглаж болно.","code":"\n# шинэ багана үүсгэх\ntest_zoo <- linelist %>% \n     mutate(yearmonth = zoo::as.yearmon(date_onset))\n\n# хүснэгт хэвлэх\ntable(test_zoo$yearmon)## \n##  4-р сар 2014  5-р сар 2014  6-р сар 2014  7-р сар 2014  8-р сар 2014 \n##             7            64           100           226           528 \n##  9-р сар 2014 10-р сар 2014 11-р сар 2014 12-р сар 2014  1-р сар 2015 \n##          1070          1112           763           562           431 \n##  2-р сар 2015  3-р сар 2015  4-р сар 2015 \n##           306           277           186\n# шинэ багана үүсгэх\ntest_format <- linelist %>% \n     mutate(yearmonth = format(date_onset, \"%b %Y\"))\n\n# хүснэгт хэвлэх\ntable(test_format$yearmon)## \n##  1-р сар 2015 10-р сар 2014 11-р сар 2014 12-р сар 2014  2-р сар 2015 \n##           431          1112           763           562           306 \n##  3-р сар 2015  4-р сар 2014  4-р сар 2015  5-р сар 2014  6-р сар 2014 \n##           277             7           186            64           100 \n##  7-р сар 2014  8-р сар 2014  9-р сар 2014 \n##           226           528          1070"},{"path":"огноотой-ажиллах-нь.html","id":"dates_epi_wks","chapter":"9 Огноотой ажиллах нь","heading":"9.9 Эпидемиологийн долоо хоног","text":"","code":""},{"path":"огноотой-ажиллах-нь.html","id":"lubridate-1","chapter":"9 Огноотой ажиллах нь","heading":"lubridate","text":"Датаг огноогоор нь бүлэглэх илүү өргөн хүрээний жишээнүүдийг \\[Дата бүлэглэх\\] хуудаснаас үзнэ үү. Доор бид өгөгдлийг долоо хоногоор бүлэглэх талаар товч тайлбарлав.Бид ерөнхийдөө lubridate-ын floor_date() функцийг unit = \"week\" аргументын хамт ашиглахыг зөвлөж байна. Энэ нь week_start = аргументаар тодорхойлогдсоны дагуу огноог долоо хоногийн “эхлэл” хүртэл доош нь бүхэлддэг. Долоо хоногийн өгөгдмөл эхлэл нь 1 (Даваа гаригт) гэхдээ та долоо хоногийн аль ч өдрийг эхлэл гэж зааж өгч болно (жишээ нь, Ням гарагт 7). floor_date() нь олон талтай бөгөөд unit = аргументыг “second”, “minute”, “hour”, “day”, “month” эсвэл “year” болгон тохируулснаар төрөл бүрийн хугацааны нэгж рүү бүхэлдэхэд ашиглаж болно.Буцаасан утга нь Date анги бүхий долоо хоногийн эхлэх огноо юм. Date анги нь ggplot()-д амархан танигдаж, зөв ​​эрэмбэлэгддэг тул дата зураглахад тун хэрэгтэй байдаг.Хэрэв та зөвхөн график дотор огноог долоо хоногоор харуулахыг сонирхож байгаа бол энэ хуудасны Огноо харуулах хэсгийг үзнэ үү. Жишээлбэл, тархварзүйн муруйг зурахдаа та хүссэн strptime “%” товчлолоо өгснөөр огнооны харагдах байдлыг форматлаж болно. Жишээ нь, “%Y-%W” эсвэл “%Y-%U”-г ашиглан жил, долоо хоногийн дугаарыг буцаана (Даваа эсвэл Ням гарагийн долоо хоногийн эхлэлүүд тус бүрт).","code":""},{"path":"огноотой-ажиллах-нь.html","id":"долоо-хоног-тутмын-тоо","chapter":"9 Огноотой ажиллах нь","heading":"Долоо хоног тутмын тоо","text":"count(), group_by() болон summarise() ашиглан дата бүлэглэх талаар дэлгэрэнгүй тайлбарыг \\[Дата бүлэглэх\\] хуудаснаас үзнэ үү. Товч жишээг доор харуулав.Шинэ “week” баганыг floor_date()-ыг unit = \"week\" аргументын хамт mutate() ашиглан үүсгэнэ.Шинэ “week” баганыг floor_date()-ыг unit = \"week\" аргументын хамт mutate() ашиглан үүсгэнэ.count() функцээр долоо хоног тутмын мөрийн (тохиолдлын) тоог авна; хоосон огноотой тохиолдлуудыг шүүн хаснаcount() функцээр долоо хоног тутмын мөрийн (тохиолдлын) тоог авна; хоосон огноотой тохиолдлуудыг шүүн хаснаБүх долоо хоногууд мөр/тохиолдолгүй байсан ч гэсэн датанд гарч ирэхийг баталгаажуулахын тулд tidyr багцын complete() функцийг ашиглан дуусгана. Анхдагч байдлаар аливаа “шинэ” мөрүүдийн тоон утгууд нь NA байна, гэхдээ та тэдгээрийг нэрлэсэн лист хүлээж авдаг fill = аргументын тусламжтайгаар 0 болгож болно (доор, n нь тооны баганын нэр).Бүх долоо хоногууд мөр/тохиолдолгүй байсан ч гэсэн датанд гарч ирэхийг баталгаажуулахын тулд tidyr багцын complete() функцийг ашиглан дуусгана. Анхдагч байдлаар аливаа “шинэ” мөрүүдийн тоон утгууд нь NA байна, гэхдээ та тэдгээрийг нэрлэсэн лист хүлээж авдаг fill = аргументын тусламжтайгаар 0 болгож болно (доор, n нь тооны баганын нэр).Энд шинээр үүссэн датафрэймийн эхний мөрүүд байна:","code":"\n# Долоо хоног тутмын тохиолдлын тооны нэгдсэн датасет үүсгэх\nweekly_counts <- linelist %>% \n  drop_na(date_onset) %>%             # хоосон шинж тэмдэг эхэлсэн огноо бүхий тохиолдлуудыг хасах\n  mutate(weekly_cases = floor_date(   #  шинж тэмдэг эхэлсэн долоо хоног хэмээх шинэ багана үүсгэх\n    date_onset,\n    unit = \"week\")) %>%            \n  count(weekly_cases) %>%           # датаг долоо хоногоор бүлэглэж, бүлэг бүрт мөр тоолох ('n' багана үүсгэх) \n  tidyr::complete(                  # тохиолдол бүртгэгдээгүй байсан ч гэсэн бүх долоо хоногууд байгааг хангах\n    weekly_cases = seq.Date(          # \"weekly_cases\" баганыг бүрэн дараалал болгон дахин тодорхойлох\n      from = min(weekly_cases),       # хамгийн бага огнооноос\n      to = max(weekly_cases),         # хамгийн дээд огноо хүртэл\n      by = \"week\"),                   # 7 хоногоор\n    fill = list(n = 0))             # n тооны баганад NA-г 0-ээр бөглөх"},{"path":"огноотой-ажиллах-нь.html","id":"epiweek-хувилбарууд","chapter":"9 Огноотой ажиллах нь","heading":"Epiweek хувилбарууд","text":"lubridate нь мөн week(), epiweek(), isoweek() гэсэн тус бүр нь бага зэрэг өөр эхлэх огноо болон бусад нюансууд бүхий функцуудтай болно. Гэхдээ ихэнх тохиолдолд floor_date() нь танд хэрэг болох ганц функц байдаг. Эдгээр функцүүдийн дэлгэрэнгүйг консол руу ?week гэж оруулснаар эсвэл эндээс баримт бичгийг уншина уу.Та эпидемиологийн долоо хоногийг тогтоохын тулд aweek багцыг мөн ашиглаж болно. Та энэ талаар RECON вэбсайтаас илүү ихийг уншиж болно. Энэ нь date2week() болон week2date() функцтэй бөгөөд долоо хоногийн эхлэх өдрийг week_start = \"Monday\" аргументээр тохируулах боломжтой. Хэрэв та “долоо хоног” маягийн гаралтыг (жишээ нь “2020-W12”) авахыг хүсвэл энэ багц хамгийн хялбар юм. aweek багцын өөр нэг давуу тал нь date2week()-г огнооны баганад хэрэглэх үед буцаасан багана (долоо хоногийн формат) автоматаар Фактор анги болон тухайн хугацааны бүх долоо хоногийн түвшнийг багтаадаг (ингэснээр дээр үзүүлсэн complete() функцын нэмэлт алхамаас зайлсхийдэг). Гэсэн хэдий ч aweek багцад огноог сар, жил гэх мэт бусад цагийн нэгж рүү бүхэлдэх функц байхгүй.“Долоо хоног” форматыг (“2020 W12”) харуулахад тохиромжтой цаг хугацааны цувралын өөр нэг хувилбар бол \\[Цагийн цуваа ба дэгдэлт илрүүлэх\\] хуудсанд үзүүлсэн шиг tsibble багцын yearweek() функц юм.","code":""},{"path":"огноотой-ажиллах-нь.html","id":"огнооцагийн-бүсийг-хөрвүүлэх","chapter":"9 Огноотой ажиллах нь","heading":"9.10 Огноо/цагийн бүсийг хөрвүүлэх","text":"Өөр өөр цагийн бүсийн дата байгаа үед энэ датаг нэгдсэн цагийн бүсэд оруулан стандартчилах нь ихэвчлэн чухал байдаг. Ихэнх тохиолдолд датаны цагийн бүсийн бүрэлдэхүүн хэсгийг гараар кодлох шаардлагатай байдаг тул энэ нь нэмэлт бэрхшээл учруулдаг.R-д datetime объект бүр цагийн бүсийн бүрэлдэхүүнтэй байна. Бүх огнооны объектууд нь өгөгдмөл байдлаар ашиглаж буй компьютерийн орон нутгийн цагийн бүсийг агуулдаг бөгөөд цагийн бүсүүд ихэвчлэн зуны цагаар өөрчлөгддөг тул энэ нь ерөнхийдөө нэрлэсэн цагийн бүсээс илүү тухайн байршилд зориулагдсан байдаг. Огнооны баганыг харуулсан үйл явдлыг тодорхой цаг хугацаанд хамааруулах боломжгүй тул огнооны цагийн бүрэлдэхүүн хэсэггүйгээр цагийн бүсийг үнэн зөвөөр нөхөх боломжгүй бөгөөд тийм учир цагаар хэмжигдэх хугацааны шилжилтийг үндэслэлтэй тооцож чаддаггүй.Цагийн бүстэй харьцахын тулд lubridate-д хэд хэдэн туслах функцууд байдаг бөгөөд эдгээрийг огнооны объектын цагийн бүсийг орон нутгийн цагийн бүсээс өөр цагийн бүс болгон өөрчлөхөд ашиглаж болно. Datetime объектод tz өгөгдлийн сангийн хүчинтэй цагийн бүсийг өгөх замаар цагийн бүсийг тохируулдаг. Эдгээрийн жагсаалтыг доорх линкээс олж болно - хэрэв таны ашиглаж байгаа байршил энэ жагсаалтад байхгүй бол цагийн бүсийн ойролцоох томоохон хотуудын цагийн бүсийг ашиглаж болно.https://en.wikipedia.org/wiki/List_of_tz_database_time_zonesЭнэ нь хийсвэр мэт санагдаж болох бөгөөд хэрэв хэрэглэгч өөр цагийн бүстэй датан дээр ажиллахгүй тохиолдолд ихэвчлэн шаардлагагүй байдаг.","code":"\n# баганад одоогийн цагийг оноох\ntime_now <- Sys.time()\ntime_now## [1] \"2022-01-05 18:16:54 +08\"\n# with_tz()-г ашиглан цагийг ӨӨРЧЛӨХИЙН зэрэгцээ баганад шинэ цагийн бүс оноох\ntime_london_real <- with_tz(time_now, \"Europe/London\")\n\n# force_tz()-г ашиглан цагийг хэвээр ХАДГАЛАХЫН зэрэгцээ баганад шинэ цагийн бүс оноох\ntime_london_local <- force_tz(time_now, \"Europe/London\")\n\n\n# Энэ кодыг ажиллуулахад ашигласан компьютерийг Лондонгийн цагаар тохируулаагүй тохиолдолд цагийн зөрүү (компьютерийн цагийн бүсээс Лондон хүртэлх цагийн зөрүү) байх болно гэдгийг анхаарна уу.\ntime_london_real - time_london_local## Time difference of -8 hours"},{"path":"огноотой-ажиллах-нь.html","id":"хоцрох-болон-түрүүлэх-тооцоолол","chapter":"9 Огноотой ажиллах нь","heading":"9.11 Хоцрох болон түрүүлэх тооцоолол","text":"lead() болон lag() нь dplyr багцын функцууд бөгөөд ихэвчлэн тоон эсвэл огнооны векторын өмнөх (хоцорсон) эсвэл дараагийн (түрүүлсэн) утгуудыг олоход тусалдаг. Энэ нь цаг хугацааны нэгж хоорондын өөрчлөлт/ялгааг тооцоолоход хэрэг болно.Та одоогийн болон өмнөх долоо хоногийн тохиолдлын зөрүүг тооцоолохыг хүсч байна гэж бодъё. Датаг доор үзүүлсэн шиг долоо хоног бүрийн тоогоор эхний байдлаар өгсөн байна.lag() эсвэл lead()-ийг ашиглах үед датафрэймийн мөрүүдийн дараалал нь маш чухал юм! - Таны огноо/тоо өсөх эсвэл буурах дараалалтай эсэхийг анхаарч үзээрэйЭхлээд өмнөх (хоцорсон) долоо хоногийн утгыг агуулсан шинэ багана үүсгэ.n = (сөрөг бус бүхэл тоо байх ёстой) аргумент ашиглан ухрах/урагшлах нэгжийн тоог тохируулнаn = (сөрөг бус бүхэл тоо байх ёстой) аргумент ашиглан ухрах/урагшлах нэгжийн тоог тохируулнаБайхгүй мөрүүдэд (жишээ нь, хоцорсон утга байх боломжгүй эхний мөр) байршуулсан утгыг тодорхойлохын тулд default = аргументыг ашиглана уу. Анхдагч байдлаар энэ нь NA байна.Байхгүй мөрүүдэд (жишээ нь, хоцорсон утга байх боломжгүй эхний мөр) байршуулсан утгыг тодорхойлохын тулд default = аргументыг ашиглана уу. Анхдагч байдлаар энэ нь NA байна.Хэрэв датаны мөрүүд таны лавлах баганаар эрэмбэлэгдээгүй бол order_by = TRUE аргументыг ашиглана.Хэрэв датаны мөрүүд таны лавлах баганаар эрэмбэлэгдээгүй бол order_by = TRUE аргументыг ашиглана.Дараа нь хоёр тохиолдлын баганын ялгаа болох шинэ багана үүсгэ:Та lead() болон lag()-ын талаар эндээс эсвэл консол дээрээ ?lag гэж оруулснаар дэлгэрэнгүй уншиж болно.","code":"\ncounts <- counts %>% \n  mutate(cases_prev_wk = lag(cases_wk, n = 1))\ncounts <- counts %>% \n  mutate(cases_prev_wk = lag(cases_wk, n = 1),\n         case_diff = cases_wk - cases_prev_wk)"},{"path":"огноотой-ажиллах-нь.html","id":"нэмэлт-материалууд","chapter":"9 Огноотой ажиллах нь","heading":"9.12 Нэмэлт материалууд","text":"lubridate багцын tidyverse хуудасlubridate багцын RStudio cheatsheetR Data Science номын огноо, цагийн тухай хэсэгОнлайн хичээл Огнооны форматууд","code":""},{"path":"карактер-ба-стрингс.html","id":"карактер-ба-стрингс","chapter":"10 Карактер ба стрингс","heading":"10 Карактер ба стрингс","text":"Энэхүү хэсэгт карактер болон стрингс утгыг (залгаа карактерүүд) stringr багц ашиглаж шалгаж, янзлах талаар үзэх болно (“strings”).Нэгтгэх, эрэмбэлэх,хуваах, дараалал солих - str_c(), str_glue(), str_order(), str_split()Нэгтгэх, эрэмбэлэх,хуваах, дараалал солих - str_c(), str_glue(), str_order(), str_split()Цэвэрлэх болон жигдрүүлэх\nУртыг тохируул - str_pad(), str_trunc(), str_wrap()\nҮсэгний том жижигийг өөрчлөх - str_to_upper(), str_to_title(), str_to_lower(), str_to_sentence()\nЦэвэрлэх болон жигдрүүлэхУртыг тохируул - str_pad(), str_trunc(), str_wrap()Үсэгний том жижигийг өөрчлөх - str_to_upper(), str_to_title(), str_to_lower(), str_to_sentence()Байрлалыг тогтоож, орлуулах - str_length(), str_sub(), word()Байрлалыг тогтоож, орлуулах - str_length(), str_sub(), word()Бүтэц, хэв маяг\nИлрүүлж, байрлалыг олох - str_detect(), str_subset(), str_match(), str_extract()\nХувиргаж, солих - str_sub(), str_replace_all()\nБүтэц, хэв маягИлрүүлж, байрлалыг олох - str_detect(), str_subset(), str_match(), str_extract()Хувиргаж, солих - str_sub(), str_replace_all()Regular expressions (“regex”)Regular expressions (“regex”)Тайлбарлахад хялбар болгохын тулд ихэнх жишээг карактерийн богино векторууд дээр харуулсан. Гэсэн хэдий ч эдгээр жишээг хүснэгт, баганад дээр хэрэгжүүлэх боломжтой юм.Энэхүү хэсгийг боловсруулахад stringr vignette дэх материалаас их ашигласан.","code":""},{"path":"карактер-ба-стрингс.html","id":"бэлтгэл-1","chapter":"10 Карактер ба стрингс","heading":"10.1 Бэлтгэл","text":"","code":""},{"path":"карактер-ба-стрингс.html","id":"багцыг-ачааллах","chapter":"10 Карактер ба стрингс","heading":"Багцыг ачааллах","text":"stringr болон бусад tidyverse багцыг татаж авч, ачааллана.","code":"\n# Багцыг татаж ав/ачаалла\npacman::p_load(\n  stringr,    # стрингс дээр ажиллах функцуудын иж бүрдэл\n  tidyverse,  # дата янзлахад хэрэгтэй\n  tools)      # гарчигийг хувиргахад хэрэглэнэ"},{"path":"карактер-ба-стрингс.html","id":"дата-импортлох-2","chapter":"10 Карактер ба стрингс","heading":"Дата импортлох","text":"Энэ хэсгийн дасгалд Эболагийн дэгдэлтийг загварчилсан дата linelist -ын цэвэрлэгдсэн хэлбэрийг ашиглах болно. Дасгалуудыг дагаж хийхийг хүсвэл линк дээр дарж, “clean” гэсэн linelist дээр дарж татаж авна уу (.rds файл хэлбэрээр буй). Датаг импортлохдоо rio багцын import() функцыг хэрэглэ ( .xlsx, .csv, .rds зэрэг олон өргөтгөлтэй ажиллаж чаддаг - [Import export] хэсгээс нэмж уншна уу).linelist -ийн эхний 50 мөрийг дор харуулав.","code":"\n# case linelist -ийг импортло\nlinelist <- import(\"linelist_cleaned.rds\")"},{"path":"карактер-ба-стрингс.html","id":"нэгтгэх-хуваах-эрэмбэлэх","chapter":"10 Карактер ба стрингс","heading":"10.2 Нэгтгэх, хуваах, эрэмбэлэх","text":"Энэхүү хэсгийн агуулга:str_c(), str_glue(), unite() -аар стрингсийг нэгтгэхstr_order() стрингсийг эрэмбэлэн байрлуулахstr_split(), separate() стрингсийг хуваах","code":""},{"path":"карактер-ба-стрингс.html","id":"стрингсийг-нэгтгэх","chapter":"10 Карактер ба стрингс","heading":"Стрингсийг нэгтгэх","text":"Олон стрингсийг нэгтгэж, залгахдаа stringr -ийн str_c -ийг ашиглахыг зөвлөж байна. Хэрэв таны нэтгэх гэж буй карактерууд салангид утгууд бол тусдаа аргументууд болгон оруулж таслалаар зааглаж өгнө.Оруулж буй аргументуудын дунд зааглах тэмдэгтийг sep = ээр тохиуруулж болно (таслал, зай, шинэ мөр \"\\n\" гэх мэт)str_c() -д олон вектор аргумент оруулах үед collapse = аргумент хэрэг болнд. Ингэснээр үүсэх векторууд хоорондоо зааглагдсан нэг урт элемент болно.Доорхи жишээ хоёр векторыг (овог, нэр) хэрхэн нэг болгож нэгтгэхийг харуулсан. Мөн нутаг дэвсгэрийн нэр болон тохиолдлын тоог энэ мэтээр нэгтгэж бас болно. Жишээнд:sep = тэмдэгт нэр, овог болгоны дунд гарч ирнэcollapse = тэмдэгт хүн тус бүрийн дунд гарч ирнэТэмдэглэл: Хэрэв дээрхи шиг стрингсүүд хавсарч, шинэ мөр үүсгэн харуулах бол өгүүлбэрээ бүтнээр нь cat() хийснээр зөв хэвлэгдэж харагдна.","code":"\nstr_c(\"String1\", \"String2\", \"String3\")## [1] \"String1String2String3\"\nstr_c(\"String1\", \"String2\", \"String3\", sep = \", \")## [1] \"String1, String2, String3\"\nfirst_names <- c(\"abdul\", \"fahruk\", \"janice\") \nlast_names  <- c(\"hussein\", \"akinleye\", \"okeke\")\n\n# оруулсан аргумент болгоны дунд sep -ийн тэмдэг гарч ирж, элементү болгоны дунд collapse -ын тэмдэгт гарч ирж байна\nstr_c(first_names, last_names, sep = \" \", collapse = \";  \")## [1] \"abdul hussein;  fahruk akinleye;  janice okeke\"\n# шинэ мөрөнд зөв хэвлэхийн тулд өгүүлбэрээ бүтнээр нь cat()-д хийнэ үү\ncat(str_c(first_names, last_names, sep = \" \", collapse = \";\\n\"))## abdul hussein;\n## fahruk akinleye;\n## janice okeke"},{"path":"карактер-ба-стрингс.html","id":"динамик-стрингс","chapter":"10 Карактер ба стрингс","heading":"Динамик стрингс","text":"Стрингст динамик R код оруулах тохиолдолд str_glue() -ийг хэрэглэдэг. Графикт динамик тайлбар хийхэд энэ функцыг ашиглах нь их тохиромжтой. Үүнийг дор харуулав:Доторх бүх агуулга нь давхар хашилтад бичигднэ str_glue(\"\")Аливаа динамик код эсвэл урьдчилан тодорхойлсон утгуудыг {} хээтэй хаалтын доторх давхар хашилтын дотор байрлуулна. Нэг str_glue() коммандад олон хээтэй хаалт {} хийж болно.Хашилт ’’ -ыг тэмдэгтэн утганд оруулж харуулахын тулд дан хашилтыг давхар хашилтанд дотор оруулж бичнэ (жишээ болгож огноог хэрхэн бичихийг дор харуулсан)Зөвлөгөө: \\n шинэ мөр эхлүүлдэг болноЗөвлөгөө: огнооны харагдах байдлыг format() -аар тохируулж, Sys.Date() -аар одоогийн огноог харуулдаг.Графикт динамик тайлбар хийх жишээ:Мөн str_glue() -дотор стрингс дундаа хээтэй хаалтан дотор орлуулагч оруулаад, кодыг нь тусдаа str_glue() аргумент байдлаар араас нь бичиж болно (доор жишээнд харуулсан). Ингэж бичих нь урт текстийг уншихад ойлгомжтой болгож өгдөг.Дата хүснэгтээс гаргаж авахЗаримдаа хүснэгт доторх датаг гаргаад дарааллуулан өрж тавих шаардлага гардаг. Нутаг дэвсгэр, шинэ тохиолдол, нийт тохиолдлын талаарх мэдэгдллийг хүснэгтээс хэрхэн гаргаж авах талаар жишээг дор харуулав.Хүснэгтийн мөрөнд буй датаг str_glue_data() -аар гаргаж авдаг.Стрингсийг мөр дагуулж нэгтгэхХүснэгтийн багана дах утгыг “хуйлах” буюу олон мөрүүдийг нэгтгэж нэг мөрд багтаагаад доторх утгыг нь тусгаарлагчаар тусгаарлах шаардлагатай бол “rolling-” values хуудасны [De-duplication] хэсгийг уншна уу.Хүснэгтийг нэг шугаманд багтаахҮүсгэсэн текстээ str_c() -ээр нэг шугаманд багтаахдаа (хүснэгт, баганын нэрсийг зааж өгнө) sep = болон collapse = аргументийг нэмж тохируулна.pre-fix -ээр “Шинэ Тохиролдол:” гэсэн үгийг текстийнхээ өмнө автоматаар гардаг болгож болно. Ингэхдээ str_c() функц дотор оруулж бичнэ (“Шинэ Тохиолдол:” анхны str_c() дотор оруулчихвад олон дахин бичигдчихдэг.","code":"\nstr_glue(\"Data include {nrow(linelist)} cases and are current to {format(Sys.Date(), '%d %b %Y')}.\")## Data include 5888 cases and are current to 05 1-р сар 2022.\nstr_glue(\"Linelist as of {current_date}.\\nLast case hospitalized on {last_hospital}.\\n{n_missing_onset} cases are missing date of onset and not shown\",\n         current_date = format(Sys.Date(), '%d %b %Y'),\n         last_hospital = format(as.Date(max(linelist$date_hospitalisation, na.rm=T)), '%d %b %Y'),\n         n_missing_onset = nrow(linelist %>% filter(is.na(date_onset)))\n         )## Linelist as of 05 1-р сар 2022.\n## Last case hospitalized on 30 4-р сар 2015.\n## 256 cases are missing date of onset and not shown\n# тохиолдолдтой хүснэгт үүсгэ\ncase_table <- data.frame(\n  zone        = c(\"Zone 1\", \"Zone 2\", \"Zone 3\", \"Zone 4\", \"Zone 5\"),\n  new_cases   = c(3, 0, 7, 0, 15),\n  total_cases = c(40, 4, 25, 10, 103)\n  )\ncase_table %>% \n  str_glue_data(\"{zone}: {new_cases} ({total_cases} total cases)\")## Zone 1: 3 (40 total cases)\n## Zone 2: 0 (4 total cases)\n## Zone 3: 7 (25 total cases)\n## Zone 4: 0 (10 total cases)\n## Zone 5: 15 (103 total cases)\nstr_c(case_table$zone, case_table$new_cases, sep = \" = \", collapse = \";  \")## [1] \"Zone 1 = 3;  Zone 2 = 0;  Zone 3 = 7;  Zone 4 = 0;  Zone 5 = 15\"\nstr_c(\"New Cases: \", str_c(case_table$zone, case_table$new_cases, sep = \" = \", collapse = \";  \"))## [1] \"New Cases: Zone 1 = 3;  Zone 2 = 0;  Zone 3 = 7;  Zone 4 = 0;  Zone 5 = 15\""},{"path":"карактер-ба-стрингс.html","id":"str_unite","chapter":"10 Карактер ба стрингс","heading":"Баганыг нэтгэх","text":"Багануудын карактер утгыг tidyr-ын unite() функцээр нэгтгэдэг. Энэ нь separate() функцын эсрэг үйлдэл.Шинээр үүсгэх баганын нэрийг оруулаад, нэтгэх багануудын нэрийг оруулна.Нэтгэсэн багана дах утгын default тусгаарлагч нь доогуур зураас _. Үүнийг sep = аргументэд тохируулга өгснөөр өөрчилж болно.remove = Хүснэгтээс нэгтгэлд оруулсан багануудыг хасна (default -аар TRUE)na.rm = нэтгэж байх явцдаа дутуу утгыг хасна (default -аар FALSE)Эдгээрийг богино жишээгээр тайлбарлав:Жишээ хүснэгт:Доор жишээнд шинж тэмдэг бичсэн гурван баганыг нэгтгэв:","code":"\ndf <- data.frame(\n  case_ID = c(1:6),\n  symptoms  = c(\"jaundice, fever, chills\",     # 1-р өвчтөн\n                \"chills, aches, pains\",        # 2-р өвчтөн\n                \"fever\",                       # 3-р өвчтөн\n                \"vomiting, diarrhoea\",         # 4-р өвчтөн\n                \"bleeding from gums, fever\",   # 5-р өвчтөн\n                \"rapid pulse, headache\"),      # 6-р өвчтөн\n  outcome = c(\"Recover\", \"Death\", \"Death\", \"Recover\", \"Recover\", \"Recover\"))\ndf_split <- separate(df, symptoms, into = c(\"sym_1\", \"sym_2\", \"sym_3\"), extra = \"merge\")## Warning: Expected 3 pieces. Missing pieces filled with `NA` in 2 rows [3,\n## 4].\ndf_split %>% \n  unite(\n    col = \"all_symptoms\",         # Шинээр нэгтгэж үүсгэх баганын нэр\n    c(\"sym_1\", \"sym_2\", \"sym_3\"), # Нэтгэх баганууд\n    sep = \", \",                   # Нэтгэсэн баганад хэрэглэх тусгаарлагч\n    remove = TRUE,                # TRUE гэж өгснөөр нэгтгэлд оруулсан багануудыг хүснэгтээс хасах\n    na.rm = TRUE                  # TRUE гэж өгснөөр нэтгэх явцад дутуу утгууд хасагдна\n  )##   case_ID                all_symptoms outcome\n## 1       1     jaundice, fever, chills Recover\n## 2       2        chills, aches, pains   Death\n## 3       3                       fever   Death\n## 4       4         vomiting, diarrhoea Recover\n## 5       5 bleeding, from, gums, fever Recover\n## 6       6      rapid, pulse, headache Recover"},{"path":"карактер-ба-стрингс.html","id":"хуваах","chapter":"10 Карактер ба стрингс","heading":"Хуваах","text":"Ямар нэг хэв шинжид үндэслэн стрингсийг хуваах бол str_split()-ийг хэрэглэдэг. Энэ функц стрингсийг заасны дагуу шалгаж, хуваагаад шинээр хуваагдсан утгуудаас бүрдсэн карактер вектортой list -ийг үүсгэдэг.Доорхи энгийн жишээгээр нэг стрингсийг хэрхэн гурав хуваахыг харуулав. Хуваагдсан дата list хэлбэртэй үүсдэг ба анх өгөгдсөн стрингс тус бүрт нэг элэмент (карактер вектор) үүсгэсэн байдаг. Хэрэв simplify = TRUE гэж өгвөл карактер матрикс үүсгэдэг.Энэхүү жишээнд нэг стрингсийг str_split()-д өгөгдхөд нэг элементтэй list үүсч байна. Энэ элэмент гурван карактер утгаас бүртдсэн вектор байна.Үүссэн обьектийг хадгалчихвал цаашид дөрвөлжин хаалтыг ашиглан хүссэн n-дэх утгаа сугалж гаргах боломжтой болно. Ийм синтаксыг дараахь байдлаар бичдэг: the_returned_object[[1]][2] комманд эхний элементийн стрингс утгуудын хоёрдах утгыг гаргаж ирнэ (“fever”). [R basics] -ээс элэментэд орох гэсэн хэсгийг нэмж уншна уу.str_split() -д стрингсийг олноор нь өгч буй тохиолдолд үүсэх листний элэментийн тоо мөн олон болдог.“Карактер матрикс” үүсгэх шаардалгатай бол simplify = TRUE гэж тохируулна. Матрикс байгуулах нь цаашид багана бий болгоход хэрэгтэй байдаг.Мөн n = аргументээр хэдэн хэсэг болгож хуваахаа зааж өгч болно. Доорхи жишээнд хуваагдах тоог 2-оор хязгаарласан байна. Энэ заасан тооноос хойшхи таслалууд хоёр дах утганд хамрах болно.Тэмдэглэл -дээрхитэй ижил үр дүнг str_split_fixed() функцээр үйлдэж болно. Энэ функцэд simplify аргументийг өгөх шаардлагагүй харин баганын тоог заавал зааж өгөх шаардлагатай (n).","code":"\nstr_split(string = \"jaundice, fever, chills\",\n          pattern = \",\")## [[1]]\n## [1] \"jaundice\" \" fever\"   \" chills\"\npt1_symptoms <- str_split(\"jaundice, fever, chills\", \",\")\n\npt1_symptoms[[1]][2]  # list-ийн эхний элэментийн 2 дах утгыг гаргаж ирэх ## [1] \" fever\"\nsymptoms <- c(\"jaundice, fever, chills\",     # 1-р өвчтөн \n              \"chills, aches, pains\",        # 2-р өвчтөн\n              \"fever\",                       # 3-р өвчтөн\n              \"vomiting, diarrhoea\",         # 4-р өвчтөн\n              \"bleeding from gums, fever\",   # 5-р өвчтөн\n              \"rapid pulse, headache\")       # 6-р өвчтөн\n\nstr_split(symptoms, \",\")                     # өвчтөн болгоны шинж тэмдгийг хуваах## [[1]]\n## [1] \"jaundice\" \" fever\"   \" chills\" \n## \n## [[2]]\n## [1] \"chills\" \" aches\" \" pains\"\n## \n## [[3]]\n## [1] \"fever\"\n## \n## [[4]]\n## [1] \"vomiting\"   \" diarrhoea\"\n## \n## [[5]]\n## [1] \"bleeding from gums\" \" fever\"            \n## \n## [[6]]\n## [1] \"rapid pulse\" \" headache\"\nstr_split(symptoms, \",\", simplify = TRUE)##      [,1]                 [,2]         [,3]     \n## [1,] \"jaundice\"           \" fever\"     \" chills\"\n## [2,] \"chills\"             \" aches\"     \" pains\" \n## [3,] \"fever\"              \"\"           \"\"       \n## [4,] \"vomiting\"           \" diarrhoea\" \"\"       \n## [5,] \"bleeding from gums\" \" fever\"     \"\"       \n## [6,] \"rapid pulse\"        \" headache\"  \"\"\nstr_split(symptoms, \",\", simplify = TRUE, n = 2)##      [,1]                 [,2]            \n## [1,] \"jaundice\"           \" fever, chills\"\n## [2,] \"chills\"             \" aches, pains\" \n## [3,] \"fever\"              \"\"              \n## [4,] \"vomiting\"           \" diarrhoea\"    \n## [5,] \"bleeding from gums\" \" fever\"        \n## [6,] \"rapid pulse\"        \" headache\"\nstr_split_fixed(symptoms, \",\", n = 2)"},{"path":"карактер-ба-стрингс.html","id":"баганыг-хуваах","chapter":"10 Карактер ба стрингс","heading":"Баганыг хуваах","text":"Хүснэгтийн баганыг dplyr-ын separate()-ээр хуваавал илүү хялбар. Энэ функц карактер баганыг олон багана болгож хэсэглэн хуваадаг.Жишээ нь энгийн нэгэн хүснэгт df байна гэж бодьё ( unite section хэсэгт нэгтгэгдсэн). Үүнд case_ID, болон өвчний шинж тэмдэг (symptoms) болон эмчилгээний үр дүн тус тус бичсэн баганууд байв. Бид symptoms баганын утгыг задалж нэг шинж тэмдэг нэг багана болж задарсан олон баганууд үүсгэх хэрэгтэй болов.separate()хэрвээ pipe холбоосонд залгаатай бол эхлээд хуваагдах баганыг зааж өгнө. Үүний дөраа = аргументнд шинээр үүсгэх баганын нэрсийг вектор хэлбэрээр c( ) дотор оруулж бичнэ. Доор үзүүлсэн жишээнд харуулсан.sep = зааглагч, тэмдэгт эсвэл тоо байж болно (interpreted character position split )sep = зааглагч, тэмдэгт эсвэл тоо байж болно (interpreted character position split )remove = default нь FALSE, ашиглагдаж орсон баганыг устганаremove = default нь FALSE, ашиглагдаж орсон баганыг устганаconvert = default нь FALSE, карактер хэлбэрт буй “NA”-г NA -руу хувирганаconvert = default нь FALSE, карактер хэлбэрт буй “NA”-г NA -руу хувирганаextra = шинээр багана үүсгэсний дараа багана болж ороогүй утга илүү гарвал дараахь нөхцлүүдээр тохируулдаг.\nextra = \"warn\" анхааруулга гарч ирэх боловч илүү утгууд устгагдна (default)\nextra = \"drop\" анхааруулга гарч ирэхгүйгээр илүү утгууд устгагдна\nextra = \"merge\"-д зааж өгсөн баганын тоонд хуваах болно - гэхдээ бүх датаг хадгалж үлднэ\nextra = шинээр багана үүсгэсний дараа багана болж ороогүй утга илүү гарвал дараахь нөхцлүүдээр тохируулдаг.extra = \"warn\" анхааруулга гарч ирэх боловч илүү утгууд устгагдна (default)extra = \"drop\" анхааруулга гарч ирэхгүйгээр илүү утгууд устгагднаextra = \"merge\"-д зааж өгсөн баганын тоонд хуваах болно - гэхдээ бүх датаг хадгалж үлднэДоорхи жишээнд extra = \"merge\" -ийг хэрэглэхэд ямар ч дата устгагдаагүй байна. Хоёр шинэ багана үүссэн ба үүнээс илүү гарсан хэсэг нь хоёр дах баганадаа үлдсэн байна:default extra = \"drop\" used , warning given third symptoms lost:АНХААРУУЛГА: Хэрэв -д хангалттай тоог оруулахгүй бол дата тайрагдаж болохыг анхаар.","code":"\n# гурав дах шинж тэмдэг хоёр дах утганд нэгтгэгдсэн\ndf %>% \n  separate(symptoms, into = c(\"sym_1\", \"sym_2\"), sep=\",\", extra = \"merge\")## Warning: Expected 2 pieces. Missing pieces filled with `NA` in 1 rows [3].##   case_ID              sym_1          sym_2 outcome\n## 1       1           jaundice  fever, chills Recover\n## 2       2             chills   aches, pains   Death\n## 3       3              fever           <NA>   Death\n## 4       4           vomiting      diarrhoea Recover\n## 5       5 bleeding from gums          fever Recover\n## 6       6        rapid pulse       headache Recover\n# гуравдах шинж тэмдэг алдагдсан байна\ndf %>% \n  separate(symptoms, into = c(\"sym_1\", \"sym_2\"), sep=\",\")## Warning: Expected 2 pieces. Additional pieces discarded in 2 rows [1, 2].## Warning: Expected 2 pieces. Missing pieces filled with `NA` in 1 rows [3].##   case_ID              sym_1      sym_2 outcome\n## 1       1           jaundice      fever Recover\n## 2       2             chills      aches   Death\n## 3       3              fever       <NA>   Death\n## 4       4           vomiting  diarrhoea Recover\n## 5       5 bleeding from gums      fever Recover\n## 6       6        rapid pulse   headache Recover"},{"path":"карактер-ба-стрингс.html","id":"цагаан-толгойн-дарааллаар-эрэмбэлэх","chapter":"10 Карактер ба стрингс","heading":"Цагаан толгойн дарааллаар эрэмбэлэх","text":"Олон стрингсүүдийг цагаан толгойн дарааллаар эрэмбэлж болно. str_order() функц дарааллын дугаарыг үүсгэж, str_sort() дарааллаар нь эрэмбэлж байрлуулдаг.Өөр хэлний цагаан толгой хэрэглэх бол locale = аргументээр тохируулдаг. locale =-д орох жагсаалтыг R console-д stringi::stri_locale_list() гэж бичиж гаргаж ирнэ.","code":"\n# стрингс\nhealth_zones <- c(\"Alba\", \"Takota\", \"Delta\")\n\n# цагаан толгойгоор дарааллаар дугаарлана\nstr_order(health_zones)## [1] 1 3 2\n# цагаан толгойн дарааллаар эрэмбэлэн байрлуулна\nstr_sort(health_zones)## [1] \"Alba\"   \"Delta\"  \"Takota\""},{"path":"карактер-ба-стрингс.html","id":"base-r--ын-функцууд","chapter":"10 Карактер ба стрингс","heading":"base R -ын функцууд","text":"Векторуудыг бүхэлд нь карактерлуу хувиргаад, нэгтгэдэг paste(), paste0() гэсэн функцууд base R-т бий. Эдгээр нь str_c()-тэй төстэй боловч бичигдэх синтаксаараа арай өөр - хаалтан дотор, хэсэг тус бүрийн дунд таслал оруулах хэрэгтэй болдог. Эдгээр хэсгүүд нэг бол карактер текст (хашилтанд бичигдна) эсвэл тодорхой кодын обьектууд байна (хашилтгүй бичигднэ). Жишээ нь:sep = болон collapse = аргументыг тохируулж болно. paste() бол sep = \" \" гэсэн аргументтэй paste0() (зай авахгүй) гэсэн үг .","code":"\nn_beds <- 10\nn_masks <- 20\n\npaste0(\"Regional hospital needs \", n_beds, \" beds and \", n_masks, \" masks.\")## [1] \"Regional hospital needs 10 beds and 20 masks.\""},{"path":"карактер-ба-стрингс.html","id":"цэвэрлэх-болон-жигдрүүлэх","chapter":"10 Карактер ба стрингс","heading":"10.3 Цэвэрлэх болон жигдрүүлэх","text":"","code":""},{"path":"карактер-ба-стрингс.html","id":"үсгийн-том-жижигийг-өөрчлөх","chapter":"10 Карактер ба стрингс","heading":"Үсгийн том жижигийг өөрчлөх","text":"Стрингс дата янзалж байхад үсгийн том жижигийг тохируулах шаадрдлага их гардаг. Ийм стрингсүүдийн жишээнд нутаг дэвсгэрийн нэрс ордог. Үүнд stringr-ын str_to_upper(), str_to_lower(), str_to_title() нарыг дор жишээнд харуулсан шиг хэрэглэнэ.Мөн *base** R-ын toupper(), tolower()-аар адил үр дүнд хүрч болно.Гарчигны үсгийн том жижигБүх үгсийн эхний үсгийг томоор бичих бол str_to_title()-ийг хэрэглэнэ:tools багцын toTitleCase() -ыг хэрэглэвэл дээрх үйлдлийг арай боловсронгуй гүйцэтгэдэг (“”, “”, “” зэрэг зарим туслах үгс том болж хувирахгүй).str_to_sentence() -ээр стрингийн зөвхөн эхний үсгийг том болгоход хэрэглэнэ.","code":"\nstr_to_upper(\"California\")## [1] \"CALIFORNIA\"\nstr_to_lower(\"California\")## [1] \"california\"\nstr_to_title(\"go to the US state of california \")## [1] \"Go To The Us State Of California \"\ntools::toTitleCase(\"This is the US state of california\")## [1] \"This is the US State of California\"\nstr_to_sentence(\"the patient must be transported\")## [1] \"The patient must be transported\""},{"path":"карактер-ба-стрингс.html","id":"str_pad","chapter":"10 Карактер ба стрингс","heading":"Уртыг тааруулах","text":"Стрингст доод уртын хэмжээг хэд байхыг зааж өгч болох ба үүнийг str_pad() -аар гүйцэтгэнэ. Уртыг заасан хэмжээнд хүргэхийн тулд нэмдэг default тэмдэгт нь хоосон зай (space) боловч pad = аргументэд үүнийг сольж өгч болно.Доорхи жишээнд 0 -оор эхэлдэг (минут цаг гэх мэт) тоон утгуудыг дор хаяж 2 оронтой байлгахын тулд урд талдаа pad = \"0\" -гэж тохируулсан.","code":"\n# өөр өөр урттай ICD  кодын стрингсүүд\nICD_codes <- c(\"R10.13\",\n               \"R10.819\",\n               \"R17\")\n\n# ICD кодын баруун талд 7 карактер нэмж стрингсүүдийн уртыг тэнцүүлнэ\nstr_pad(ICD_codes, 7, \"right\")## [1] \"R10.13 \" \"R10.819\" \"R17    \"\n# зай авахын оронд цэг нэм\nstr_pad(ICD_codes, 7, \"right\", pad = \".\")## [1] \"R10.13.\" \"R10.819\" \"R17....\"\n# 2 орон болтол нь урд нь 0-ыг нэмнэ (цаг/минут)\nstr_pad(\"4\", 2, pad = \"0\") ## [1] \"04\"\n# \"цаг\" гэсэн тоон багана нэм\n# hours <- str_pad(hours, 2, pad = \"0\")"},{"path":"карактер-ба-стрингс.html","id":"огтлох","chapter":"10 Карактер ба стрингс","heading":"Огтлох","text":"str_trunc() -ээр стрингсийн дээд уртыг зааж өгнө. Хэрэв стрингс энэнээс урт бол огтлогддог (богиносно). Гэхдээ анхны утга урт байсныг сануулж эллипсис буюу гурван цэг (…) ард нь нэмж өгдөг. Гурван цэг нь өөрөө уртад тоологдох болохыг анхаар. Гурван цэгийн оронд өөр тэмдэг оруулахдаа ellipsis = аргументийг ашиглана. side = аргументээр гурван цэг огтлогдсон стрингсийн аль талд байрлахыг зааж өгнө (“зүүн”, “баруун”, “төв”).","code":"\noriginal <- \"Symptom onset on 4/3/2020 with vomiting\"\nstr_trunc(original, 10, \"center\")## [1] \"Symp...ing\""},{"path":"карактер-ба-стрингс.html","id":"уртыг-жигдрүүлэх","chapter":"10 Карактер ба стрингс","heading":"Уртыг жигдрүүлэх","text":"Уртын дээд хэмжээг str_trunc() -аар зааж өгдөг бол хэт богино стрингсийг str_pad()-аар заасан цэг хүртэл сунгаж болдог. Доорх жишээнд уртын дээд хэмжээг 6 гэж заасан (ингэснээр нэг утга огтлогдсон). Үүний дараа их богино хэмжээтэй нэг стрингс байгааг 6 болгож уртасгасан.","code":"\n# Өөр урттай бичигдсэн ICD код\nICD_codes   <- c(\"R10.13\",\n                 \"R10.819\",\n                 \"R17\")\n\n# уртын дээд хязгаарыг 6 болгох\nICD_codes_2 <- str_trunc(ICD_codes, 6)\nICD_codes_2## [1] \"R10.13\" \"R10...\" \"R17\"\n# доод хязгаарыг 6 болгож уртасга\nICD_codes_3 <- str_pad(ICD_codes_2, 6, \"right\")\nICD_codes_3## [1] \"R10.13\" \"R10...\" \"R17   \""},{"path":"карактер-ба-стрингс.html","id":"илүү-гарсан-хоосон-зайг-арилгах","chapter":"10 Карактер ба стрингс","heading":"Илүү гарсан хоосон зайг арилгах","text":"Стрингc утганд нэмэлт хоосон зай, шинэ мөр (\\n), таб (\\t) зэрэг илүүдлээр орсон бол эдгээрийг str_trim() - ээр тайрч болно. Тайрах талын байрлалыг \"right\" \"left\", \"\" гэж зааж өгч болно ( жишээ нь str_trim(x, \"right\").","code":"\n# ID дугааруудын баруун талд илүү зай байна\nIDs <- c(\"provA_1852  \", # 2 орон илүү зай\n         \"provA_2345\",   # илүү зай байхгүй\n         \"provA_9460 \")  # 1 орон илүү зай \n\n# ID дугаартай стрингсийн зөвхөн баруун талын илүү зайг тайрах\nstr_trim(IDs)## [1] \"provA_1852\" \"provA_2345\" \"provA_9460\""},{"path":"карактер-ба-стрингс.html","id":"давтагдсан-хоосон-зайг-арилгах","chapter":"10 Карактер ба стрингс","heading":"Давтагдсан хоосон зайг арилгах","text":"Стрингсийн завсар хоосон зай давтагдсан бол str_squish()-ээр үүнийг янзалж болно. Давхар хоосон зай нэг хоосон зай болдог. Стрингсийн хажуугийн хоосон зай, шинэ мөр, таб -ыг str_trim() -ээр янзалж болно.Эдгээр функцын талаарх нэмэлт мэдээллийг R console -д ?str_trim, ?str_pad гэсэн комманд уншуулж авна уу.","code":"\n# Эх текстийн завсарт хэт их зай авсагдсан байна\nstr_squish(\"  Pt requires   IV saline\\n\") ## [1] \"Pt requires IV saline\""},{"path":"карактер-ба-стрингс.html","id":"параграф-болгож-нэгтгэх","chapter":"10 Карактер ба стрингс","heading":"Параграф болгож нэгтгэх","text":"Ямар ч бүтэц, хэвгүй үргэлжилсэн текстийг нэтгэж, бүтэцжүүлж, мөрийн уртыг зааж өгөн параграф хэвлбэрт оруулах бол str_wrap() -ыг хэрэглэ. Мөрний хэр урт байхыг зааж өгснөөр текст дундуур мөрүүд алгоритмын дагуу бий болж параграф хэлбэрт орно (жишээ дор харуулсан).Дээрх коммандын үр дүнг хэвлэх бол base -ын cat() -д функц дотор коммандаа уншуулна уу.","code":"\npt_course <- \"Symptom onset 1/4/2020 vomiting chills fever. Pt saw traditional healer in home village on 2/4/2020. On 5/4/2020 pt symptoms worsened and was admitted to Lumta clinic. Sample was taken and pt was transported to regional hospital on 6/4/2020. Pt died at regional hospital on 7/4/2020.\"\n\nstr_wrap(pt_course, 40)## [1] \"Symptom onset 1/4/2020 vomiting chills\\nfever. Pt saw traditional healer in\\nhome village on 2/4/2020. On 5/4/2020\\npt symptoms worsened and was admitted\\nto Lumta clinic. Sample was taken and pt\\nwas transported to regional hospital on\\n6/4/2020. Pt died at regional hospital\\non 7/4/2020.\"\ncat(str_wrap(pt_course, 40))## Symptom onset 1/4/2020 vomiting chills\n## fever. Pt saw traditional healer in\n## home village on 2/4/2020. On 5/4/2020\n## pt symptoms worsened and was admitted\n## to Lumta clinic. Sample was taken and pt\n## was transported to regional hospital on\n## 6/4/2020. Pt died at regional hospital\n## on 7/4/2020."},{"path":"карактер-ба-стрингс.html","id":"байрлалаар-нь-янзлах","chapter":"10 Карактер ба стрингс","heading":"10.4 Байрлалаар нь янзлах","text":"","code":""},{"path":"карактер-ба-стрингс.html","id":"карактерийг-байрлалаар-гаргаж-ирэх","chapter":"10 Карактер ба стрингс","heading":"Карактерийг байрлалаар гаргаж ирэх","text":"Стрингсийг хэсэглэж гаргаж авах шаардлагтай үед str_sub() -ийг хэрэглэдэг. Энэхүү функц гурван үндсэн аргумент авдаг:карактер вектор(-ууд)эхлэх байрлалдуусах байрлалБайрлалын дугаарлах талаар:Хэрэв байрлал эерэг бол стрингсийн зүүн үзүүрээс эхэлж тоологдсон гэсэн үгХэрэв байрлал сөрөг бол стрингсийн баруун үзүүрээс эхэлж тоологдсон гэсэн үгБайрлалын дугаар нь нээлттэй (inclusive)Стрингсээс гадуур байрлал огтлогддог (устгагдна).Дор “pneumonia” гэсэн стрингсийг жишээ болгож үзүүлэв:","code":"\n# зүүн талын үзүүрээс тоолж гуравдах орноос эхэлж гурав дах орон дээр дуусна (зүүн талаас гурав дах үсэг)\nstr_sub(\"pneumonia\", 3, 3)## [1] \"e\"\n# 0 гэсэн байрлал байхгүй \nstr_sub(\"pneumonia\", 0, 0)## [1] \"\"\n# зүүн талаас 6 даха орноос баруун талаас 1 дэх хүртэл\nstr_sub(\"pneumonia\", 6, -1)## [1] \"onia\"\n# баруун талаас 5 дахаас орноос баруун талаас 2 дах хүртэл \nstr_sub(\"pneumonia\", -5, -2)## [1] \"moni\"\n# зүүн талаасаа 4 дэх орноос стрингсийн гадна давж гартал\nstr_sub(\"pneumonia\", 4, 15)## [1] \"umonia\""},{"path":"карактер-ба-стрингс.html","id":"үгийн-байрлалаар-гаргаж-ирэх","chapter":"10 Карактер ба стрингс","heading":"Үгийн байрлалаар гаргаж ирэх","text":"Стрингсээс n-дүгээр ‘үгийг’ гаргаж авахдаа мөн stringr-ийн word()функцыг хэрэглэдэг. Эхлээд шүүлт хийх стрингсээ оруулна. Үүнээс тасалж авах хэсгийн эхлэх үгийн байрлал, төгсгөл үгийн байрлалыг зааж өгнө.Үүссэн стрингст үг хоорондын завсар орох default тэмдэгт нь хоосон зай боловч sep = -д үүнийг сольж болно (жишээ нь sep = \"_\" доогуур зураасыг оруулахаар зааж өгч болно).","code":"\n# Шүүлт хийх стрингс\nchief_complaints <- c(\"I just got out of the hospital 2 days ago, but still can barely breathe.\",\n                      \"My stomach hurts\",\n                      \"Severe ear pain\")\n\n# Стрингс тус бүрийн 1 дэхээс 3д ах үгийг гаргаж ирэх\nword(chief_complaints, start = 1, end = 3, sep = \" \")## [1] \"I just got\"       \"My stomach hurts\" \"Severe ear pain\""},{"path":"карактер-ба-стрингс.html","id":"карактерийн-байрлалаар-орлуулах","chapter":"10 Карактер ба стрингс","heading":"Карактерийн байрлалаар орлуулах","text":"Стрингсийн нэг хэсэгт өөрчлөлт оруулах шаардлагтай бол str_sub() болон (<-) оноогч операторыг хамтарч хэрэглэнэ.Дээрхи жишээг стрингсийн векторт хэрэглэж үзье (эсвэл багана). “HIV”-ийн хэмжээ уртасч байгааг анзаарна уу.","code":"\nword <- \"pneumonia\"\n\n# 3,4 дүгээр карактерийг X -ээр орлуул\nstr_sub(word, 3, 4) <- \"XX\"\n\n# Хэвлэ\nword## [1] \"pnXXmonia\"\nwords <- c(\"pneumonia\", \"tubercolosis\", \"HIV\")\n\n# 3,4 дүгээр карактерийг X -ээр орлуул\nstr_sub(words, 3, 4) <- \"XX\"\n\nwords## [1] \"pnXXmonia\"    \"tuXXrcolosis\" \"HIXX\""},{"path":"карактер-ба-стрингс.html","id":"уртыг-шалга","chapter":"10 Карактер ба стрингс","heading":"Уртыг шалга","text":"base R-ын nchar() -ыг бас хэрэглэж болно.","code":"\nstr_length(\"abc\")## [1] 3"},{"path":"карактер-ба-стрингс.html","id":"хэв-маяг","chapter":"10 Карактер ба стрингс","heading":"10.5 Хэв маяг","text":"Аливаа хэв маягт тааруулан илрүүлэх, байрлуулах, гаргаж авах, тааруулах, орлуулах, хуваах үйлдлйиг хийдэг функцууд stringr багцад буй .","code":""},{"path":"карактер-ба-стрингс.html","id":"хэв-маягийг-илрүүлэх","chapter":"10 Карактер ба стрингс","heading":"Хэв маягийг илрүүлэх","text":"Стрингс доторх аливаа хэв маягийг str_detect() -ээр хайж, илрүүлдэг. Эхлээд шүүлт явуулах стрингс эсвэл вектороо оруулаад (string =), дараа нь хайж буй хэв маягийг зааж өгнө (pattern =). Default -аар үсгийн том жижиг хамаатай !Хэрэв negate = аргументийг нэмж TRUE гэж тохируулбал тухайн заасан хэв маяг БАЙХГҮЙ эсэхийг шалгадаг.Хэрэв үсгийн том жижигийг хамаарахгүй болгохын тулд хайлт хийх хэв маягаа regex() функцэд оруулаад regex() дотор ignore_case = TRUE гэсэн тохиргоо хийдэг (эсвэл T гэж товчилж болно).Карактер вектор эсвэл хүснэгтийн баганад str_detect() функцыг уншуулбал TRUE эсвэл FALSE гэсэн логик утгатай вектор үүснэ.Үүнийг sum() -ын дотор оруулж нийт хэдэн TRUE- байгааг тоолж болно.Олон янзын хэв маяг хайх бол тэдгээгийг жагсаан ЭСВЭЛ (|) тэмдэгтээр тусгаарлаж бичээд pattern = аргументэд дор харуулсан шиг бичнэ:Хайлт хийх хэв маягийн жагсаалт их урт тохиолдолд эхлээд str_c() болон sep = |-ийг хавсарч хэрэглээд, карактер гэдгийг нь зааж өгвөл цаашид хайлтаа арай товч болгож болно. Доорх жишээнд эрүүл мэндийн ажилтнуудын тэргүүн шугаманд ажилладаг мэргэжлийн нэрсээр хайлт хийж байна.Дараах коммандыг уншуулснаар occupations бүртгэлд дээрх жагсаалттай (occupation_med_frontline) тохирсон мэргэжлүүд хэд байгааг харуулна:Base R -ын стрингс хайх функцуудbase -ын функц болох grepl() нь str_detect() -тэй төстэй үйлдэлтэй. Энэ функц таарсан бүтцийг хайж логик вектор үүсгэдэг. Үндсэн синтакс нь grepl(бүтэц, хайх_стрингс, ignore.case = FALSE, ...). Давуу тал нь ignore.case аргументийг бичихэд хялбар ( regex() функцтэй хавсарч хэрэглэх шаардлагагүй).Мөн base -ын функц болох sub(), gsub() нар нь str_replace()-тэй төстэй үйлдэлтэй. Үндсэн синтакс нь: gsub(бүтэц, орлуулалт, хайх_стрингс, ignore.case = FALSE). sub() функц уншуулахад өгөгдсөн хэв маягт таарсан эхний тохиолдлыг орлуулдаг бол gsub() функцыг уншуулахад өгөгдсөн бүтэцтэй таарсан бүх тохиолдлуудыг орлуулна.","code":"\nstr_detect(string = \"primary school teacher\", pattern = \"teach\")## [1] TRUE\nstr_detect(string = \"primary school teacher\", pattern = \"teach\", negate = TRUE)## [1] FALSE\nstr_detect(string = \"Teacher\", pattern = regex(\"teach\", ignore_case = T))## [1] TRUE\n# мэргэжил бүртгэсэн вектор/хүснэгтийн багана\noccupations <- c(\"field laborer\",\n                 \"university professor\",\n                 \"primary school teacher & tutor\",\n                 \"tutor\",\n                 \"nurse at regional hospital\",\n                 \"lineworker at Amberdeen Fish Factory\",\n                 \"physican\",\n                 \"cardiologist\",\n                 \"office worker\",\n                 \"food service\")\n\n# стрингс тус бүрт \"teach\" гэсэн хэв маяг/үг байгаа эсэхийг шалгаж үр дүнг TRUE/FALSE-оор харуулна\nstr_detect(occupations, \"teach\")##  [1] FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\nsum(str_detect(occupations, \"teach\"))## [1] 1\nsum(str_detect(string = occupations, pattern = \"teach|professor|tutor\"))## [1] 3\n# олон янзын хэв маягийг хайх\noccupation_med_frontline <- str_c(\"medical\", \"medicine\", \"hcw\", \"healthcare\", \"home care\", \"home health\",\n                                \"surgeon\", \"doctor\", \"doc\", \"physician\", \"surgery\", \"peds\", \"pediatrician\",\n                               \"intensivist\", \"cardiologist\", \"coroner\", \"nurse\", \"nursing\", \"rn\", \"lpn\",\n                               \"cna\", \"pa\", \"physician assistant\", \"mental health\",\n                               \"emergency department technician\", \"resp therapist\", \"respiratory\",\n                                \"phlebotomist\", \"pharmacy\", \"pharmacist\", \"hospital\", \"snf\", \"rehabilitation\",\n                               \"rehab\", \"activity\", \"elderly\", \"subacute\", \"sub acute\",\n                                \"clinic\", \"post acute\", \"therapist\", \"extended care\",\n                                \"dental\", \"dential\", \"dentist\", sep = \"|\")\n\noccupation_med_frontline## [1] \"medical|medicine|hcw|healthcare|home care|home health|surgeon|doctor|doc|physician|surgery|peds|pediatrician|intensivist|cardiologist|coroner|nurse|nursing|rn|lpn|cna|pa|physician assistant|mental health|emergency department technician|resp therapist|respiratory|phlebotomist|pharmacy|pharmacist|hospital|snf|rehabilitation|rehab|activity|elderly|subacute|sub acute|clinic|post acute|therapist|extended care|dental|dential|dentist\"\nsum(str_detect(string = occupations, pattern = occupation_med_frontline))## [1] 2"},{"path":"карактер-ба-стрингс.html","id":"таслалыг-цэгээр-солих","chapter":"10 Карактер ба стрингс","heading":"Таслалыг цэгээр солих","text":"Тоон векторуудад буй таслалуудыг gsub() ашиглаж цэгээр хэрхэн солихыг харуулав. Ингэж цэгээр солих үйлдлйиг АНУ, Их Британийн бус гаралтай датанд их хийдэг.Доорх жишээнд эхлээд дотор талд буй gsub() нь lengths баганыг уншиж, үүнд агуулагдаж бүх цэгийг “” (зайгүй хоосон) болгож хувиргаж байна. Ингэхдээ “.” гэсэн тэмдэгтийг алгасахын тулд хоёр ташуу зураас оруулж өгнө. Учир нь regex -т “.” нь “бүх тэмдэгт” ( “character”)-ийг илэрхийлдэг. Үүссэн (зөвхөн таслалтай) үр дүн гаднах gsub() -д уншигдах ба ингэснээр бүх таслалууд цэг болж хувирна.","code":"\nlengths <- c(\"2.454,56\", \"1,2\", \"6.096,5\")\n\nas.numeric(gsub(pattern = \",\",                # бүх таслалыг  \n                replacement = \".\",            # цэгээр солих\n                x = gsub(\"\\\\.\", \"\", lengths)  # цэг агуулсан бусад векторуудыг арилгах (цэг ())\n                )\n           )                                  # үр дүнг тоон утга болго"},{"path":"карактер-ба-стрингс.html","id":"бүгдийг-зэрэг-солих","chapter":"10 Карактер ба стрингс","heading":"Бүгдийг зэрэг солих","text":"str_replace_all() -ыг “олоод ёоль” гэсэн үйлдэл хийхэд ашигладаг. Эхлээд шүүлт хийх стрингсээ string =-нд, хайлт хийх бүтцээ pattern =-нд, сольж тавих утгаа replacement =-нд тус тус зааж өгнө. Доорхи жишээгээр бүх “dead” гэсэн утгыг “deceased” болгож солих болно. Үсгийн том жижиг хамаатай болохыг анхаарна уу.Тэмдэглэл:Аливаа хэв маягийг NA-аар солиход str_replace_na() функцыг хэрэглэдэг.str_replace() функц шалгагдаж буй стрингс тус бүрийн зөвхөн эхний тохиолдлыг л сольдог.","code":"\noutcome <- c(\"Karl: dead\",\n            \"Samantha: dead\",\n            \"Marco: not dead\")\n\nstr_replace_all(string = outcome, pattern = \"dead\", replacement = \"deceased\")## [1] \"Karl: deceased\"      \"Samantha: deceased\"  \"Marco: not deceased\""},{"path":"карактер-ба-стрингс.html","id":"логик-дотор-илрүүлэх","chapter":"10 Карактер ба стрингс","heading":"Логик дотор илрүүлэх","text":"case_when() доторstr_detect() -ийг (dplyr-ын) case_when()-ын дотор хэрэглэх нь их. Жишээнд linelist -д occupations хэмээх баганыг авч үзье. Энэхүү баганад логик нөхцлийг case_when() -ээр оруулж, үүнийгээ mutate() дотор оруулсгнаар is_educator гэсэн шинэ багана үүсгэж байна. case_when()-ийн талаар дата цэвэрлэгээг тайлбарласан хэсгээс лавшруулж уншиж болно.Оруулахгүй хэв маягийг логик нөхцөлд зааж өгч болно (negate = F):","code":"\ndf <- df %>% \n  mutate(is_educator = case_when(\n    # occupation дотор хийгдэж буй хайлтад үсгийн жижиг том хамаагүй\n    str_detect(occupations,\n               regex(\"teach|prof|tutor|university\",\n                     ignore_case = TRUE))              ~ \"Educator\",\n    # бусад бүх\n    TRUE                                               ~ \"Not an educator\"))df <- df %>% \n  # шинээр үүсгэсэн is_educator багана дах утгыг логик нөхцлөөр үүсгэсэн \n  mutate(is_educator = case_when(\n    \n    # occupation баганын утга хоёр шалгуурт нийцэж байж \"Educator\" баганын утга болж чадна:\n    # it must have a search term AND NOT any exclusion term\n    \n    # Хайлт хийх хэв маягууд\n    str_detect(occupations,\n               regex(\"teach|prof|tutor|university\", ignore_case = T)) &              \n    \n    # AND must NOT have an exclusion term\n    str_detect(occupations,\n               regex(\"admin\", ignore_case = T),\n               negate = TRUE                        ~ \"Educator\"\n    \n    # Дээрх шалгуурт нийцэхгүй бусад бүх нөхцлүүд\n    TRUE                                            ~ \"Not an educator\"))"},{"path":"карактер-ба-стрингс.html","id":"хэв-маягийн-байрлалыг-тогтоох","chapter":"10 Карактер ба стрингс","heading":"Хэв маягийн байрлалыг тогтоох","text":"Хайлт хийж буй хэв маягийн эхний байрлалыг тогтоохын тулд str_locate()-ыг хэрэглэ. Эхлэл болон төгсгөл хэсгээр нь хайдаг.Бусад str функцын адил дээрх функцэд хэв маяг таарч буй бүх тохиолдлуудыг (стрингс тус бүрээс) гаргаж ирдэг “_all” хувилбар (str_locate_all()) бас байна. Үүний хайлтын үр дүн list -ээр үүсдэг.","code":"\nstr_locate(\"I wish\", \"sh\")##      start end\n## [1,]     5   6\nphrases <- c(\"I wish\", \"I hope\", \"he hopes\", \"He hopes\")\n\nstr_locate(phrases, \"h\" )     # Хайлт хийж буй хэв маягтай тохирох *эхний* тохиолдлыг олох##      start end\n## [1,]     6   6\n## [2,]     3   3\n## [3,]     1   1\n## [4,]     4   4\nstr_locate_all(phrases, \"h\" ) # Хайлт хийх хэв маягтай тохирсон *бүх* тохиолдлыг олох## [[1]]\n##      start end\n## [1,]     6   6\n## \n## [[2]]\n##      start end\n## [1,]     3   3\n## \n## [[3]]\n##      start end\n## [1,]     1   1\n## [2,]     4   4\n## \n## [[4]]\n##      start end\n## [1,]     4   4"},{"path":"карактер-ба-стрингс.html","id":"хэв-маягийг-тааруулж-сугалж-гаргах","chapter":"10 Карактер ба стрингс","heading":"Хэв маягийг тааруулж сугалж гаргах","text":"Олон хэв маягийг зэрэг ЭСВЭЛ (|) нөхцөлтэйгээр зэрэг хайж буй үед str_extract_all() -ийг хэрэглэснээр тохирох хэв маягууд тэр хэвээрээ гарч ирдэг давуу талтай. Жишээ нь occupations гэсэн стрингс векторт (дээр бичигдсэн табд буй) “teach”, “prof”, “tutor” гэсэн хэв маяг/үгийн аль нэгийг хайя.Энэ үед str_extract_all() функ стрингс бүрийн таарсан хэв маяг/үгсийг ялгаж цуглуулсан list үүсдэг. Доорх жишээнд бичсэн 3 мэргэжлийн 2 бүтэц occupations датанд таарч байна.str_extract() функц стрингс тус бүрийн зөвхөн эхний таарсан хэв маяг/үгийг гаргаж ирдэг. Ингэснээр стрингс тус бүрт нэг элэменттэй карактер вектор үүсдэг. Тохироо таараагүй утгуудад NA үүсдэг. Үүссэн векторыг na.exclude()-д оруулснаар NA-г арилгаж болно. occupation 3-ын хоёрдах тохироо харагдахгүй байгааг анзаарна уу.","code":"\nstr_extract_all(occupations, \"teach|prof|tutor\")## [[1]]\n## character(0)\n## \n## [[2]]\n## [1] \"prof\"\n## \n## [[3]]\n## [1] \"teach\" \"tutor\"\n## \n## [[4]]\n## [1] \"tutor\"\n## \n## [[5]]\n## character(0)\n## \n## [[6]]\n## character(0)\n## \n## [[7]]\n## character(0)\n## \n## [[8]]\n## character(0)\n## \n## [[9]]\n## character(0)\n## \n## [[10]]\n## character(0)\nstr_extract(occupations, \"teach|prof|tutor\")##  [1] NA      \"prof\"  \"teach\" \"tutor\" NA      NA      NA      NA      NA     \n## [10] NA"},{"path":"карактер-ба-стрингс.html","id":"хэсэгчлэх-ба-тоолох","chapter":"10 Карактер ба стрингс","heading":"Хэсэгчлэх ба тоолох","text":"Эдгээр үйлдлийг str_subset(), str_count() гүйцэтгэдэг.Аливаа хэв маягийг str_subset() -ээр хайснаар таарсан хэв маягийг агуулж буй утга анхны хэлбэрээр гарч ирдэг.str_count() -ээр тоон вектор үүсдэг: шалгагдсан утга бүрт хайгдаж буй хэв маяг хэдэн ширхэг байгаа нь гарч ирдэг.","code":"\nstr_subset(occupations, \"teach|prof|tutor\")## [1] \"university professor\"           \"primary school teacher & tutor\"\n## [3] \"tutor\"\nstr_count(occupations, regex(\"teach|prof|tutor\", ignore_case = TRUE))##  [1] 0 1 2 1 0 0 0 0 0 0"},{"path":"карактер-ба-стрингс.html","id":"regex-ийн-группууд","chapter":"10 Карактер ба стрингс","heading":"Regex-ийн группууд","text":"ХИЙГДЭЖ БУЙ","code":""},{"path":"карактер-ба-стрингс.html","id":"өвөрмөц-карактерүүд","chapter":"10 Карактер ба стрингс","heading":"10.6 Өвөрмөц карактерүүд","text":"Арагшаа ташуу зураас \\ бол “алгасах тэмдэг”Арагшаа ташуу зураасыг \\ арынх нь карактер утгыг “алгасах” зориулалтаар хэрэглэдэг. Тиймээс арагшаа ташуу зураасыг хашилтан доторх хашилттай хамт хэрэглэдэг (\"\\\"\") - дундах хашилт хоёр захын хашилтуудыг эвдлэхгүй.Тэмдэглэл - хэрэв арагшаа ташуу зураасыг хэвлэх бол, дахин нэг арагшаа ташуу зураас бичих шаардлагатай болдог. Өөрөөр хэлбэл нэг арагшаа ташуу зураас бичихийн тулд хоёр ташуу зураастай код бичнэ (\\\\).Өвөрмөц карактерүүдЭдгээр өвөрмөц карактерүүдийн бүрэн жагсаалтыг R Console -д ?\"'\" гэж уншуулж гаргаж ирнэ ( RStudio -ын Help цонхонд харагдна).","code":""},{"path":"карактер-ба-стрингс.html","id":"regular-expressions-regex","chapter":"10 Карактер ба стрингс","heading":"10.7 Regular expressions (regex)","text":"","code":""},{"path":"карактер-ба-стрингс.html","id":"regex-болон-өвөрмөц-карактерүүд","chapter":"10 Карактер ба стрингс","heading":"10.8 Regex болон өвөрмөц карактерүүд","text":"Regular expressions, буюу “regex” бол стрингсийн доторх хэв маяг, бүтцийг дүрсэлж хураангуйлсан хэл юм. Regular expressions-ыг сайн мэдэхгүй хүнд харь гаригийн бичиг шиг харагддаг. Энэхүү хэсэгт энэ хэлийн тайллыг тайлбарлахыг зорилоо.Энэ хэсгийн ихэнх агуулгыг tutorial болон cheatsheet линкүүдээс авсан. Энэхүү линкийн хичээлийг интернетгүй газар хэрэглэх боломжгүй тул бид энэхүү номондоо сонгож шилээд заримыг нь оруулсан.regular expression -ыг “бүтэцгүй” текстнээс бүтэц хайж илрүүлэхэд хэрэглэдэг - үүний жишээнд өвчний түүх, өргөдөл, гомдол, эмнэлэгийн тэмдэглэл болоэ хүснэгтэлсэн сул текстүүд ордог.regular expression -ын үндсэн хэсгийг дараах дөрвөн аргаар бүтээдэг:Карактер багцМета карактерТоон үзүүлэлтБүлэгКарактер багцКарактерийн сонголтуудыг жагсаалтаар илэрхийлж, хаалтанд дотор багцлах арга юм. Аливаа стрингст хайлт хийж буй карактерүүдийн аль нэг нь олдвол тохироо үүслээ гэж үзнэ. Жишээ нь эгшиг үсгүүдийг хайхын тулд “[aeiou]” гэсэн карактер багцыг хэрэглэдэг. Нийтлэг хэрэглэгддэг карактер багцуудыг дор жагсаав:Карактер багцуудыг хамтад нь зэрэг нэг хаалтанд бичиж болно (зай авахгүй!). Жишээ нь \"[-Za-z]\" (том болон жижиг бүх үсгүүд), \"[t-z0-5]\" (жижиг t-ээс z хүртэл ЭСВЭЛ 0-оос 5 хүртэл) гэх мэтээр бичиж болно.Мета карактерМета карактер нь карактер багцын товчилсон хэлбэр. Нийтлэг хэрэглэгддэг мета карактерүүдийг дор жагсаав:ОлшруулагчЗөвхөн нэг карактер хайх тохиолдол бараг гардаггүй. Иймээс олшруулагч ашиглаж урт хэмжээний үсэг/тоон хайлт хийдэг .Олшуурах гэж буй карактерийн ард олшруулах тоог { } хаалтанд дотор бичдэг,\"{2}\" нь хоёр том үсэг илэрхийлнэ.\"{2,4}\" нь 2 оос 4 -н том үсгийг илэрхийлнэ (зай авч болохгүй!).\"{2,}\" 2 болон түүнээс дээш тооны том А үсгийг илэрхийлнэ.\"+\" нэг болон түүнээс дээш тооны том А үсгийг илэрхийлнэ (өөр карактер гарч иртэл энэ бүлэг үргэлжлэх болно).Хэрэв од * тэмдэг урд нь тавьбал 0 болон түүнээс дээш тохироо буй эсэхийг харуулна (тухайн хэв маяг байгаа эсэх нь эргэлзээтэй үед байгаа хэрэг болдог).Нэмэх + тэмдгийг олшуулагчаар өгвөл таарсан хэв маягийг дараачийн карактер гарч иртэл хайх болно. Жишээ нь \"[-Za-z]+\" (цагаан толгойн карактерүүд) -ээр бүх үгсийг илэрхийлнэ:Олшруулагчийг {2} гэж өгвөл зөвхөн дараалласан -г л гаргаж ирнэ. Жишээ нь AAAA-д хоёр хос дараалласан А байна.Хэрэв олшруулагч {2,4} бол 2 -оос 4 удаа дараалласан байх тохиолдлуудыг гаргаж ирнэ.Хэрэв олшруулагч + бол нэг болон түүнээс дээш тооны А байх тохиолдлууд гарч ирнэ:Харьцангуй байрлалЭдгээр нөхцлүүд хайж буй хэв маягийн өмнө болон хойно нь юу байгаа вэ гэдгээр илэрхийлэгддэг. Жишээ нь “хоёр тооны ардах цэг” (\"\"). (?<=\\.)\\s(?=[-Z])Бүлгүүдregular expression ийг бүлэглэснээр үр дүн илүү зохион байгуулалттайгаар гарч ирдэг.Regex -ын жишээСул текст дээр хэрхэн ажиллах талаар жишээ дор харуулав. Үүнээс бид regular expression-ийн хайлтын дүрмээр хэрэгтэй мэдээллээ гаргаж авах болно.Энэхүү илэрхийлэл нь бүх үгтэй тохирч байна (тохироо нь бүх карактертэй тохирох ба хоосон зай гэх мэт үсэг биш карактер гарч иртэл үргэлжилнэ):\"[0-9]{1,2}\" бол үргэлжилсэн, 1 ээс 2 орон тоог илэрхийлэл. Үүнийг мөн \"\\\\d{1,2}\", эсвэл \"[:digit:]{1,2}\" гэж бичиж болно.Дараах линкийн 2 дугаар хуудаснаас чухал regex expressions-үүд, хэрэгтэй зөвлөгөөнүүдтэй танилцаж болно cheatsheetМөн tutorial линкээс нэмэлт мэдээлэл авна уу.","code":"\n# олшруулагчийг шалгах тест стринг\ntest <- \"A-AA-AAA-AAAA\"\nstr_extract_all(test, \"A{2}\")## [[1]]\n## [1] \"AA\" \"AA\" \"AA\" \"AA\"\nstr_extract_all(test, \"A{2,4}\")## [[1]]\n## [1] \"AA\"   \"AAA\"  \"AAAA\"\nstr_extract_all(test, \"A+\")## [[1]]\n## [1] \"A\"    \"AA\"   \"AAA\"  \"AAAA\"\nstr_extract_all(test, \"\")## [[1]]\n##  [1] \"A\" \"-\" \"A\" \"A\" \"-\" \"A\" \"A\" \"A\" \"-\" \"A\" \"A\" \"A\" \"A\"\npt_note <- \"Patient arrived at Broward Hospital emergency ward at 18:00 on 6/12/2005. Patient presented with radiating abdominal pain from LR quadrant. Patient skin was pale, cool, and clammy. Patient temperature was 99.8 degrees farinheit. Patient pulse rate was 100 bpm and thready. Respiratory rate was 29 per minute.\"\nstr_extract_all(pt_note, \"[A-Za-z]+\")## [[1]]\n##  [1] \"Patient\"     \"arrived\"     \"at\"          \"Broward\"     \"Hospital\"   \n##  [6] \"emergency\"   \"ward\"        \"at\"          \"on\"          \"Patient\"    \n## [11] \"presented\"   \"with\"        \"radiating\"   \"abdominal\"   \"pain\"       \n## [16] \"from\"        \"LR\"          \"quadrant\"    \"Patient\"     \"skin\"       \n## [21] \"was\"         \"pale\"        \"cool\"        \"and\"         \"clammy\"     \n## [26] \"Patient\"     \"temperature\" \"was\"         \"degrees\"     \"farinheit\"  \n## [31] \"Patient\"     \"pulse\"       \"rate\"        \"was\"         \"bpm\"        \n## [36] \"and\"         \"thready\"     \"Respiratory\" \"rate\"        \"was\"        \n## [41] \"per\"         \"minute\"\nstr_extract_all(pt_note, \"[0-9]{1,2}\")## [[1]]\n##  [1] \"18\" \"00\" \"6\"  \"12\" \"20\" \"05\" \"99\" \"8\"  \"10\" \"0\"  \"29\""},{"path":"карактер-ба-стрингс.html","id":"эх-сурвалж-материалууд","chapter":"10 Карактер ба стрингс","heading":"10.9 Эх сурвалж материалууд","text":"stringr функцын лавлагаа хуудсыг дараах линкээс үзэж болно: herestringr -ын винньетийг дараах линкээс үзэж болно: ","code":""},{"path":"фактор.html","id":"фактор","chapter":"11 Фактор","heading":"11 Фактор","text":"Боломжит утгууд тодорхой байдлаар багцлагдан, эрэмбэлэн ангилагдсан датаг R дээр фактор дата гэнэ.График, хүснэгт байгуулахад default-аар цагаан толгойн дарааллаар, багаас ихрүү чиглэлтэй (alpha-numeric) гарч ирдэг. Харин баганын утгад эрэмбэ (шатлал) тогтоосноор болиулж болдог. Үүний тулд карактер, тоон багануудыг фактор хэлбэрт хувиргах ашаардлагатй. Фактор датаны өөр ач холбогдол бол графикт стандарт легендийг байгуулж өгдөг. Энэ нь датанд аль нэг утга байхгүйгээс легендийн байрлал график янз бүр болж өөрчлөгдөөд байдаг асуудлыг шийдэж өгдө.Энэ хэсэгт forcats багцын функцууд ( “”categorical variables”-гэсэн үгийн товчлол) болон base R- зарим функцыг тайлбарлана. Мөн тархварзүйн долоо хоногтой (epiweeks) хэсэгт lubridate, aweek гэсэн багцуудаас цухас яригдах болно.forcats багц дах функцуудын бүрэн жагсаалтыг –ээс үзэж болно. Энд Энд зөвхөн чухал хэрэглэгддэг функцуудыг тайлбарласан.","code":""},{"path":"фактор.html","id":"бэлтгэл-2","chapter":"11 Фактор","heading":"11.1 Бэлтгэл","text":"","code":""},{"path":"фактор.html","id":"багцыг-ачааллах-1","chapter":"11 Фактор","heading":"Багцыг ачааллах","text":"Энэ хэсэгт анализ хийхэд шаардлагатай багцуудыг доорхи кодоор ачааллана.pacman багцын p_load() функцээр шаардлагатай багцыг татаж аваад ачааллана уу. Өмнө татаж авсан багцуудаа base R -ын library()-аар ачааллаж болно. Багцын талаарх нэмэлт мэдээллийг [R basics] хэсгээс харна уу.","code":"\npacman::p_load(\n  rio,           # импорт/экспорт\n  here,          # файлын зам\n  lubridate,     # огноог янзлана\n  forcats,       # факторыг янзлана\n  aweek,         # автоматаар фактор үүсгэж тархварзүйн долоо хоног (epiweeks) үүсгэнэ\n  janitor,       # хүснэгт\n  tidyverse      # дата менежмент, график\n  )"},{"path":"фактор.html","id":"дата-импортлох-3","chapter":"11 Фактор","heading":"Дата импортлох","text":"Жишээ дасгалуудад Эбола дэгдэлтийн үеийн зохиомол дата ашиглах болно. Эдгээр дасгалуудыг дагаж хийхийг хүсвэл линкийн “clean” linelist дээ дарж татаж авна уу  (.rds file). Датагаа rio-ын import()функцээр импортлож болно (энэ нь.xlsx, .rds, .csv - зэрэг олон дата төрөлтэй ажиллаж чадна. [Import export] хэсэгт илүү тайлбарласан).","code":"\n# датаг импортлох\nlinelist <- import(\"linelist_cleaned.rds\")"},{"path":"фактор.html","id":"fct_newcat","chapter":"11 Фактор","heading":"Шинээр ангилагдсан (categorical) хувьсагч үүсгэх","text":"Ойлгомжтой тайлбарлах үүднээс хамгийн нийтлэг хэрэглэгддэг үйлдэл болох ангилагдсан хувьсагч шинээр хэрхэн үүсгэхийг үзэх болно.Тоон баганыг фактор хэлбэрт хувиргаснаар статистик бодолт хийх боломжгүй өолдог гэдгийг санаарай.","code":""},{"path":"фактор.html","id":"багана-үүсгэх","chapter":"11 Фактор","heading":"Багана үүсгэх","text":"Жишээгээр days_onset_hosp (өвчний шинж эхэлснээс эмнэлэгт хэвтэх хүртэл хугацаа) баганын мөрүүдийг ангилан ялгаж delay_cat гэсэн шинэ багана үүсгэх болно. Үүнийг dplyr -ын case_when() функцээр хйинэ. case_when() функцын логик шалгуур (баруун тал) дэс дарааллан мөр болгонд үйлчилж, үүссэн утга нь delay_cat шинэ баганын (зүүн тал) тохирох мөрөнд ордог. case_when() функцын талаар [Cleaning data core functions] хэсэгт дэлгэрэнгүй тайлбарласан.","code":"\nlinelist <- linelist %>% \n  mutate(delay_cat = case_when(\n    # шалгуур                                   # TRUE байвал орох шинэ утга \n    days_onset_hosp < 2                        ~ \"<2 days\",\n    days_onset_hosp >= 2 & days_onset_hosp < 5 ~ \"2-5 days\",\n    days_onset_hosp >= 5                       ~ \">5 days\",\n    is.na(days_onset_hosp)                     ~ NA_character_,\n    TRUE                                       ~ \"Check me\"))  "},{"path":"фактор.html","id":"утгын-default-эрэмбэ","chapter":"11 Фактор","heading":"Утгын default эрэмбэ","text":"case_when()-ээр үүсгэдсэн delay_cat багана карактер утгатай ангилагдсан багана байдаг. Өөрөөр хэлбэл фактор болж амжаагүй байдаг. Тийм ч учраас давтамж харуулсан хүснэгт дээр ангилалын жагсаалт цагаан толгойн дарааллаар эрэмбэлэгдсэн байдаг. Гэтэл энэ дараалал тухайн датаг ойлгоход учир дутагдалтай байдаг:Barplot байгуулахад x-тэнхлэгийн дараалал автомат тохируулгатай байдаг ( R график байгуулахын тулд хамгийн их хэрэглэгддэг ggplot2 багцын талаар [ggplot basics] хуудасанд дэлгэрэнгүй тайлбарласан).","code":"\ntable(linelist$delay_cat, useNA = \"always\")## \n##  <2 days  >5 days 2-5 days     <NA> \n##     2990      602     2040      256\nggplot(data = linelist)+\n  geom_bar(mapping = aes(x = delay_cat))"},{"path":"фактор.html","id":"фактор-болгож-хувиргах","chapter":"11 Фактор","heading":"11.2 Фактор болгож хувиргах","text":"Карактер эсвэл тоон баганыг фактор болгож хувиргахад forcats -ын аль ч функцыг хэрэглэж болно (дэлгэрэнгүй мэдээлэл -д орсон). Эдгээр функц нь датаг юуны түрүүнд фактор болгож хувиргадаг тул цаашид шатлалтай ангилал үүсгэх боломжтой болдог. Тухайлбал шатлалын эрэмбийг fct_relevel() -ээр зааж өгч болно. Гэтэл as_factor() функц зөвхөн факторт хувиргахаас өөр үйлдэл нэмж хийдэггүй.base R -ын factor() функц мөн баганыг факторлуу хувиргадаг ба шатлалын эрэмбийг levels = аргументэд нь та өөрөө зааж өгөх болно.Дор жишээнд mutate() болон fct_relevel() -ээр delay_cat баганыг карактерээс фактор болгож хувиргахыг харуулав. delay_cat багана үүсэх талаар өмнөх Preparation хэсэгт тайлбарласан.Одоо энэхүү баганын “утгууд” фактор “түвшингүүд” боллоо гэсэн үг. Энэхүү үүсгэсэн түвшний жагсаалтыг эрэмбийг base R-ын levels() функц эсвэл table() эсвэл janitor -ын tabyl() функцуудээр харж болно. Түвшний эрэмбэ нь default-аар цагаан толгойн болон багаас ихсэх (alpha-numeric) дарааллар гарч ирдэг. NA бол факторын түвшинд тооцогдохгүй болохыг анхаарна уу.Үүнээс гадна fct_relevel() -ээр түвшний эрэмбийг гараар зааж өгч болно. Ингэхдээ доор үзүүлсний дагуу түвшин заасан утгуудаа таслалаар тусгаарлаж, хашилтанд уагсааж бичнэ. Датан дах утгаасаа үг үсгийн зөрөөгүй бичхийг анхаар. Хэрэв датанд байхгүй түвшин үүсгэх хэрэгтэй бол fct_expand() instead)-ыг хэрэглэ.Дээрх коммандаар зааж өгсний үр дүнд түвшний эрэмбэ илүү ойлгомжтой болно байна.График дээр хэвлэгдэх дараалал ч гэсэн илүү ойлгомжтой болж байна.","code":"\nlinelist <- linelist %>%\n  mutate(delay_cat = fct_relevel(delay_cat))\nlevels(linelist$delay_cat)## [1] \"<2 days\"  \">5 days\"  \"2-5 days\"\nlinelist <- linelist %>%\n  mutate(delay_cat = fct_relevel(delay_cat, \"<2 days\", \"2-5 days\", \">5 days\"))\nlevels(linelist$delay_cat)## [1] \"<2 days\"  \"2-5 days\" \">5 days\"\nggplot(data = linelist)+\n  geom_bar(mapping = aes(x = delay_cat))"},{"path":"фактор.html","id":"түвшин-нэмэх-хасах","chapter":"11 Фактор","heading":"11.3 Түвшин нэмэх, хасах","text":"","code":""},{"path":"фактор.html","id":"fct_add","chapter":"11 Фактор","heading":"Нэмэх","text":"Фактортоо нэмж түвшин оруулах бол fct_expand()-ыг хэрэглэ. Багана болон нэмэгдэж буй түвшний нэрийг (таслалаар тусгаарлаж) функцэл оруулдаг. Баганын нийт утгыг хүснэгтэлж харвал шинээр үүсгэсэн түвшин 0 давтамжтай харагддаг. base R-ын table() эсвэл janitor-ын tabyl() -аар хүснэгт болгож хараарай:Тэмдэглэл: forcats -д дутуу утгыг (NA) хялбар аргаар түвшин болгож хувиргах тусгай функц байдаг. Missing values хэсгийг нэмж үзнэ үү.","code":"\nlinelist %>% \n  mutate(delay_cat = fct_expand(delay_cat, \"Not admitted to hospital\", \"Transfer to other jurisdiction\")) %>% \n  tabyl(delay_cat)   # хүснэгт хэвлэ##                       delay_cat    n    percent valid_percent\n##                         <2 days 2990 0.50781250     0.5308949\n##                        2-5 days 2040 0.34646739     0.3622159\n##                         >5 days  602 0.10224185     0.1068892\n##        Not admitted to hospital    0 0.00000000     0.0000000\n##  Transfer to other jurisdiction    0 0.00000000     0.0000000\n##                            <NA>  256 0.04347826            NA"},{"path":"фактор.html","id":"хасах","chapter":"11 Фактор","heading":"Хасах","text":"fct_drop()-ээр “ашиглагдаагүй”, 0 давтамжтай түвшинг хасдаг. Өмнөх жишээний нэг түвшин (“эмнэлэгт хэвтээгүй тохиолдлууд”) 0 давтамжтай байна. Фактортай баганаа fct_drop()-д оруулснаар энэхүү 0 давтамжтай түвшин хасагдна:","code":"\nlinelist %>% \n  mutate(delay_cat = fct_drop(delay_cat)) %>% \n  tabyl(delay_cat)##  delay_cat    n    percent valid_percent\n##    <2 days 2990 0.50781250     0.5308949\n##   2-5 days 2040 0.34646739     0.3622159\n##    >5 days  602 0.10224185     0.1068892\n##       <NA>  256 0.04347826            NA"},{"path":"фактор.html","id":"fct_adjust","chapter":"11 Фактор","heading":"11.4 Түвшний эрэмбийг тохируулах","text":"forcats -ын функцуудээр түвшний эрэмбийг тохируулахад хялбар (багана фактор хэлбэрт хувирсан байх шаардлагатай):Ингэхдээ фактор баганад хоёр янзаар үйлчилнэ:Хүснэгтийн багана: датанд өөрчлөлт хийгдсэн тул цаашид хийгдэх үйлдэлд нөлөөлнө.График дотор: өөрчлөлт зөвхөн график дотор хийгдэх болно.","code":""},{"path":"фактор.html","id":"гараар-гүйцэтгэх","chapter":"11 Фактор","heading":"Гараар гүйцэтгэх","text":"Фактор дах түвшний эрэмбийг гараар янзалж болно. Фактор бус баганыг функцэд оруулбал багана эхлээд фактор хэлбэрт хувирдаг.Хаалтан дотор баганын нэрийг оруулаад араас нь дараахь хоёрын аль нэгийг оруул:Түвшнүүдийг бүгдийг хүссэн дарааллын дагуу жагсааж оруулна (карактер вектор хэлбэрээр c()) эсвэлЗасагдах шаардлагатай нэг ширхэг түвшний нэрийг оруулаад түүний шинэ эрэмбийн байрлалыг = аргументэд зааж өгнө.Энэхүү жишээнд delay_cat баганын түвний эрэмбийг дахин зааж өгч (өмнө нь фактор байсан) хүссэн дарааллалдаа хэрхэн оруулахыг харуулав.Зөвхөн нэг л түвшинг зөөх шаардлагатй үед fct_relevel() -ыг дангаар нь хэрэглэж, засагдах эрэмбийн байрлалыг = аргументэд зааж өг. Жишээ нь дараахь коммандаар “<2 days” гэсэн түвшин хоёрдугаар байрлалруу зөөгдөж байна:","code":"\n# түвшний эрэмбийг дахин зааж өгөх\nlinelist <- linelist %>% \n  mutate(delay_cat = fct_relevel(delay_cat, c(\"<2 days\", \"2-5 days\", \">5 days\")))\n# түвшний эрэмбийг дахин зааж өгч\nlinelist %>% \n  mutate(delay_cat = fct_relevel(delay_cat, \"<2 days\", after = 1)) %>% \n  tabyl(delay_cat)"},{"path":"фактор.html","id":"график-дотор","chapter":"11 Фактор","heading":"График дотор","text":"Хүснэгтээс гадна график доторх түвшний эрэмбийг forcats -аар зааж өгдөг. Эдгээр функцыг график байгуулдаг ggplot() дотор оруулаад түвшнийг эрэмбэлж, урвуулж (reverse) болно. Ингэснээр өөрчлөлт зөвхөн графикт л хийгдэх болно.Доор жишээнд хоёр графикийгggplot() -ээр байгуулав ( [ggplot basics] хуудсаас лавлаж болно). Эхний графикт delay_cat баганыг x-тэнхлэгт байрлуулж, түвшний эрэмбэ нь default хэлбэрээр байна. Хоёр дах графикийн кодонд баганын нэр, түвшний дарааллыг fct_relevel()-т оруулснаас график дээрх эрэмбэ өөрчлөгдсөн байна.графикийн түвшинд ингэж өөрчлөлт хийхэд x- тэнхлэг дээрх default гарчигны утга алдагддаг. Иймээс гарчигийг ggplot2-ын labs() аргументээр дахин нэрлэх хэрэгтэй.","code":"\n# ggplot дотор тохируулга хийж өгөөгүй учир эрэбмэ default буюу цагаан толгойн, багаас ихсэх дараалалтай байна \nggplot(data = linelist)+\n    geom_bar(mapping = aes(x = delay_cat))\n\n# фактор лах түвшний эрэмбийг ggplot дотор тохируулж өгсөн\nggplot(data = linelist)+\n  geom_bar(mapping = aes(x = fct_relevel(delay_cat, c(\"<2 days\", \"2-5 days\", \">5 days\"))))"},{"path":"фактор.html","id":"урвуулах","chapter":"11 Фактор","heading":"Урвуулах","text":"Түвшний эрэмбийг урвуугаар нь эрэмбэлэх хэрэгцээ их байдаг. Энэ үед факторыг fct_rev()-т оруулж бичихэд хангалттай.Дата доторх факторын эрэмбэ нь хэвээр боловч графикт харагдах эрэмбэд өөрчлөлт оруулах гэж буй бол guides() функцыг хэрэглэж болно ([ggplot tips] хэсгээс харна уу).","code":""},{"path":"фактор.html","id":"давтамжаар","chapter":"11 Фактор","heading":"Давтамжаар","text":"Датаны давтамжийн тоогоор эрэмбэлэхдээ fct_infreq()-ийг хэрэглэдэг. Дутуу утгад (NA) тодорхой түвшин зааж өгөөгүй тохиолдолд автоматаар хамгийн төгсгөлд эрэмбэлэгддэг (section -ээс харна уу). Давтамжийн урвуу дараалалд оруулах бол fct_rev()-т давхар оруулж эрэмбэлдэг.Энэ функцыг доор үзүүлсэнчлэн ggplot()дотор хэрэглэж болно.","code":"\n# давтамжаар нь эрэмбэлэх\nggplot(data = linelist, aes(x = fct_infreq(delay_cat)))+\n  geom_bar()+\n  labs(x = \"Delay onset to admission (days)\",\n       title = \"Ordered by frequency\")\n\n# урвуу давтамжаар эрэмбэлэх\nggplot(data = linelist, aes(x = fct_rev(fct_infreq(delay_cat))))+\n  geom_bar()+\n  labs(x = \"Delay onset to admission (days)\",\n       title = \"Reverse of order by frequency\")"},{"path":"фактор.html","id":"харагдах-байдлаар","chapter":"11 Фактор","heading":"Харагдах байдлаар","text":"Датанд эхэлж гарч ирэх дарааллаар (эхний мөрөөс эхэлж тооцно) эрэмбэлэхийн тулд fct_inorder()-ийг хэрэглэ. Датаг arrange() функцээр эхэлж эрэмбэлээд, факторт хувиргаж буй үед fct_inorder() функц илүү хэрэг болдог.","code":""},{"path":"фактор.html","id":"өөр-баган-дах-статистикийн-тооцооллоор","chapter":"11 Фактор","heading":"Өөр баган дах статистикийн тооцооллоор","text":"Сонгосон баганын түвшинг өөр баганын статистикийн тооцооллын дагуу эрэмбэлэхдээ fct_reorder()-ыг ашигладаг. Ингэж эрэмбэлэхэд аажмаар өгсөж, буурсан bars/цэгэн график байгуулагдаж харахад илүү ойлгомжтой болдог.Жишээнд x-тэнхлэгт delay_cat гэсэн фактор багана y-тэнхлэгт ct_blood гэсэн тоон багана байрлуулав (босго утга). delay_cat -ын бүлэг тус бүрт boxplot-оор CT -ыг дүнг байна. Жишээнд үүнийг CT үр дүнгийн медиан дүнгийн өгсөх дарааллаар эрэмбэлэгдсэн boxplots болгож хувиргав.Эхний графикт түвшингүүд цагаан толгойн, багаас ихсэх тоон дарааллаар (alpha-numeric) эрэмбэлэгдсэн. Тиймээс boxplot -ын өндөр янз бүр холилдсон, тодорхой дараалалгүй харагдаж байна. Хоёрдах жишээнд delay_cat баганыг (x-тэнхлэгдэх) fct_reorder() дотор оруулж, ct_blood баганыг араас нь хоёр дах аргументээр зааж өгч, “median” -ийг гуравдах аргументээр өгсөн байна (мөн “max”, “mean”, “min” зэргийг хэрэглэж болно). Тиймээс delay_cat түвшний дараалал нь delay_cat бүлэг бүрийн дундаж CT утгын өсөх дундаж CT утгыг тусгах болно. Үүнийг хоёр дах график дээрээс харж болно. Boxplot -ууд өгсөх дарааллаар эрэмбэлэгдсэн байна. Хэрэв NA -г (дутуу утга) тодорхой түвшинд хуваарилаагүй болавтоматаар хамгийн сүүлд эрэмбэлэгддэг.Энэ үйлдлийг хийхэд ggplot() коммандын өмнө ямар нэгэн нэмэлт үйлдлэл хийгдэх шаардлагагүй. Бүлэглэж, тооцоолол хийх үйлдлүүд бүгд ggplot комманд дотроо хийгддэг.","code":"\n# анхны дарааллаар эрэмбэлэгдсэн boxplots \nggplot(data = linelist)+\n  geom_boxplot(\n    aes(x = delay_cat,\n        y = ct_blood, \n        fill = delay_cat))+\n  labs(x = \"Delay onset to admission (days)\",\n       title = \"Ordered by original alpha-numeric levels\")+\n  theme_classic()+\n  theme(legend.position = \"none\")\n\n\n# CT баганын median утгаар эрэмбэлэгдсэн boxplots\nggplot(data = linelist)+\n  geom_boxplot(\n    aes(x = fct_reorder(delay_cat, ct_blood, \"median\"),\n        y = ct_blood,\n        fill = delay_cat))+\n  labs(x = \"Delay onset to admission (days)\",\n       title = \"Ordered by median CT value in group\")+\n  theme_classic()+\n  theme(legend.position = \"none\")"},{"path":"фактор.html","id":"сүүлийн-утгаар","chapter":"11 Фактор","heading":"“Сүүлийн” утгаар","text":"Бүлэглэсэн шугаман графикт fct_reorder2() -ыг хэрэглэж болно. Энэ функц график дах шугамын “төгсгөлийн” хэсгийн түвшингүүдийг (мөн легенд) босоо тэнхлэгийн дагуу эрэмбэлдэг. Өөрөөр хэлбэл x-тэнхлэг дэх утгын хамгийн ихтэй хамааралтай y-утгыг эрэмбэлнэ гэсэн үг.Жишээ нь өвчлөлийн бодит тоог эмнэлг тус бүрээр бүлэглэж цаг хугацаагаар харуулсан график байгуулахаар болов. Ингэхдээ aes() доторх color = аргументэд fct_reorder2()-тай синтаксаа оруулбал легендийн босоо тэнхлэгийн эрэмбэ графикийн төгсгөлийн босоо тэнхлэгт харагдах эрэмбэтэй ижил болдог. Энэ талаар online documentation материалаас уншна уу.","code":"\nepidemic_data <- linelist %>%         # linelist-ээр эхэл\n    filter(date_onset < as.Date(\"2014-09-21\")) %>%    # харахад ойлгомжтой болхын тулд босго огноо өг\n    count(                                            # долоо хоног тутам, эмнэлэг тус бүрээр харуулах\n      epiweek = lubridate::floor_date(date_onset, \"week\"),  \n      hospital                                            \n    ) \n  \nggplot(data = epidemic_data)+                       # график байгуулж эхлэх\n  geom_line(                                        # шугам хийх\n    aes(\n      x = epiweek,                                  # тархварзүйн долоо хоногийн х-тэнхлэг\n      y = n,                                        # өндрөөр долоо хоног тутам дах бодит тоог илэрхийлнэ\n      color = fct_reorder2(hospital, epiweek, n)))+ # эмнэлэг тус бүрээр датаг бүлэглэж өнгөөр ялгана. Графикийн төгсгөлийн тооны эрэмбээр факторын эрэмбийг тодорхойлно\n  labs(title = \"Factor levels (and legend display) by line height at end of plot\",\n       color = \"Hospital\")                          # легендийн гарчигийг өөрчлөх"},{"path":"фактор.html","id":"fct_missing","chapter":"11 Фактор","heading":"11.5 Дутуу утга","text":"фактор багана дутуу утгатай (NA) бол fct_explicit_na()-аар NA-г түвшин болгож нэр (“Missing” ) өгч болно. Default-аар хамгийн ард орж эрэмбэлэгддэг. Нэрийг нь na_level = аргументээр өөрчилж болно.Дээрх үйлдлийг delay_cat дээр туршиж, tabyl() -аар хүснэгтлэн хэвлэхэд NA “Missing delay” гэж нэрлэгдсэн буйг харж байна.","code":"\nlinelist %>% \n  mutate(delay_cat = fct_explicit_na(delay_cat, na_level = \"Missing delay\")) %>% \n  tabyl(delay_cat)##      delay_cat    n    percent\n##       2-5 days 2040 0.34646739\n##        <2 days 2990 0.50781250\n##        >5 days  602 0.10224185\n##  Missing delay  256 0.04347826"},{"path":"фактор.html","id":"түвшнүүдийг-нэгтгэх","chapter":"11 Фактор","heading":"11.6 Түвшнүүдийг нэгтгэх","text":"","code":""},{"path":"фактор.html","id":"гар-аргаар","chapter":"11 Фактор","heading":"Гар аргаар","text":"Түвшний харагдах байдлыг fct_recode()-ыг ашиглаж гараар янзалдаг. Энэ нь dplyr -ын recode() функцтэй адил ([Cleaning data core functions]-ээс хар) боловч fct_recode() -ыг хэрэглэснээр шинэ фактор түвшин үүсгэх боломжтой байдгаараа ач холбогдолтой. Ердийн recode()-ийг хэрэглэхэд шинэ утгыг хүлээж авдгүй ба нэмэлт тохируулга хийж байж боломжтой болдог.Энэхүү функцээр олон түвшинд ижил утга оруулж түвшнүүдийг “нэгтгэж” болно. Ингэхдээ хэрэгтэй мэдээлэл санамсаргүй утгагдхаас болгоомжил! Шинэ багана үүсгэн түвшнүүдийг нэгтгэвэл эрсдэл багатай (хуучих багана дээрээс бичигдэхгүй).fct_recode() -ын синтакс recode()-оос өөр. recode() -оор ХУУЧИН = ШИНЭгэсэн дараалалтай бол fct_recode() нь ШИНЭ = ХУУЧИН гэсэн дараалалтай.Эхлээд delay_cat -ын түвшин дараах байдалтай байна:Шинэ түвшинг fct_recode(column, \"new\" = \"old\", \"new\" = \"old\", \"new\" = \"old\") гэсэн синтаксаар үүсгэж хэвлэв:Энд дээрх түвшнийг fct_recode() -оор нэгтгэв. “Less 5 days” түвшинг шинээр нэмхэд алдаа гарч анхааруулж байна.","code":"\nlevels(linelist$delay_cat)## [1] \"<2 days\"  \"2-5 days\" \">5 days\"\nlinelist %>% \n  mutate(delay_cat = fct_recode(\n    delay_cat,\n    \"Less than 2 days\" = \"<2 days\",\n    \"2 to 5 days\"      = \"2-5 days\",\n    \"More than 5 days\" = \">5 days\")) %>% \n  tabyl(delay_cat)##         delay_cat    n    percent valid_percent\n##  Less than 2 days 2990 0.50781250     0.5308949\n##       2 to 5 days 2040 0.34646739     0.3622159\n##  More than 5 days  602 0.10224185     0.1068892\n##              <NA>  256 0.04347826            NA\nlinelist %>% \n  mutate(delay_cat = fct_recode(\n    delay_cat,\n    \"Less than 5 days\" = \"<2 days\",\n    \"Less than 5 days\" = \"2-5 days\",\n    \"More than 5 days\" = \">5 days\")) %>% \n  tabyl(delay_cat)##         delay_cat    n    percent valid_percent\n##  Less than 5 days 5030 0.85427989     0.8931108\n##  More than 5 days  602 0.10224185     0.1068892\n##              <NA>  256 0.04347826            NA"},{"path":"фактор.html","id":"бусад-болгож-хумих","chapter":"11 Фактор","heading":"“Бусад” болгож хумих","text":"Гараар “Бусад” гэсэн түвшин үүсгэх бол fct_other() функцыг хэрэглэж болно. Дор жишээнд hospital баганын “Port Hospital” болон “Central Hospital” түвшнээс бусад түвшингүүд “” болж нэтггэдсэн байна. Энэ үед хасах, нэмэх шаардлагатай утгаа keep = эсвэл drop =-аргументэд вектор хэлбэрээр зааж өгч болно. “Бусад” гэсэн түвшний харагдах байдлыг other_level =гэсэн аргументээр өөрчилж болно.","code":"\nlinelist %>%    \n  mutate(hospital = fct_other(                      # түвшнүүдийг тохируул\n    hospital,\n    keep = c(\"Port Hospital\", \"Central Hospital\"),  # тусдаа утгуудыг оруул\n    other_level = \"Other Hospital\")) %>%            # Бусад бүх утгыг \"Other Hospital\" болго\n  tabyl(hospital)                                   # хүснэгтийг хэвлэ##          hospital    n    percent\n##  Central Hospital  454 0.07710598\n##     Port Hospital 1762 0.29925272\n##    Other Hospital 3672 0.62364130"},{"path":"фактор.html","id":"давтамжаар-нь-хумих","chapter":"11 Фактор","heading":"Давтамжаар нь хумих","text":"Хамгийн бага давтамжтай түвшнүүдийг fct_lump()-ээр зэрэг нэгтгэж болдог.Бага давтамжтай бүлгүүдийг зэрэг “бөөндөж” нэгтгэн “” түвшин үүсгэхийн тулд дараах үйлдлүүдээс сонгож хийнэ үү:n = -ээр хэдэн бүлэг үүсгэхээ зааж өгнө. Ингэснээр хамгийн их давтамжтай n бүлэг үлдэж, үлдсэн хэсэг нь “” бүлэгт нэтгэгднэ\n.prop = -ыг тохируул. Үлдээх гэж буй түвшний давтамжид босго хувь зааж өг. Энэхүү босго хувиас бага утгууд “” болж нэгтгэгднэ.“” түвшний харагдах байдлыг other_level = аргументээр тохируулж өөрчилж болно. Доорх жишээнд хамгийн их давтамжтай хоёр эмнэлэгээс бусад нь “Hospital” болж нэтгэгдсэн., warn\n## Бүх түвшнийг харуулФактор хэрэглэхийн бас нэг ач холбогдол нь датанд ямар утга байгаагаас үл хамааран графикийн легенд болон тайлангийн хүснэгтийг жигд, стандарт болгож өгдөг.Олон график, зураг зэрэг бэлдэж буй үед (графикийг газар нутгаар нь ялгаж харуулах гэх мэт) легенд, тайлангийн хүснэгтийг яг адилхан байлгах шаардлагатй болдог (датанд зарим утгы нь өөр байсан ч гэсэн).","code":"\nlinelist %>%    \n  mutate(hospital = fct_lump(                      # түвшнүүдийг тохируул\n    hospital,\n    n = 2,                                          # дээрээсээ эхний хоёр түвшинг үлдээ\n    other_level = \"Other Hospital\")) %>%            # бусдыг нь \"Other Hospital\"-т нэгтгэ\n  tabyl(hospital)                                   # хүснэгтийг хэвлэ##        hospital    n   percent\n##         Missing 1469 0.2494905\n##   Port Hospital 1762 0.2992527\n##  Other Hospital 2657 0.4512568"},{"path":"фактор.html","id":"графикт","chapter":"11 Фактор","heading":"Графикт","text":"Үүний тулд ggplot()-ын тохируулгын нэг scale_xxxx() функцуудэд drop = FALSE гэсэн аргументийг нэмдэг. Ингэснээр датанд байхгүй ч гэсэн факторын бүх түвшин графикт гарч ирдэг. Фактор баганын түвшин fill = аргументэд орсон үед scale_fill_discrete() дотор drop = FALSE гэж өгнө (доор харуулсан). Түвшингүүдийг x =(x-тэнхлэг) ,color =, size =-нарт оруулсан үед drop = FALSE-ыг scale_color_discrete() эсвэл scale_size_discrete() -д оруулна.Жишээнд насны ангиллыг эмнэлэг тус бүрээр давхар bar plot -д оруулж харуулсан. Үүн дээр scale_fill_discrete(drop = FALSE) гэж нэмснээр бүх насны бүлэг легенд дээр харагдаж байна (зарим нь датанд байхгүй ч гэсэн).","code":"\nggplot(data = linelist)+\n  geom_bar(mapping = aes(x = hospital, fill = age_cat)) +\n  scale_fill_discrete(drop = FALSE)+                        # датанд байхгүй ч гэсэн легенд дээр бүх насны ангилал харагдна\n  labs(\n    title = \"All age groups will appear in legend, even if not present in data\")"},{"path":"фактор.html","id":"хүснэгтэнд","chapter":"11 Фактор","heading":"Хүснэгтэнд","text":"base R-ын table()болон janitor-ын tabyl() -ыг хэрэглэж бүх фактор түвшинг харуулдаг (хэрэглэгдээгүй түвшин ч гэсэн).Хэрэв хүснэгтийг dplyr-ын count() эсвэл summarise()-аар байгуулж буй бол .drop = FALSE гэсэн аргумент нэмж хэрэглэгдээгүй ч гэсэн бүх фактор түвшинг гарч ирэх болно.[Descriptive tables] хуудас эсвэл scale_discrete documentation, count() documentation линкээс нэмж уншна уу. [Contact tracing] хуудасны жишээг нэмж үзэж болно.","code":""},{"path":"фактор.html","id":"тархвар-зүйн-долоо-хоног","chapter":"11 Фактор","heading":"11.7 Тархвар зүйн долоо хоног","text":"Тархварзүйн долоо хоногийг хэрхэн байгуулах талаар [Grouping data] хуудаснт дэлгэрэнгүй бичсэн. Мөн [Working dates] хуудаст тархварзүйн долоо хоногийг үүсгэж, хэлбэржүүлэх талаар оруулсан.","code":""},{"path":"фактор.html","id":"график-дээрх-тархварзүйн-долоо-хоног","chapter":"11 Фактор","heading":"График дээрх тархварзүйн долоо хоног","text":"Тархварзүйн долоо хоногийг графикт харуулахдаа lubridate-ын floor_date() функцыг ([Grouping data] хуудаст тайлбарласан) хэрэглэж болно. Ингэснээр YYYY-MM-DD форматтай, огноо төрлийн дата үүсдэг. Ийм огноотой баганаар график байгуулвал эрэмбэ нь автоматаар зөв гарч ирдэг бөгөөд факторт хувиргаж, түвшинг эрэмбэлэх шаардлагагүй. Жишээнд өвчний эхэлсэн огноог ggplot() гистограммаар харуулав.Огнооны харагдах байдлыг scale_x_date() -ээр тохируулж болно. Энэ талаар [Epidemic curves] хуудаст дэлгэрүүлж бичсэн. scale_x_date() функцын date_labels = аргументэд “strptime” гэсэн форматыг зааж өгдөг. Энэхүү формат “%” тэмдэгтийг огноог илэрхийлэх тэмдэг болгодог ( дэлгэрэнгүй мэдээллийг [Working dates] хуудаст оруулсан). Тухайлбал “%Y” гэж бичвэл жилийг 4 цифрээр бичихийг, “%W” эсвэл “%U” -аар хэддүгээр долоо хоног болохыг зааж өгдөг (нэгдэх, бүтэнсайнаар эхэлдэг долоо хоног).","code":"\nlinelist %>% \n  mutate(epiweek_date = floor_date(date_onset, \"week\")) %>%  # долоо хоногийн багана\n  ggplot()+                                                  # ggplot-ыг эхэл\n  geom_histogram(mapping = aes(x = epiweek_date))+           # өвчний эхлэлийн гистограмм\n  scale_x_date(date_labels = \"%Y-W%W\")                       # огнооны форматыг YYYY-WWw болгоно"},{"path":"фактор.html","id":"датандах-тархварзүйн-долоо-хоног","chapter":"11 Фактор","heading":"Датандах тархварзүйн долоо хоног","text":"Хэрэв таны гол зорилго график бүтээх биш бол дараах хоёр аргыг хэрэглэж болох юм:fine control display, convert lubridate epiweek column (YYYY-MM-DD) desired display format (YYYY-WWw) within data frame , convert class Factor.Эхлээд base R -ын format() -аар огнооны YYYY-MM-DD форматыг YYYY-Www болгож хувирга ([Working dates] хуудсаас харна уу). Ингэснээр карактер төрлийн багана болж хувирна. Үүнийг factor()-аар фактор болгож хувирга.АЮУЛТАЙ: Хэрэв та долоо хоногийн дугаарыг жилийн урд талд нь оруулбал (“Www-YYYY”) (“%W-%Y”) default тохируулгаар (alpha-numeric) буруу эрэмбэлэгднэ (жишээ нь 01-2015 нь 35-2014 -ын урд талд бичигднэ). Үүнийг зөвхөн гараар янзалж болдог бөгөөд энэ нь маш их ажиллагаатай.fast default display, use aweek package ’s function date2week(). Долоо хоногийн эхлэх өдрийг week_start = аргументээр тохируулж болдог. Хэрэв factor = TRUE гэж тохируулбал үүсэх багана нь фактор болдог. Ингэснээр байж болох бүх долоо хоногийг оруулж болдог (тухайн долоо хоногт тохиолдол гараагүй байсан ч гэсэн ).[Working dates] хуудаснаас aweek-ийн талаар нэмж үзэж болно. Энэ багцад бас урвуу функц week2date() байдаг.","code":"\nlinelist <- linelist %>% \n  mutate(epiweek_date = floor_date(date_onset, \"week\"),       # тархварзүйн долоо хоног үүсгэ (YYYY-MM-DD)\n         epiweek_formatted = format(epiweek_date, \"%Y-W%W\"),  # Хувирга (YYYY-WWw)\n         epiweek_formatted = factor(epiweek_formatted))       # Факторт хувирга\n\n# Түвшнүүдийг харуул\nlevels(linelist$epiweek_formatted)##  [1] \"2014-W13\" \"2014-W14\" \"2014-W15\" \"2014-W16\" \"2014-W17\" \"2014-W18\"\n##  [7] \"2014-W19\" \"2014-W20\" \"2014-W21\" \"2014-W22\" \"2014-W23\" \"2014-W24\"\n## [13] \"2014-W25\" \"2014-W26\" \"2014-W27\" \"2014-W28\" \"2014-W29\" \"2014-W30\"\n## [19] \"2014-W31\" \"2014-W32\" \"2014-W33\" \"2014-W34\" \"2014-W35\" \"2014-W36\"\n## [25] \"2014-W37\" \"2014-W38\" \"2014-W39\" \"2014-W40\" \"2014-W41\" \"2014-W42\"\n## [31] \"2014-W43\" \"2014-W44\" \"2014-W45\" \"2014-W46\" \"2014-W47\" \"2014-W48\"\n## [37] \"2014-W49\" \"2014-W50\" \"2014-W51\" \"2015-W00\" \"2015-W01\" \"2015-W02\"\n## [43] \"2015-W03\" \"2015-W04\" \"2015-W05\" \"2015-W06\" \"2015-W07\" \"2015-W08\"\n## [49] \"2015-W09\" \"2015-W10\" \"2015-W11\" \"2015-W12\" \"2015-W13\" \"2015-W14\"\n## [55] \"2015-W15\" \"2015-W16\"\ndf <- linelist %>% \n  mutate(epiweek = date2week(date_onset, week_start = \"Monday\", factor = TRUE))\n\nlevels(df$epiweek)"},{"path":"фактор.html","id":"эх-сурвалж","chapter":"11 Фактор","heading":"11.8 Эх сурвалж","text":"R Data Science номын factors хуудас\naweek package vignette.","code":""},{"path":"датаг-пивот-хийх.html","id":"датаг-пивот-хийх","chapter":"12 Датаг пивот хийх","heading":"12 Датаг пивот хийх","text":"Дата менежментийн үед пивот-ыг дараах хоёр тохиолдолд хэрэглэдэг:Пивот хүснэгт-ийг байгуулахад хэрэглэнэ. Пивот гэдэг нь датаны статистик үзүүлэлтүүдийг хүснэгтэлж, дүгнэж харуулахыг хэлдэг.Дата хүснэгтийг урт -аас өргөн эсвэл өргөн -өөс урт формат болгож хувиргахад хэрэглэнэ.Энэхүү хуудаст хоёрдугаар хэрэглээг голчилж үзэх болно. Эхний хэрэглээ нь дата анализийн маш чухал хэсэг тул [Grouping data] болон [Descriptive tables] хуудсуудад дэлгэрэнгүйгээр тайлбарлагдна.Энэ хуудсанд ихэвчлэн датаны форматыг янзлах талаар үзэх болно. “Цэгцтэй дата” буюу хувьсагч болгон өөрийн баганатай, ажиглалт бүр өөрийн мөртэй, утга бүр өөрийн гэсэн нүдэнд оршдог талаар санаж байх хэрэгтэй.Энэ талаар илүү дэлгэрэнгүйгээр online chapter R Data Science -д тайлбарласан байдаг.","code":""},{"path":"датаг-пивот-хийх.html","id":"бэлтгэл-3","chapter":"12 Датаг пивот хийх","heading":"12.1 Бэлтгэл","text":"","code":""},{"path":"датаг-пивот-хийх.html","id":"багцуудыг-ачааллах-1","chapter":"12 Датаг пивот хийх","heading":"Багцуудыг ачааллах","text":"Энэ хэсэгт анализ хийхэд шаардлагатай багцуудыг доорхи кодоор ачааллана.pacman багцын p_load() функцээр шаардлагатай багцыг татаж аваад ачааллана уу. Өмнө татаж авсан багцуудаа base R -ын library()-аар ачааллаж болно. Багцын талаарх нэмэлт мэдээллийг [R basics] хэсгээс харна уу.","code":"\npacman::p_load(\n  rio,          # Файлыг импортлох\n  here,         # Файлыг байрлуулах\n  tidyverse)    # дата менежмент + ggplot2 графикууд"},{"path":"датаг-пивот-хийх.html","id":"датаг-импортлох-1","chapter":"12 Датаг пивот хийх","heading":"Датаг импортлох","text":"","code":""},{"path":"датаг-пивот-хийх.html","id":"хумхаагийн-бодит-тоон-дата","chapter":"12 Датаг пивот хийх","heading":"Хумхаагийн бодит тоон дата","text":"Энэ хуудасны жишээ дасгалд хумхаагийн өдөр тутмын тохиоллдолтой зохиомол датаг ашиглах болно. Дагаж дасгалыг ажиллах бол линк дээр дарж татаж авна уу (.rds file). Датагаа rio багцын import() функцээр импортло (энэ функц .xlsx, .csv, .rds зэрэг олон өргөтгөлтэй ажиллаж чаддаг [Import export] хуудаст нэмж тайлбарласан).Эхний 50 мөрийг дор хэвлэж харуулав.","code":"\n# Дата импортлох\ncount_data <- import(\"malaria_facility_count_data.rds\")"},{"path":"датаг-пивот-хийх.html","id":"linelist-бодит-тоон-дата","chapter":"12 Датаг пивот хийх","heading":"Linelist бодит тоон дата","text":"Энэ хуудасны сүүлийн хэсэгт Эболагийн дэгдэлтийн зохиомол датаг ашиглах болно. Дагаж дасгалыг ажиллах бол линкинй “clean” linelist дээр дарж татаж авна уу (.rds file). Датагаа rio багцын import() функцээр импортло (энэ функц .xlsx, .csv, .rds зэрэг олон өргөтгөлтэй ажиллаж чаддаг [Import export] хуудаст нэмж тайлбарласан).","code":"\n# Датасетээ импортло\nlinelist <- import(\"linelist_cleaned.xlsx\")"},{"path":"датаг-пивот-хийх.html","id":"өргөнөөс-уртруу-хувиргах","chapter":"12 Датаг пивот хийх","heading":"12.2 Өргөнөөс уртруу хувиргах","text":"","code":""},{"path":"датаг-пивот-хийх.html","id":"өргөн-формат","chapter":"12 Датаг пивот хийх","heading":"“Өргөн” формат","text":"Ихэнх дата “өргөн” форматтай байдаг. Өргөн формат гэдэг нь тухайн субьекттэ хамаатай хэв шинж, хариултууд бүгд нэг мөрөнд хадгадагдсан байхыг хэлнэ. Ингэж харуулах нь ойгомжтой боловч анализ хийхэд тохиромжгүй байдаг.Өмнөх Бэлтгэл хэсэгт импортлож оруулсан count_data датаг авч үзье. Датаг харахад мөр болгон байгууллага тус бүрийн өдөр тутмын байдлыг ( “facility-day”)-г харуулж байна. Яг жинхэнэ тохиолдлын тоо (хамгийн баруун талын багана) нь “өргөн” форматаар хадгалагдаж нас насан дах тохиолдлын тоо нь дан мөрөнд хадгалагдсан байна.Энэхүү датасетийн ажиглалт бүр эдгээр 65 байгууллагын нэгэнд тухайн өдөр гарсан хумхаагийн тоог илтгэж байна. Огноо нь ranging count_data$data_date %>% min() -ээс count_data$data_date %>% max() хүртэл үргэлжилнэ. Эдгээр байгууллагууд Хойд Аймаг-ын (Spring, Bolo, Dingo, Barnard) гэсэн дөрвөн Дүүрэгт тарж байрласан. Энэхүү дата хумхаагийн тоог нийт болон гурван насны ангиллаар (<4 нас, 5-14 нас, 15 -аас дээр нас) тус бүр харуулсан.Иим “Өргөн” хэлбэрийн формат нь “цэгцтэй дата” байж чаддаггүй. Учир нь энэхүү баганын толгойнууд “хувьсагчийг” биш харин “насны бүлэглэл” хэмээх хувьсагийн утгыг илтгэж байдаг.Энэ формат нь мэдээллийг хүснэгтээр үзүүлэх эсвэл тохиолдлын тоотой тайлангийн маягтаас өгөгдөл оруулахад (жишээ нь Excel дээр) хэрэгтэй байж болно. Харин анализ хийхийн өмнө энэ датаг “урт” фомартруу шилжүүлж “цэгцтэй дата” -ны стандартад нийцүүлэх хэрэгтэй байдаг. R -ын график байгуулдаг ggplot2 багц “урт” форматтай дататай илүү зохицдог.Одоогийн форматад хумхаагийн нийт тоог цаг хугацааны хувьд тооцоход асуудалгүй:Харин энэхүү нийт тохиолдлын тоонд насны ангилал хэрхэн нөлөөлж буйг хэрхэн тооцоолж харуулах вэ? Үүний тулд сонирхож буй хувьсагч болох (насны ангилал)-ыг датанд нэг баганад оруулах хэрэгтэй ба ингэснээр ggplot2-ын “mapping aesthetics” aes() аргументэд өгөгдөл болж орох боломжтой болно.","code":"\nggplot(count_data) +\n  geom_col(aes(x = data_date, y = malaria_tot), width = 1)"},{"path":"датаг-пивот-хийх.html","id":"pivot_longer","chapter":"12 Датаг пивот хийх","heading":"pivot_longer()","text":"Датаг tidyr багцын pivot_longer() функцээр “урт” болгож болно. tidyr нь tidyverse -ын харьяа багцуудын нэг.Энэхүү функцээр хэсэг багануудыг зэрэг өгөгдлөөр (cols = аргументэд) оруулж, хувиргах боломжтой. Тиймээс энэ нь датаны зөвхөн тодорхой хэсэгт үйлчилдэг. Энэ онцлог нь хумхаагийн датаг хувиргахад их тохиромэтой. Учир нь бид зөвхөн тохиолдлын тоотой багануудыг л хувиргах шаардлагтай.Энэхүү процессийн эцэст хоёр төрлийн багануудтай болдог. Үүний нэг нь шинээр үүссэн ангиллын нэрийг бичсэн (энэ ангиллууд хуучин хүснэгтийн баганын нэр байсан) багана, нөгөө нь эдгээр ангилалд тохирох утгууд (тохиолдлын тоо)-тай багана юм. Шинээр үүссэн хоёр баганын автоматаар үүссэн нэрийг хэрэглэж болно. Эсвэл names_to = болон values_to = аргументуудэд тусгай нэр өгч автомат нэрийг өөрчилж болно.pivot_longer() -ийг хэрхэн ашиглахыг харцгаая…","code":""},{"path":"датаг-пивот-хийх.html","id":"стандарт-пивот","chapter":"12 Датаг пивот хийх","heading":"Стандарт пивот","text":"tidyr багцын pivot_longer() функцээр “өргөн” датаг “урт” формат болгох болно. Ялангуяа хумхаагийн тоог харуулсан дөрвөн тоон баганыг насны ангиллууд-ыг агуулсан нэг багана, үүнд тохирсон тоон үзүүлэлттэй утгыг агуулсан өөр нэг багана болгож хувиргах хэрэгэтэй.Шинээр үүссэн хүснэгтийн (df_long) мөрийн тоо илүү байгааг анхаар (12,152 -г 3,038 тэй харьцуул); Хүснэгт урт болсон. Өөрөөр хэлбэл яг дөрөв дахин урт болсон гэсэн үг. Учир нь хуучин хүснэгтийн нэг мөр df_long хүснэгтийн дөрвөн мөр болж өөрчлөгдсөн ба хумхаагийн дөрвөн төрлийн (<4 нас, 5-14 нас, 15y+, нийт) тоон үзүүлэлт тус бүрт нэг мөр үүссэн гэсэн үг юм .Шинэ хүснэгт урт болохоос гадна цөөн баганатай (8 -г 10-тэй харьцуулах) болсон байна. Учир нь өмнөх дөрвөн багана дах мэдээлэл ( malaria_ гэж эхэлсэн баганууд) хоёр баганад хадгалагдах болсон.Эдгээр дөрвөн багана malaria_гэж эхэлж буй тул “tidyselect”-ын starts_with() функцыг ашиглаж хувиргалтаа хийж бас болно (эдгээр туслах функцуудын талаар[Cleaning data core functions] хэсэгт дэлгэрэнгүй оруулсан).эсвэл байрлалаар нь сонго:эсвэл хэсэг дараалласан багануудыг сонго:Энэхүү шинээр үүсэх хоёр баганууд name болон value гэж автоматаар нэрлэгддэг боловч доторх утгыг ойлгомжтой болгох үүднээс names_to болон values_to аргументүүдэд илүү тодорхой нэр өгч болно. Жишээ болгож age_group болон counts гэсэн нэр өгье:Шинээр үүсгэсэн датагаа ggplot2-д оруулж шинэ үүссэн count баганыг y-тэнхлэгт байрлуулж, шинэ үүссэн age_group баганыг fill = аргументэд (өнгөөр ялгана) өгч болох боломжтой боллоо. Ингэснээр bar графикт хумхаагийн тохиолдлын тоо насны бүлгүүдээр даврхаласан байдлаар харуулсна.Дараахь шинэ графикийг өмнөх графиктай харьцуулж буруу хийгдсэн зүйлсийг? тодруулцгаая.Тандалтын датаг янзалж байхад нийтлэг тохиолддог бэрхшээлтэй бид учирсан байна. Мөн malaria_tot баганын нийт тоог оруулснаас bar -ын өндөр байх ёстой хэмжээнээс хоёр дахин өндөр болж харагдаж байна.Үүнийг хэд хэдэн аргаар шийдвэрлэж болно. Энгийн арга бол ggplot()-д оруулахаас өмнө энэхүү нийт (malaria_tot)-ийг шүүж хасч болно:Эсвэл pivot_longer() коммандыг өгч байхдаа энэ хувьсагчийг хасч болно. Ингэснээр хүснэгтэд тусдаа хувьсагч хэвээр байх болно. Шинэ үүссэн мөрүүд ямар утгууд орж “өргөжсөн” -ийг харна уу.","code":"\ndf_long <- count_data %>% \n  pivot_longer(\n    cols = c(`malaria_rdt_0-4`, `malaria_rdt_5-14`, `malaria_rdt_15`, `malaria_tot`)\n  )\n\ndf_long\n# tidyselect-ын туслах функцуудээр өөрчлөх хүснэгтийг сонго\ncount_data %>% \n  pivot_longer(\n    cols = starts_with(\"malaria_\")\n  )## # A tibble: 12,152 x 8\n##    location_name data_date  submitted_date Province District newid name     \n##    <chr>         <date>     <date>         <chr>    <chr>    <int> <chr>    \n##  1 Facility 1    2020-08-11 2020-08-12     North    Spring       1 malaria_~\n##  2 Facility 1    2020-08-11 2020-08-12     North    Spring       1 malaria_~\n##  3 Facility 1    2020-08-11 2020-08-12     North    Spring       1 malaria_~\n##  4 Facility 1    2020-08-11 2020-08-12     North    Spring       1 malaria_~\n##  5 Facility 2    2020-08-11 2020-08-12     North    Bolo         2 malaria_~\n##  6 Facility 2    2020-08-11 2020-08-12     North    Bolo         2 malaria_~\n##  7 Facility 2    2020-08-11 2020-08-12     North    Bolo         2 malaria_~\n##  8 Facility 2    2020-08-11 2020-08-12     North    Bolo         2 malaria_~\n##  9 Facility 3    2020-08-11 2020-08-12     North    Dingo        3 malaria_~\n## 10 Facility 3    2020-08-11 2020-08-12     North    Dingo        3 malaria_~\n## # ... with 12,142 more rows, and 1 more variable: value <int>\n# байрлалаар нь сонго\ncount_data %>% \n  pivot_longer(\n    cols = 6:9\n  )\n# нэг хэсэг дарааллаасан багануудыг сонгох\ncount_data %>% \n  pivot_longer(\n    cols = `malaria_rdt_0-4`:malaria_tot\n  )\ndf_long <- \n  count_data %>% \n  pivot_longer(\n    cols = starts_with(\"malaria_\"),\n    names_to = \"age_group\",\n    values_to = \"counts\"\n  )\n\ndf_long## # A tibble: 12,152 x 8\n##    location_name data_date  submitted_date Province District newid age_group\n##    <chr>         <date>     <date>         <chr>    <chr>    <int> <chr>    \n##  1 Facility 1    2020-08-11 2020-08-12     North    Spring       1 malaria_~\n##  2 Facility 1    2020-08-11 2020-08-12     North    Spring       1 malaria_~\n##  3 Facility 1    2020-08-11 2020-08-12     North    Spring       1 malaria_~\n##  4 Facility 1    2020-08-11 2020-08-12     North    Spring       1 malaria_~\n##  5 Facility 2    2020-08-11 2020-08-12     North    Bolo         2 malaria_~\n##  6 Facility 2    2020-08-11 2020-08-12     North    Bolo         2 malaria_~\n##  7 Facility 2    2020-08-11 2020-08-12     North    Bolo         2 malaria_~\n##  8 Facility 2    2020-08-11 2020-08-12     North    Bolo         2 malaria_~\n##  9 Facility 3    2020-08-11 2020-08-12     North    Dingo        3 malaria_~\n## 10 Facility 3    2020-08-11 2020-08-12     North    Dingo        3 malaria_~\n## # ... with 12,142 more rows, and 1 more variable: counts <int>\nggplot(data = df_long) +\n  geom_col(\n    mapping = aes(x = data_date, y = counts, fill = age_group),\n    width = 1\n  )\ndf_long %>% \n  filter(age_group != \"malaria_tot\") %>% \n  ggplot() +\n  geom_col(\n    aes(x = data_date, y = counts, fill = age_group),\n    width = 1\n  )\ncount_data %>% \n  pivot_longer(\n    cols = `malaria_rdt_0-4`:malaria_rdt_15,   # нийт тоон үзүүлэлттэй баганыг оруулаагүй\n    names_to = \"age_group\",\n    values_to = \"counts\"\n  )## # A tibble: 9,114 x 9\n##    location_name data_date  submitted_date Province District malaria_tot\n##    <chr>         <date>     <date>         <chr>    <chr>          <int>\n##  1 Facility 1    2020-08-11 2020-08-12     North    Spring            46\n##  2 Facility 1    2020-08-11 2020-08-12     North    Spring            46\n##  3 Facility 1    2020-08-11 2020-08-12     North    Spring            46\n##  4 Facility 2    2020-08-11 2020-08-12     North    Bolo              26\n##  5 Facility 2    2020-08-11 2020-08-12     North    Bolo              26\n##  6 Facility 2    2020-08-11 2020-08-12     North    Bolo              26\n##  7 Facility 3    2020-08-11 2020-08-12     North    Dingo             18\n##  8 Facility 3    2020-08-11 2020-08-12     North    Dingo             18\n##  9 Facility 3    2020-08-11 2020-08-12     North    Dingo             18\n## 10 Facility 4    2020-08-11 2020-08-12     North    Bolo              49\n## # ... with 9,104 more rows, and 3 more variables: newid <int>,\n## #   age_group <chr>, counts <int>"},{"path":"датаг-пивот-хийх.html","id":"олон-ангилалтай-датаг-пивот-хийх","chapter":"12 Датаг пивот хийх","heading":"Олон ангилалтай датаг пивот хийх","text":"Дээрх жишээний коммандыг “pivot longer” болгож хувиргах баганууд бүгд нэг төрлийн утгатай (карактер, тоон, логик г.м) байх нөхцөлд илүү тохиромжтой.Харин талбарын тархвар зүйчээр ажиллаж байхад ихэвчлэн датаг мэргэжлийн бус хүмүүс оруулсан байдгаас стандарт бус логикоор шивэгдсэн олон төрлийн дататай олон учрах болно. Хадлей Викхам Цэгцтэй датан -ны зарчмыг seminal article -тайлбарлахдаа Толстойн үгтэй зүйрлэн “Цэгцтэй дата болгон адил ч бүх гэр бүлд байдагчлан замбараагүй дата болгон өөрийн жамаараа замбараагүй байдаг” гэж тайлбарлажээ.Хамгийн элбэг тохиолддог бэрхшээлүүдийн нэг бол өөр өөр төрлийн дататай багануудыг пивот хийх юм. Ийм датаг пивот хийхэд янз бүрийн дата төрлүүд нэг баганад ордог. Энэ бол сайн арга биш. Энэ үүссэн замбараагүй байдлыг янзлах олон арга буй боловч pivot_longer() -ыг хэрэглэж ийм байдал үүсэхээс та өөрөө сэргийлж болно.А, В, С гурван зүйл тус бүрийг өөр цаг хугацаануудад хэд хэдэн ажиглалт хийсэн нөхцөл байдлыг авч үзье. Ийм нөхцлүүдээс дурьдвал Эболагийн тохиолдлуудад 21 хоног тутамд ажиглах, эсвэл алслгадсан тосгоны эрүүл мэндийн цэгийн үйл ажиллагааг жилд нэг удаа хянаr зэрэг байж болно. Эхний жишээ дээр ажиллаж үзье. Дата дараах байдлаар хадагалгдсан байв:Энэ хүснэгт төвөгтэй байдлаар бичигдсэн байна. Мөр болгон нэг зүйлийн талаарх мэдээллийг бичсэн боловч цаг хугацааны дараалал нь хойшоогоо улам л холдоод байна. Мөн карактер болон огноон баганууд ээлжл орсон байна.Зохиогч миний бие өөр нэгэн их хэцүү байдалтай холерийн тандалтын дататай учирч байлаа. Энэ датанд 4 жилийн турш “өдөр бүр” 8 шинэ ажиглалт нэмэгдэж байсан ба компьютер дээрээ Excel файлыг нь нээх бүрт 10-аас дээш минут зарцуулагддаг байсан!Ийм байдалтай датанууд ажиллахын тулд “урт” форматруу хувиргах хэрэгтэй боловч ажиглалт тус бүрийн огноо, карактер (эрүүл мэндийн байдал) багануудын салангид хэвээр байлгах хэрэгэтэй. Тэгж чадахгүй бол олон хувьсагчуудын холимог нэг баганатай болж хоцрох аюултай (цэгцтэй дата болон дата менежментийн хувьд хамгийн болохгүй зүйл):Өмнөх жишээнд пивот маань огноо болон карактерүүд нэгдэж нэг төрлийн утга агуулсан багана болж орсон. Үүнийг R автоматаар карактер багана болгож хувиргах ба агуулагдах датаг хэрэглэх боломжгүй болдог.Баганын анхны нэрний синтакс бүтцийг ашиглаж ийм байдлаас сэргийлж болно. Баганыг нэрлэх нийтлэг бүтэц байдаг. Үүнд ажиглалтын дугаар, доогуур зураас, “статус” болон “огноо” араас нь бичигдсэн байдаг. Энэ синтаксыг ашиглаж пивот хийсний дараа энэ хоёр төрлийн датаг салангид багана хэвээр байлгаж болно.Үүнийг хийхдээ:Карактер векторуудыг names_to = аргументэд өгөөд, хоёрдугаарт нь \".value\" гэж оруулна. Энэхүү тусгай тэмдэглэгээ нь пивот хийгдэж буй баганын нэрэн дэх карактер дээр үндэслэж хуваагдах болно гэдгийг зааж өгч буй.Мөн “хуваах” карактерийг names_sep = аргументэд зааж өгнө. Доор жишнээд доогуур зураасыг “_” сонгосон.Ингэснээр шинээр үүсэх баганыг нэрлэж, хуваах үйлдэл анхны хувьсагчийн нэрэн дэх доогуур зураасыг тойрч хийгднэ гэсэн үг.Сүүлийн засвар:date багана карактер хэлбэрт байгааг анхаараарай. Үүнийг mutate() болон as_date() функцуудээр тохирсон огноо хэлбэрийн баганад хувиргахад хялбар ([Working dates] хуудаст заасны дагуу ).Мөн observation баганын “obs” гэсэн бичиглэлийг нь хасч тоон форматад оруулна. Үүнийг stringr багцын str_remove_all() функцээр хийж болно ([Characters strings] хуудаст тайлбарласан).Ингээд бид энэхүү дата дээр ажиллаж болохоор боллоо. Жишээ нь дор коммандад heat хавтангаар дескриптив график байгуулж болж байна.","code":"\ndf %>% \n  pivot_longer(\n    cols = -id,\n    names_to = c(\"observation\")\n  )## # A tibble: 18 x 3\n##    id    observation value     \n##    <chr> <chr>       <chr>     \n##  1 A     obs1_date   2021-04-23\n##  2 A     obs1_status Healthy   \n##  3 A     obs2_date   2021-04-24\n##  4 A     obs2_status Healthy   \n##  5 A     obs3_date   2021-04-25\n##  6 A     obs3_status Unwell    \n##  7 B     obs1_date   2021-04-23\n##  8 B     obs1_status Healthy   \n##  9 B     obs2_date   2021-04-24\n## 10 B     obs2_status Healthy   \n## 11 B     obs3_date   2021-04-25\n## 12 B     obs3_status Healthy   \n## 13 C     obs1_date   2021-04-23\n## 14 C     obs1_status Missing   \n## 15 C     obs2_date   2021-04-24\n## 16 C     obs2_status Healthy   \n## 17 C     obs3_date   2021-04-25\n## 18 C     obs3_status Healthy\ndf_long <- \n  df %>% \n  pivot_longer(\n    cols = -id,\n    names_to = c(\"observation\", \".value\"),\n    names_sep = \"_\"\n  )\n\ndf_long## # A tibble: 9 x 4\n##   id    observation date       status \n##   <chr> <chr>       <chr>      <chr>  \n## 1 A     obs1        2021-04-23 Healthy\n## 2 A     obs2        2021-04-24 Healthy\n## 3 A     obs3        2021-04-25 Unwell \n## 4 B     obs1        2021-04-23 Healthy\n## 5 B     obs2        2021-04-24 Healthy\n## 6 B     obs3        2021-04-25 Healthy\n## 7 C     obs1        2021-04-23 Missing\n## 8 C     obs2        2021-04-24 Healthy\n## 9 C     obs3        2021-04-25 Healthy\ndf_long <- \n  df_long %>% \n  mutate(\n    date = date %>% lubridate::as_date(),\n    observation = \n      observation %>% \n      str_remove_all(\"obs\") %>% \n      as.numeric()\n  )\n\ndf_long## # A tibble: 9 x 4\n##   id    observation date       status \n##   <chr>       <dbl> <date>     <chr>  \n## 1 A               1 2021-04-23 Healthy\n## 2 A               2 2021-04-24 Healthy\n## 3 A               3 2021-04-25 Unwell \n## 4 B               1 2021-04-23 Healthy\n## 5 B               2 2021-04-24 Healthy\n## 6 B               3 2021-04-25 Healthy\n## 7 C               1 2021-04-23 Missing\n## 8 C               2 2021-04-24 Healthy\n## 9 C               3 2021-04-25 Healthy\nggplot(data = df_long, mapping = aes(x = date, y = id, fill = status)) +\n  geom_tile(colour = \"black\") +\n  scale_fill_manual(\n    values = \n      c(\"Healthy\" = \"lightgreen\", \n        \"Unwell\" = \"red\", \n        \"Missing\" = \"orange\")\n  )"},{"path":"датаг-пивот-хийх.html","id":"уртаас-өргөнрүү","chapter":"12 Датаг пивот хийх","heading":"12.3 Уртаас өргөнрүү","text":"Зарим тохиолдолд дата хүснэгтийг өргөн хэлбэрт шилжүүлэх хэрэгцээ гардаг. Энэ үйлдэлд pivot_wider() функцыг ашиглаж болно.Жишээ нь анализийн үр дүнг уншигчдад ойлгомжтой хүснэгтээр харуулах үүднээс хүснэгтийг өргөн хэлбэрт хувиргах хэрэгцээ цөөнгүй гардаг (жишээ нь [Table presentation][Tables presentation]). Энэ үед олон мөрүүдэд тархан хадгалагдсан нэг субьектийн мэдээллийг нэг мөрөнд болгож харуулах үйлдэл ихэвчлэн хийгддэг.","code":""},{"path":"датаг-пивот-хийх.html","id":"дата","chapter":"12 Датаг пивот хийх","heading":"Дата","text":"Энэ хэсэгт тохиолдол бүрт нэг мөртэй linelist датаг ашиглана (Preparation хэсэгт тайлбарласан).Эхний 50 мөр:Насны ангилал, хүйсээр нь тохиолдлын тоог харуулахаар бол:Энэхүү хүснэгтээр бид ggplot2 ашиглаж графикаар датаг харуулахад тохиромжтой боловч хүснэгтээр датаг тайлбарлахад тохирмжгүй болж байна.","code":"\ndf_wide <- \n  linelist %>% \n  count(age_cat, gender)\n\ndf_wide##    age_cat gender   n\n## 1      0-4      f 640\n## 2      0-4      m 416\n## 3      0-4   <NA>  39\n## 4      5-9      f 641\n## 5      5-9      m 412\n## 6      5-9   <NA>  42\n## 7    10-14      f 518\n## 8    10-14      m 383\n## 9    10-14   <NA>  40\n## 10   15-19      f 359\n## 11   15-19      m 364\n## 12   15-19   <NA>  20\n## 13   20-29      f 468\n## 14   20-29      m 575\n## 15   20-29   <NA>  30\n## 16   30-49      f 179\n## 17   30-49      m 557\n## 18   30-49   <NA>  18\n## 19   50-69      f   2\n## 20   50-69      m  91\n## 21   50-69   <NA>   2\n## 22     70+      m   5\n## 23     70+   <NA>   1\n## 24    <NA>   <NA>  86\nggplot(df_wide) +\n  geom_col(aes(x = age_cat, y = n, fill = gender))"},{"path":"датаг-пивот-хийх.html","id":"өргөн-хэлбэрт-пивот-хийх","chapter":"12 Датаг пивот хийх","heading":"Өргөн хэлбэрт пивот хийх","text":"Тиймээс pivot_wider() -аар датаг хувиргаж, датаг илүү оновчтой байдлаар харуулсан хүснэгтийг тайланд хавсаргах боломжтой юм.names_from аргументээр аль баганыг ашиглаж шинээр үүсэх баганын нэрсийг үүсгэхийг зааж өгдөг бол values_from аргументээр ямар баганын утгуудыг авч шинэ нүднүүдэд хуваарилахыг зааж өгдөг. Мөн нэмэлтээр id_cols = аргумент байдаг ба үүнд пивот хийхгүй багануудын нэрстэй векторыг зааж өгдөг.Энэ хүснэгт уншихад ойлгомжтой тул тайлан мэдээнд хавсаргахад их тохиромжтой харагдаж байна. Хүснэгтийн өнгө үзэмжийг flextable, knitr зэрэг багцуудаар янзалж болно. Энэ талаар [Tables presentation] хэсэгт илүү тайлбарласан.","code":"\ntable_wide <- \n  df_wide %>% \n  pivot_wider(\n    id_cols = age_cat,\n    names_from = gender,\n    values_from = n\n  )\n\ntable_wide## # A tibble: 9 x 4\n##   age_cat     f     m  `NA`\n##   <fct>   <int> <int> <int>\n## 1 0-4       640   416    39\n## 2 5-9       641   412    42\n## 3 10-14     518   383    40\n## 4 15-19     359   364    20\n## 5 20-29     468   575    30\n## 6 30-49     179   557    18\n## 7 50-69       2    91     2\n## 8 70+        NA     5     1\n## 9 <NA>       NA    NA    86\ntable_wide %>% \n  janitor::adorn_totals(c(\"row\", \"col\")) %>% # adds row and column totals\n  knitr::kable() %>% \n  kableExtra::row_spec(row = 10, bold = TRUE) %>% \n  kableExtra::column_spec(column = 5, bold = TRUE) "},{"path":"датаг-пивот-хийх.html","id":"нөхөх","chapter":"12 Датаг пивот хийх","heading":"12.4 Нөхөх","text":"pivot хийгээд дараа нь bind хийсний дараа зарим тохиолдолд хэдэн нүднүүд хоосон үлдэж, нөхөх шаардлага гардаг.","code":""},{"path":"датаг-пивот-хийх.html","id":"дата-1","chapter":"12 Датаг пивот хийх","heading":"Дата","text":"Жишээ болгож дараах хоёр датасетийг авч үзье. Хоёул хэмжилтийн дугаар, байгууллагын нэр, тохиолдлын тоо агуулсан боловч хоёр дах нь үүн дээр нэмээнд Year гэсэн хувьсагчтай.Хэрэв бид bind_rows() -аар хоёр датаг нэгтгэвэл Year хувьсагчийн (эхний дата дах) мэдээлэлгүй нүднүүд NA болж хувирна.","code":"\ndf1 <- \n  tibble::tribble(\n       ~Measurement, ~Facility, ~Cases,\n                  1,  \"Hosp 1\",     66,\n                  2,  \"Hosp 1\",     26,\n                  3,  \"Hosp 1\",      8,\n                  1,  \"Hosp 2\",     71,\n                  2,  \"Hosp 2\",     62,\n                  3,  \"Hosp 2\",     70,\n                  1,  \"Hosp 3\",     47,\n                  2,  \"Hosp 3\",     70,\n                  3,  \"Hosp 3\",     38,\n       )\n\ndf1 ## # A tibble: 9 x 3\n##   Measurement Facility Cases\n##         <dbl> <chr>    <dbl>\n## 1           1 Hosp 1      66\n## 2           2 Hosp 1      26\n## 3           3 Hosp 1       8\n## 4           1 Hosp 2      71\n## 5           2 Hosp 2      62\n## 6           3 Hosp 2      70\n## 7           1 Hosp 3      47\n## 8           2 Hosp 3      70\n## 9           3 Hosp 3      38\ndf2 <- \n  tibble::tribble(\n    ~Year, ~Measurement, ~Facility, ~Cases,\n     2000,            1,  \"Hosp 4\",     82,\n     2001,            2,  \"Hosp 4\",     87,\n     2002,            3,  \"Hosp 4\",     46\n  )\n\ndf2## # A tibble: 3 x 4\n##    Year Measurement Facility Cases\n##   <dbl>       <dbl> <chr>    <dbl>\n## 1  2000           1 Hosp 4      82\n## 2  2001           2 Hosp 4      87\n## 3  2002           3 Hosp 4      46\ndf_combined <- \n  bind_rows(df1, df2) %>% \n  arrange(Measurement, Facility)\n\ndf_combined## # A tibble: 12 x 4\n##    Measurement Facility Cases  Year\n##          <dbl> <chr>    <dbl> <dbl>\n##  1           1 Hosp 1      66    NA\n##  2           1 Hosp 2      71    NA\n##  3           1 Hosp 3      47    NA\n##  4           1 Hosp 4      82  2000\n##  5           2 Hosp 1      26    NA\n##  6           2 Hosp 2      62    NA\n##  7           2 Hosp 3      70    NA\n##  8           2 Hosp 4      87  2001\n##  9           3 Hosp 1       8    NA\n## 10           3 Hosp 2      70    NA\n## 11           3 Hosp 3      38    NA\n## 12           3 Hosp 4      46  2002"},{"path":"датаг-пивот-хийх.html","id":"fill","chapter":"12 Датаг пивот хийх","heading":"fill()","text":"Энэ тохиолдолд Year бол цаг хугацааны явцыг харуулдаг хэрэгтэй хувьсагч тул байлгаж байх нь чухал. Ингэхдээ fill() функцын аргументэд нөхөх шаардлагатай баганууд болно чиглэлийг (энэ тохиолдолд дээш/) зааж өгч тэдгээр хоосон нүднүүдийг нөхөж болно :Мөн датаг дахин эрэмбэлсний дараа нөхөх чиглэлийг доош чиглэлтэй болгож болно:Одоо бид энэхүү хүснэгтийг ашиглан график байгуулах боломжтой боллоо:Харин энэ хүснэгтээр датаг танилцуулахад тийм ч тохиромжтой биш тул урт, цэгцгүй датаг өргөн цэгцтэй хэлбэрт хүснэгтлэн харуулья:Энэ тохиолдолд бид зөвхөн Facility, Year, Cases гэсэн гурван хувьсагчийг л оруулахыг зааж өгсөн ба хүснэгтийн бүтцэд таарахгүй учраас Measurement хувьсагчийг нэмж оруулаагүй:","code":"\ndf_combined %>% \n  fill(Year, .direction = \"up\")## # A tibble: 12 x 4\n##    Measurement Facility Cases  Year\n##          <dbl> <chr>    <dbl> <dbl>\n##  1           1 Hosp 1      66  2000\n##  2           1 Hosp 2      71  2000\n##  3           1 Hosp 3      47  2000\n##  4           1 Hosp 4      82  2000\n##  5           2 Hosp 1      26  2001\n##  6           2 Hosp 2      62  2001\n##  7           2 Hosp 3      70  2001\n##  8           2 Hosp 4      87  2001\n##  9           3 Hosp 1       8  2002\n## 10           3 Hosp 2      70  2002\n## 11           3 Hosp 3      38  2002\n## 12           3 Hosp 4      46  2002\ndf_combined <- \n  df_combined %>% \n  arrange(Measurement, desc(Facility))\n\ndf_combined## # A tibble: 12 x 4\n##    Measurement Facility Cases  Year\n##          <dbl> <chr>    <dbl> <dbl>\n##  1           1 Hosp 4      82  2000\n##  2           1 Hosp 3      47    NA\n##  3           1 Hosp 2      71    NA\n##  4           1 Hosp 1      66    NA\n##  5           2 Hosp 4      87  2001\n##  6           2 Hosp 3      70    NA\n##  7           2 Hosp 2      62    NA\n##  8           2 Hosp 1      26    NA\n##  9           3 Hosp 4      46  2002\n## 10           3 Hosp 3      38    NA\n## 11           3 Hosp 2      70    NA\n## 12           3 Hosp 1       8    NA\ndf_combined <- \n  df_combined %>% \n  fill(Year, .direction = \"down\")\n\ndf_combined## # A tibble: 12 x 4\n##    Measurement Facility Cases  Year\n##          <dbl> <chr>    <dbl> <dbl>\n##  1           1 Hosp 4      82  2000\n##  2           1 Hosp 3      47  2000\n##  3           1 Hosp 2      71  2000\n##  4           1 Hosp 1      66  2000\n##  5           2 Hosp 4      87  2001\n##  6           2 Hosp 3      70  2001\n##  7           2 Hosp 2      62  2001\n##  8           2 Hosp 1      26  2001\n##  9           3 Hosp 4      46  2002\n## 10           3 Hosp 3      38  2002\n## 11           3 Hosp 2      70  2002\n## 12           3 Hosp 1       8  2002\nggplot(df_combined) +\n  aes(Year, Cases, fill = Facility) +\n  geom_col()\ndf_combined %>% \n  pivot_wider(\n    id_cols = c(Facility, Year, Cases),\n    names_from = \"Year\",\n    values_from = \"Cases\"\n  ) %>% \n  arrange(Facility) %>% \n  janitor::adorn_totals(c(\"row\", \"col\")) %>% \n  knitr::kable() %>% \n  kableExtra::row_spec(row = 5, bold = TRUE) %>% \n  kableExtra::column_spec(column = 5, bold = TRUE) \ndf_combined %>% \n  pivot_wider(\n    names_from = \"Year\",\n    values_from = \"Cases\"\n  ) %>% \n  knitr::kable()"},{"path":"датаг-пивот-хийх.html","id":"нэмэлт-мэдээллүүд","chapter":"12 Датаг пивот хийх","heading":"12.5 Нэмэлт мэдээллүүд","text":"Энд хэрэгтэй хичээлүүд буй tutorial","code":""},{"path":"датаг-бүлэглэх.html","id":"датаг-бүлэглэх","chapter":"13 Датаг бүлэглэх","heading":"13 Датаг бүлэглэх","text":"Энэ хуудсанд дескриптив анализэд зориулж өгөгдлийг хэрхэн бүлэглэх, нэгтгэх талаар тусгасан болно. Үүнийг гүйцэтгэхэд энгийн, хэрэглэхэд хялбар функцуудтэй tidyverse багцуудыг ашигладх болно.Датаг бүлэглэх үйлдэл бол дата менежмент, дата дүн шинжилгээний үндсэн элэмент мөн. Датаг статистикийн үзүүлэлтээр бүлэглэн шинжилж, график зураглалыг бүлгээр нь тус бүр харуулдаг.dplyr багцын (tidyverse харьяа ) функцууд бүлэглэх болон үүнтэй холбоотой бусад үйлдлүүдийг гүйцэтгэхэд хялбар болгодог.Энэхүү хуудаст дараах сэдвүүдийн талаар оруулсан:group_by() функцээр бүлэглэгдсэн датаДатандах бүлгийг задлахбүлэглэсэн датаг функцээр summarise() статистикийн үзүүлэлтүүдийг харуулахcount() болон tally() функцуудын ялгааБүлэглэсэн датанд arrange() -ыг хэрэглэхБүлэглэсэн датанд filter() -ыг хэрэглэхБүлэглэсэн датанд mutate() -ыг хэрэглэхБүлэглэсэн датанд select() -ыг хэрэглэхbase R -ын aggregate() коммандыг хэрэглэх","code":""},{"path":"датаг-бүлэглэх.html","id":"бэлтгэл-4","chapter":"13 Датаг бүлэглэх","heading":"13.1 Бэлтгэл","text":"","code":""},{"path":"датаг-бүлэглэх.html","id":"багцыг-ачааллах-2","chapter":"13 Датаг бүлэглэх","heading":"Багцыг ачааллах","text":"Энэ хэсэгт анализ хийхэд шаардлагатай багцуудыг доорхи кодоор ачааллана.pacman багцын p_load() функцээр шаардлагатай багцыг татаж аваад ачааллана уу. Өмнө татаж авсан багцуудаа base R -ын library()-аар ачааллаж болно. Багцын талаарх нэмэлт мэдээллийг [R basics] хэсгээс харна уу.","code":"\npacman::p_load(\n  rio,       # Файлыг импортлох\n  here,      # Файлыг байрлуулах\n  tidyverse, # датаг цэвэрлэх, янзлах, график байгуулах (dplyr-г орно)\n  janitor)   # мөр, баганын нийт дүнг нэмнэ"},{"path":"датаг-бүлэглэх.html","id":"импорт-дата","chapter":"13 Датаг бүлэглэх","heading":"Импорт дата","text":"Энэ хэсэгт Эболагийн дэгдэлтийн үеийн зохиомол датаг ашиглах болно. Дагаж дасгалыг ажиллах бол линк дээр дарж “цэвэр” linelist татаж авна уу  (.rds file). Датагаа rio багцын import() функцээр импортло (энэ функц .xlsx, .csv, .rds зэрэг олон өргөтгөлтэй ажиллаж чаддаг [Import export] хуудаст нэмж тайлбарласан).Эхний 50 мөр linelist:","code":"\nlinelist <- import(\"linelist_cleaned.rds\")"},{"path":"датаг-бүлэглэх.html","id":"бүлэглэх","chapter":"13 Датаг бүлэглэх","heading":"13.2 Бүлэглэх","text":"dplyr -ын group_by() функц зааж өгсөн багана дах өвөрмөц утгын дагуу мөрүүдийг бүлэглэх болно. Ингэхдээ олон багана зааж өгвөл, мөрүүд эдгээр багануудын хооронд үүссэн өвөрмөц комбинацын дагуу бүлэглэгдэх болно. Өвөрмөц утга болгон (комбинац болгон) бүлэг бий болгоно. Ингэсний датанд хийгдэх аливаа өөрчлөлт, тооцоо зэрэг нь бүлэг тус бүрээр хийгдэх болно.Жишээлбэл дараах коммандаар linelist хүснэгтийн outcome баганын утгуудаар мөрүүдийг бүлэглэсэн байна. Үүний дүнд үүсэх хүснэгтийгll_by_outcome-д хадгалсан. Бүлэглэх багануудыг group_by() функцэд хаалтан дотор бичнэ.group_by()коммандыг өгснөөр датанд мэдэгдэхүйц өөрчлөлт гарахгүй. Харин энэхүү бүлэглэсэн датанд mutate(), summarise(), arrange() зэрэг dplyr-ын бусад функцыг уншуулсны дараа өөрчлөлт хийгдэж эхэлдэг болохыг анхаар.Гэхдээ хүснэгтийг хэвлэснээр бүлэглэсэн датаг харж болно. Хэвлээд үзвэл хүснэгт tibble хэлбэрт орсон байх ба tibble class object ямар бүлгүүд, хэд бүлэглэгдсэн зэрэг мэдээлэл толгой мөрний дээр бичигдсэн байдаг.","code":"\nll_by_outcome <- linelist %>% \n  group_by(outcome)\n# идвэхитэй ямар бүлгүүд байгааг хэвлэж хар\nll_by_outcome## # A tibble: 5,888 x 30\n## # Groups:   outcome [3]\n##    case_id generation date_infection date_onset date_hospitalisation\n##    <chr>        <dbl> <date>         <date>     <date>              \n##  1 5fe599           4 2014-05-08     2014-05-13 2014-05-15          \n##  2 8689b7           4 NA             2014-05-13 2014-05-14          \n##  3 11f8ea           2 NA             2014-05-16 2014-05-18          \n##  4 b8812a           3 2014-05-04     2014-05-18 2014-05-20          \n##  5 893f25           3 2014-05-18     2014-05-21 2014-05-22          \n##  6 be99c8           3 2014-05-03     2014-05-22 2014-05-23          \n##  7 07e3e8           4 2014-05-22     2014-05-27 2014-05-29          \n##  8 369449           4 2014-05-28     2014-06-02 2014-06-03          \n##  9 f393b4           4 NA             2014-06-05 2014-06-06          \n## 10 1389ca           4 NA             2014-06-05 2014-06-07          \n## # ... with 5,878 more rows, and 25 more variables: date_outcome <date>,\n## #   outcome <chr>, gender <chr>, age <dbl>, age_unit <chr>,\n## #   age_years <dbl>, age_cat <fct>, age_cat5 <fct>, hospital <chr>,\n## #   lon <dbl>, lat <dbl>, infector <chr>, source <chr>, wt_kg <dbl>,\n## #   ht_cm <dbl>, ct_blood <dbl>, fever <chr>, chills <chr>, cough <chr>,\n## #   aches <chr>, vomit <chr>, temp <dbl>, time_admission <chr>, bmi <dbl>,\n## #   days_onset_hosp <dbl>"},{"path":"датаг-бүлэглэх.html","id":"өвөрмөц-бүлгүүд","chapter":"13 Датаг бүлэглэх","heading":"Өвөрмөц бүлгүүд","text":"Бүлэг үүсгэж багануудын утгууд солбиж нэгдэн бүрдүүлсэн өвөрмөц комбинац болгон бүлэг юм.Үүссэн бүлэг болон бүлэг тус бүрт хамрах мөрийн тоог  харахдаа tally()функцэд баганыг оруул. Хэрэв зөвхөн үүссэн өвөрмөц бүлгүүдийн нэрсийг харах бол group_keys() коммандыг өг.Доорх жишээнд бүлэг үүсгэж буй outcome баганад гурван өвөрмөц утга байна: “Death”, “Recover”, NA. Нийт мөрийн тоо нас баралтад (deaths)nrow(linelist %>% filter(outcome == \"Death\")), эдгэрэлтэд (recoveries)nrow(linelist %>% filter(outcome == \"Recover\")) , эмчилгээний үр дүн бичигдээгүй мөр nrow(linelist %>% filter(.na(outcome))) байсан.Нэгээс дээш тооны баганыг ашиглаж бүлэглэж болно. Доор жишээнд хүснэгтийг outcome болон gender баганын дагуу бүлэглээд бүртгэлийг tally() -аар харуулсан байна. Үүнээс outcome болон gender багануудын утгууд нийлж хичнээн бүлэг үүсгэж буйг хараарай (хоёр баганын дутуу утгуудын комбинацаар үүссэн бүлгүүд мөн орно).","code":"\nlinelist %>% \n  group_by(outcome) %>% \n  tally()## # A tibble: 3 x 2\n##   outcome     n\n##   <chr>   <int>\n## 1 Death    2582\n## 2 Recover  1983\n## 3 <NA>     1323\nlinelist %>% \n  group_by(outcome, gender) %>% \n  tally()## # A tibble: 9 x 3\n## # Groups:   outcome [3]\n##   outcome gender     n\n##   <chr>   <chr>  <int>\n## 1 Death   f       1227\n## 2 Death   m       1228\n## 3 Death   <NA>     127\n## 4 Recover f        953\n## 5 Recover m        950\n## 6 Recover <NA>      80\n## 7 <NA>    f        627\n## 8 <NA>    m        625\n## 9 <NA>    <NA>      71"},{"path":"датаг-бүлэглэх.html","id":"шинэ-багана-1","chapter":"13 Датаг бүлэглэх","heading":"Шинэ багана","text":"Мөн group_by() дотор бүлэглэх шинэ баганыг оруулж бичиж болно. Энэ нь group_by()хийхийн өмнө mutate() хийхьэй адил үйлдэл юм. Богино хугацаанд бүлэглэсэн хүснэгт үүсгэх үед энэ аргыг хэрэглэх нь хялбар боловч кодоо илүү тодорхой болгох үүднээс шинээр үүсгэх баганаа тусдаа mutate() -аар үүсгэж араас нь group_by()-ыг pipe хийх нь илүү оновчтой байх болно.","code":"\n# group_by() комманд дотор үүсгэсэн binary баганын дагуу датаг бүлэглэсэн\nlinelist %>% \n  group_by(\n    age_class = ifelse(age >= 18, \"adult\", \"child\")) %>% \n  tally(sort = T)## # A tibble: 3 x 2\n##   age_class     n\n##   <chr>     <int>\n## 1 child      3618\n## 2 adult      2184\n## 3 <NA>         86"},{"path":"датаг-бүлэглэх.html","id":"бүлэглэх-баганыг-нэмжхасах","chapter":"13 Датаг бүлэглэх","heading":"Бүлэглэх баганыг нэмж/хасах","text":"Хэрэв өмнө нь бүлэглэсэн байсан датанд group_by() коммандыг уншуулахад хуучин бүлэг арилж шинэ бүлэг үүсдэг. Хэрэв хуучин бүлэг дээр нэмж бүлэг оруулах бол .add = TRUE аргументэд нэмж зааж өг.** Бүх бүлгийг үлдээх**Хэрэв фактор ангилалтай баганаар бүлэг үүсгэж байх явцад тухайн ангиллын аль нэг түвшинд хамрах утга датанд байхгүй байж болно. Энэ үед энэхүү хоосон түвшин хасагдаж, энэ түвшинд бүлэг үүсэхгүй. Хэрэв тухайн утга датанд байхгүй байсан ч гэсэн бүлэг болж орох шаардлагатай бол .drop = FALSE гэж group_by()-ын аргументийг тохируул.","code":"\n# outcome баганын дагуу бүлэглэгдсэн\nby_outcome <- linelist %>% \n  group_by(outcome)\n\n# gender  баганын дагуу нэмж бүлэглэ\nby_outcome_gender <- by_outcome %>% \n  group_by(gender, .add = TRUE)"},{"path":"датаг-бүлэглэх.html","id":"бүлгийг-задлах","chapter":"13 Датаг бүлэглэх","heading":"13.3 Бүлгийг задлах","text":"Тусгайлан ungroup() гэсэн коммандаар задлахаас нааш бүлэг датанд оршсоор байх болно. Хэрэв бүлгийг буцааж задлахаа мартвал буруу тооцоололд хүрэх аюултай ! Доор жишээнд хэрхэн бүх бүлгийг задлахыг харуулав:Мөн тодорхой нэг баганыг ungroup() дотор оруулж комманд өгснөөр зөвхөн тухайн баганын бүлгийг л арилгаж болно.ТЭМДЭГЛЭЛ: count() функцыг уншуулсны дараа бүлгүүд автоматаар буцаж задардаг .","code":"\nlinelist %>% \n  group_by(outcome, gender) %>% \n  tally() %>% \n  ungroup()\nlinelist %>% \n  group_by(outcome, gender) %>% \n  tally() %>% \n  ungroup(gender) # gender-ын бүлгийг арилгаж, outcome-ын бүлэгүүдийг үлдээ"},{"path":"датаг-бүлэглэх.html","id":"group_summarise","chapter":"13 Датаг бүлэглэх","heading":"13.4 Нэгтгэх","text":"[Descriptive tables] хуудсын dplyr -ын талаар бичсэн хэсэгт summarise() функцээр хэрхэн хураангуй хүснэгт үүсгэх талаар илүү тайлбарласан. Энд гол тайлбарлах зүйл бол бүлэг үүсгэснээр энэ үйлдлйин хэв шинж нь хэрхэн өөрчлөгдөхийг товчхон харуулна.dplyr -ын summarise() (эсвэл summarize()) функц хүснэгтэндэх датаг янзалж баганууддаа статистик дүнтэй хураагуй хүснэгтийг шинээр үүсгэдэг. Бүлэглээгүй датанп статистикийн дүн бүх мөрөнд тооцоолсны дүнд тавигддаг. Харин бүлэглэсэн датанд summarise()-ыг оруулбал статистикийн тооцоо бүлэг тус бүрт бодогддог.summarise() -ын синтаксыг бичихдээ эхлээд шинэ үүсгэх тооцооны дүнтэй баганын нэрс, тэнцүүгийн тэмдэг, датанд хийх статистикийн бодолт хийх функцыг бичнэ.Жишээ нь min(), max(), median(), sd() зэрэг статистик функцууд байж болно. Статистикийн функцууд дотор бодолтод оролцох баганууд болон бусад нэмэнлт аргументуудыг (na.rm = TRUE гэх мэт) бичнэ. Мөн sum() -ыг хэрэглэж логик шалгуурт тэнцсэн мөрийн тоог гаргаж болно (давхар тэнцүүгийн тэмдэгтэйгээр ==).Дор жишээнд summarise() -ыг бүлэглээгүй датанд хэрэглэсэн байна. Статистикийн дүн нь нийт бүх мөрөнд тооцоолол хийсний дүнд гарсан.Харин удаах жишээнд summarise() функцийг бүлэглэсэн дата дээр ашиглаж байна. outcome баганын бүлэг тус бүрт статистикийн бодолт хийгдсэн. Бүлэглэсэн баганууд шинэ датафрэйм рүү хэрхэн шилжиж буйг анхаарна уу.ЗӨВЛӨГӨӨ: summarise функцын UK (summarise()) болон US (summarize()) хувилбарууд ижил. ","code":"\n# бүлэглээгүй linelist дээр статистикийн хураангуй бодож гаргах\nlinelist |> \n  summarise(\n    n_cases  = n(),\n    mean_age = mean(age_years, na.rm=T),\n    max_age  = max(age_years, na.rm=T),\n    min_age  = min(age_years, na.rm=T),\n    n_males  = sum(gender == \"m\", na.rm=T))##   n_cases mean_age max_age min_age n_males\n## 1    5888 16.01831      84       0    2803\n# бүлэглэсэн linelist дээр статистикийн хураангуй бодож гаргах\nlinelist %>% \n  group_by(outcome) %>% \n  summarise(\n    n_cases  = n(),\n    mean_age = mean(age_years, na.rm=T),\n    max_age  = max(age_years, na.rm=T),\n    min_age  = min(age_years, na.rm=T),\n    n_males    = sum(gender == \"m\", na.rm=T))## # A tibble: 3 x 6\n##   outcome n_cases mean_age max_age min_age n_males\n##   <chr>     <int>    <dbl>   <dbl>   <dbl>   <int>\n## 1 Death      2582     15.9      76       0    1228\n## 2 Recover    1983     16.1      84       0     950\n## 3 <NA>       1323     16.2      69       0     625"},{"path":"датаг-бүлэглэх.html","id":"тоолж-бүртгэх","chapter":"13 Датаг бүлэглэх","heading":"13.5 Тоолж, бүртгэх","text":"count() болон tally() төстэй үйлдэл хийдэг боловч өөр. tally() болон count()-н лгааны талаар -ээс олж уншна уу.","code":""},{"path":"датаг-бүлэглэх.html","id":"tally","chapter":"13 Датаг бүлэглэх","heading":"tally()","text":"tally() бол summarise(n = n())коммандын богино хувилбар ба датаг бүлэглэдэггүй. Тиймээс бүлэглэсэн датанд хэрэглэх бол group_by() -ын араас залгуулж хэрэглэдэг. Мөн үүн дээр sort = TRUE гэж аргументийг тохируулснаар хамгийн том бүлгийг эхэнд жагсааж болно.","code":"\nlinelist %>% \n  tally()##      n\n## 1 5888\nlinelist %>% \n  group_by(outcome) %>% \n  tally(sort = TRUE)## # A tibble: 3 x 2\n##   outcome     n\n##   <chr>   <int>\n## 1 Death    2582\n## 2 Recover  1983\n## 3 <NA>     1323"},{"path":"датаг-бүлэглэх.html","id":"count","chapter":"13 Датаг бүлэглэх","heading":"count()","text":"Харин count() функц дараах үйлдлүүдийг хийдэг:тодорхой заасан багануудад group_by()-г хэрэглэдэг.summarise() хэрэглэсний дүнд n баганад бүлэг тус бүр хэдэн мөр агуулагдаж буйг тоолж гаргадаг.мөн ungroup() хийгддэг.group_by() -ийн адил count() комманд бас шинэ багана үүсгэдэг:count() функцыг олон дахин дуудаж болно (өнхрүүлэх байдлаар). Жишээ нь хүйс тус бүрт ноогдох эмнэлэгийн тоог гаргахдаа доорх коммандыг өгнө. Хамгийн арын багана нь автоматаар “n” гэж нэрлэгдсэн байснаа ( name  = аргументээр) өөрчлөгдөж илүү тодорхой нэртэй болсон байна.","code":"\nlinelist %>% \n  count(outcome)##   outcome    n\n## 1   Death 2582\n## 2 Recover 1983\n## 3    <NA> 1323\nlinelist %>% \n  count(age_class = ifelse(age >= 18, \"adult\", \"child\"), sort = T)##   age_class    n\n## 1     child 3618\n## 2     adult 2184\n## 3      <NA>   86\nlinelist %>% \n  # outcome-gender -ын хавсарч үүссэн бүлгүүдэд ноогдох мөрийг тоолох\n  count(gender, hospital) %>% \n  # gather rows by gender (3) and count number of hospitals per gender (6)\n  count(gender, name = \"hospitals per gender\" ) ##   gender hospitals per gender\n## 1      f                    6\n## 2      m                    6\n## 3   <NA>                    6"},{"path":"датаг-бүлэглэх.html","id":"тооллого-нэмэх","chapter":"13 Датаг бүлэглэх","heading":"Тооллого нэмэх","text":"Мөн add_count()-ээр тооллого хийж болох боловч count() болонsummarise()-ээс ялгаатай. Энэ функцыг хэрэглэснээр хуучин хүснэгт бүхлээрээ өөрчлөгдөхгүй хэвээр байх ба бүлэг бүрийн тоог гаргасан шинэ n гэсэн багана нэмэгддэг.Өөрөөр хэлбэл шинэ n баганадах бүлэг тус бүрт агуулагдах мөрийн тоо тухайн бүлэгт хамаарах мөр болгонд бичигдэх болно гэсэн үг. Доор жишээнд ойлгомжтой харуулах үүднээс баганыг нэмээд дараа нь эрэмбэнд өөрчлөлт оруулсан болно. Мөн filter group size хэсэгт өөр нэгэн жишээ харуулсаныг олж үзнэ үү.","code":"\nlinelist %>% \n  as_tibble() %>%                   # tibble болгож харагдах байдлыг сайжруулна\n  add_count(hospital) %>%           # эмнэлэгийн тоотой n баганыг нэм \n  select(hospital, n, everything()) # харахад хялбар болгох үүднээс дахин эрэмбэл## # A tibble: 5,888 x 31\n##    hospital                   n case_id generation date_infection date_onset\n##    <chr>                  <int> <chr>        <dbl> <date>         <date>    \n##  1 Other                    885 5fe599           4 2014-05-08     2014-05-13\n##  2 Missing                 1469 8689b7           4 NA             2014-05-13\n##  3 St. Mark's Maternity ~   422 11f8ea           2 NA             2014-05-16\n##  4 Port Hospital           1762 b8812a           3 2014-05-04     2014-05-18\n##  5 Military Hospital        896 893f25           3 2014-05-18     2014-05-21\n##  6 Port Hospital           1762 be99c8           3 2014-05-03     2014-05-22\n##  7 Missing                 1469 07e3e8           4 2014-05-22     2014-05-27\n##  8 Missing                 1469 369449           4 2014-05-28     2014-06-02\n##  9 Missing                 1469 f393b4           4 NA             2014-06-05\n## 10 Missing                 1469 1389ca           4 NA             2014-06-05\n## # ... with 5,878 more rows, and 25 more variables:\n## #   date_hospitalisation <date>, date_outcome <date>, outcome <chr>,\n## #   gender <chr>, age <dbl>, age_unit <chr>, age_years <dbl>,\n## #   age_cat <fct>, age_cat5 <fct>, lon <dbl>, lat <dbl>, infector <chr>,\n## #   source <chr>, wt_kg <dbl>, ht_cm <dbl>, ct_blood <dbl>, fever <chr>,\n## #   chills <chr>, cough <chr>, aches <chr>, vomit <chr>, temp <dbl>,\n## #   time_admission <chr>, bmi <dbl>, days_onset_hosp <dbl>"},{"path":"датаг-бүлэглэх.html","id":"нийт-дүнг-нэм","chapter":"13 Датаг бүлэглэх","heading":"Нийт дүнг нэм","text":"Нийт дүнг хялбар нэмэх арга бол tally() эсвэл count() хэрэглэсний дараа мөр, баганын нийлбэрийг гаргах хэрэгтэй. Үүнийг Descriptive tables хуудасны janitor багцыг тайлбарласн хэсгээс үзнэ үү. Энэ багцад adorn_totals(), adorn_percentages() зэрэг нийт дүнг нэмж, хувь болгох гэх мэт олон функцууд агуулагддаг. Доор товч жишээ харуулья:Нийлбэрээс өөр нарийн статистикийн бодолтыг мөр дагуу бодож гаргах бол section Descriptive Tables page хэсгээс харна уу.","code":"\nlinelist %>%                                  # case linelist\n  tabyl(age_cat, gender) %>%                  # хоёр баганыг солбиж-хүснэгтлэн тоолох \n  adorn_totals(where = \"row\") %>%             # нийт мөрийн нийлбэр\n  adorn_percentages(denominator = \"col\") %>%  # баганын нийлбэрийг деноминатор (хуваариар) тооцож хувийг гаргах\n  adorn_pct_formatting() %>%                  # пропорцыг хувь болгож хувиргах\n  adorn_ns(position = \"front\") %>%            # : \"тоо (хувь)\" гэж харуулах\n  adorn_title(                                # гарчигийг янзлах\n    row_name = \"Age Category\",\n    col_name = \"Gender\")##                      Gender                           \n##  Age Category             f             m          NA_\n##           0-4  640  (22.8%)  416  (14.8%)  39  (14.0%)\n##           5-9  641  (22.8%)  412  (14.7%)  42  (15.1%)\n##         10-14  518  (18.5%)  383  (13.7%)  40  (14.4%)\n##         15-19  359  (12.8%)  364  (13.0%)  20   (7.2%)\n##         20-29  468  (16.7%)  575  (20.5%)  30  (10.8%)\n##         30-49  179   (6.4%)  557  (19.9%)  18   (6.5%)\n##         50-69    2   (0.1%)   91   (3.2%)   2   (0.7%)\n##           70+    0   (0.0%)    5   (0.2%)   1   (0.4%)\n##          <NA>    0   (0.0%)    0   (0.0%)  86  (30.9%)\n##         Total 2807 (100.0%) 2803 (100.0%) 278 (100.0%)"},{"path":"датаг-бүлэглэх.html","id":"он-сараар-бүлэглэх","chapter":"13 Датаг бүлэглэх","heading":"13.6 Он сараар бүлэглэх","text":"Огноогоор бүлэглэхдээ огнооны нэгжийг (өдөр, тархварзүйн долоо хоног, сар гэх мэт) бичих нэг илүү багана байлгах (үүсгэх) хэрэг гардаг. Үүнийг [Working dates] хуудасны Epidemiological weeks section хэсэгт заасны дагуу lubridate-ын floor_date() -аар үүсгэж болно. Энэ баганыг үүсгэсний дараа dplyr-ын count() -аар мөрүүдийг огноогоор бүлэглэж, нэгтгэсэн тоог гаргаж болно.Огноотой ажиллаж байхад нэмэлтээр хийгддэг өөр нэгэн нийтлэг алхам бол датанд байхгүй ямар нэг огноог дарааллын дагуу “бөглөх” юм.\nНэгтгэгдсэн огнооны дараалалд tidyr-ын complete() -ыг хэрэглэвэл тухайн хүрээнд байж болох бүх нэгжийг оруулан огнооны дараалалгүйцэд болддог. Энэ алхмыг хийгэгүй тохиолдолд өвчин илрээгүй долоо хоногууд датанд харагдахгүй!Ингэхдээ complete() дотор огноотой баганаа seq.Date()-ийн багаас ихсэх дарааллаар дахин зааж өгөх хэрэгтэй бөгөөд, улмаар огнооны дараалал өргөжих болно. Энэхүү өргөжиж нэмэгдсэн шинэ огноонд тохиолдлын тоо NA гэж гарч ирдэг. Үүнийг complete()-ын fill = аргументэд 0 гэж зааж өгч засаж болно. expects named list (хэрэв тохиолдлын тоотой баганын нэр n гэж нэрлэгдсэн байгаа бол fill = list(n = 0) гэж зааж өгнө. Энэ аргументийн өгөдөл нэртэй list байдаг. Энэ талаар ?complete хуудас болон Working dates хуудасны жишээнүүдэд илүү тайлбарласан ).","code":""},{"path":"датаг-бүлэглэх.html","id":"linelist-тохиолдлуудыг-өдөр-бүрээр-бүлэглэх","chapter":"13 Датаг бүлэглэх","heading":"Linelist тохиолдлуудыг өдөр бүрээр бүлэглэх","text":"Эндcomplete()функцыг хэрэглээгүй байдлаар тохиолдлын тоог өдрөөр бүлэглэх коммандыг харуулав. Тохиолдол илрээгүй эхний өдрүүдийг алгасч харуулсан байгааг анзаарна уу.Энд complete() коммандыг ашиглаж тодорхой хугацаандах бүх өдрүүдийг гарч ирдэг болгоё.","code":"\ndaily_counts <- linelist %>% \n  drop_na(date_onset) %>%        # date_onset бичигдээгүй тохиолдлуудыг арилгана\n  count(date_onset)              # огноо бүрт ноогдох тохиолдлын тоог тоол\ndaily_counts <- linelist %>% \n  drop_na(date_onset) %>%                 # date_onset бичигдээгүй тохиолдлуудыг арилгана\n  count(date_onset) %>%                   # огноо бүрт ноогдох тохиолдлын тоог тоол\n  complete(                               # тохиолдол илрээгүй ч бүх өдөр харагдах болно\n    date_onset = seq.Date(                # огноотой баганыг өдөр тутмыг харуулсан байдлаар зааж өгнө.\n      from = min(date_onset, na.rm=T), \n      to = max(date_onset, na.rm=T),\n      by = \"day\"),\n    fill = list(n = 0))                   # n баганын 0 тохиолдолтой мөрүүдийг бөглөх  ( автоматаар гарах NA-ын оронд) "},{"path":"датаг-бүлэглэх.html","id":"linelist-тохиолдлуудыг-долоо-хоног-бүрээр-бүлэглэх","chapter":"13 Датаг бүлэглэх","heading":"Linelist тохиолдлуудыг долоо хоног бүрээр бүлэглэх","text":"Долоо хоног бүрийн тоог мөн дээрхитэй адил зарчмаар хийнэ. Эхлээд floor_date() -ын нэгжийг unit = \"week\"хэмээн тохируулж тохиолдол бүрийн илэрсэн дотоо хоногийн дугаарыг тавьна. Дараа ньcount() -аар дээрхийн адил долоо хоног бүрт ноогдох тохиолдлын тоог харуулна. Энэ комманд дээрээ complete() -ыг нэмбэл тохиолдол илрээгүй ч гэсэн бүх долоо хоног харуулах болно.Шинээр байгуулсан хүснэгтийн эхний 50 мөрийг дор харуулав:","code":"\n# Тохиолдлын тоог долоо хоног бүрээр харуулсан хүснэгт байгуул\nweekly_counts <- linelist %>% \n  drop_na(date_onset) %>%                 # date_onset бичигдээгүй тохиолдлуудыг арилгана\n  mutate(week = lubridate::floor_date(date_onset, unit = \"week\")) %>%  # өвчин эхлэл бүртгэгдсэн долоо хоногийн дугаартай багана\n  count(week) %>%                         # долоо хоног бүрээр датаг бүлэглэж, бүлэг бүрт ноогдох мөрийн тоог тоол\n  complete(                               # тохиолдол илрээгүй ч гэсэн бүх долоо хоногууд гарч ирдэг болго \n    week = seq.Date(                      # огноотой баганыг өдөр тутмыг харуулсан байдлаар зааж өгнө.\n      from = min(week, na.rm=T), \n      to = max(week, na.rm=T),\n      by = \"week\"),\n    fill = list(n = 0))                   # n баганын 0 тохиолдолтой мөрүүдийг бөглөх  ( автоматаар гарах NA-ын оронд)  "},{"path":"датаг-бүлэглэх.html","id":"linelist-тохиолдлуудыг-сар-бүрээр-бүлэглэх","chapter":"13 Датаг бүлэглэх","heading":"Linelist тохиолдлуудыг сар бүрээр бүлэглэх","text":"Тохиолдлыг сар бүрээр харуулахад мөн lubridate багцын floor_date() -ыг хэрэглэнэ. Гэхдээ нэгжийн аргументэд unit = \"months\" гэж тохируулна. Ингэснээр огноо бүр тухайн сарынхаа эхний өдөрт хураагддаг. Үүний үр дүнд огноо хэлбэрийн дататай багана үүснэ. Энэ үед complete() алхмыг хийхдээ = \"months\" гэж аргументээ тохируулна гэдгийг анхаарна уу.","code":"\n# Тохиолдлын тоог сар бүрээр харуулсан хүснэгт байгуул\nmonthly_counts <- linelist %>% \n  drop_na(date_onset) %>% \n  mutate(month = lubridate::floor_date(date_onset, unit = \"months\")) %>%  # шинэ багана, өвчин эхэлсэн сарын эхний өдөр\n  count(month) %>%                          # сар бүрт ноогдох тохиолдлын тоо\n  complete(\n    month = seq.Date(\n      min(month, na.rm=T),     # тохиолдол илрээгүй ч гэсэн бүх саруудыг гарч ирдэг болго\n      max(month, na.rm=T),\n      by=\"month\"),\n    fill = list(n = 0))"},{"path":"датаг-бүлэглэх.html","id":"өдөр-тутмын-тооллогыг-долоо-хоногт-шилжүүлэх","chapter":"13 Датаг бүлэглэх","heading":"Өдөр тутмын тооллогыг долоо хоногт шилжүүлэх","text":"Өдөр тутмын тооллогыг долоо хоног бүрт шилжүүлэхдээ floor_date() -ыг дээрхийн адил ашиглана. Харин энэ удаад долоо хоногт ноогдох мөрийн тоо биш харин өдөр тутамд илэрсэн тохиолдлын тооны нийлбэрийг (sum()) тогтоох хэрэгтэй учраас count()биш орондgroup_by(), summarize() функцуудыг хавсарч хэрэглэх шаардлагатай.","code":""},{"path":"датаг-бүлэглэх.html","id":"өдөр-тутмын-тооллогыг-сард-шилжүүлэх","chapter":"13 Датаг бүлэглэх","heading":"Өдөр тутмын тооллогыг сард шилжүүлэх","text":"Өдөр тутмын тооллогыг сар бүрт шилжүүлэхдээ floor_date() -ыг unit = \"month\" нэгжтэйгээр дээрхийн адил ашиглана. Харин энэ удаад сар бүрт ноогдох мөрийн тоо биш харин өдөр тутамд илэрсэн тохиолдлын тооны нийлбэрийг (sum()) тогтоох хэрэгтэй учраас count()биш орондgroup_by(), summarize() функцуудыг хавсарч хэрэглэх шаардлагатай.","code":""},{"path":"датаг-бүлэглэх.html","id":"бүлэглэсэн-датаг-эрэмбэлэх","chapter":"13 Датаг бүлэглэх","heading":"13.7 Бүлэглэсэн датаг эрэмбэлэх","text":"Бүлэглэсэн датаг dplyr -ын arrange() -аар эрэмбэлэх явц бүлэглээгүй linelist хүснэгтийг эрэмбэлэхтэй адил. Харин энэ үед аргументийг тохируулбал .by_group =TRUE эхлээд бүлэглэсэн баганууд эрэмбэлэгдэж, дараа нь arrange() оруулсан бусад баганууд эрэмбэлэгддэг.","code":""},{"path":"датаг-бүлэглэх.html","id":"бүлэглэсэн-датаг-шүүх","chapter":"13 Датаг бүлэглэх","heading":"13.8 Бүлэглэсэн датаг шүүх","text":"","code":""},{"path":"датаг-бүлэглэх.html","id":"filter","chapter":"13 Датаг бүлэглэх","heading":"filter()","text":"Дата хүснэгтийг шүүхдээ (filter) бусад функцтэй (max(), min(), mean()зэрэг ) хавсарч хэрэглэдэг ба бүлэглэсэн хүснэгтэд мөн адил хамт хэрэглэж болно. Жишээ нь медианаас дээш настан агуулсан мөрүүдийг үлдээх үйлдлийг бүлэглэсэн хүснэгтэд хийж болно. Өөрөөр хэлбэл бүлгүүдийн медиан наснаас дээш нас агуулсан мөрийг үлдээнэ гэсэн үг.","code":""},{"path":"датаг-бүлэглэх.html","id":"бүлгээр-хуваах","chapter":"13 Датаг бүлэглэх","heading":"Бүлгээр хуваах","text":"Хуваахдаа dplyr -ын slice()-ыг ашиглаж болно. Энэ нь мөрийг байрлалын дагуу шүүгдэг ба бүлэглэсэн датанд адилхан үйлчилнэ filters rows based position. Хүссэн хэсгүүдэд хуваахын тулд бүлэг тус бүрийг эхлээд дотор нь эрэмбэлэх хэрэгэтй гэдгийг анхаар.Жишээ нь эмнэлэг тус бүрд хэвтэгсдийн дундаас хамгйин сүүлийн 5-ыг сугалж авахын тулд:linelist -ыг hospital баганын дугуу бүлэглэЭмнэлэг/бүлэг тус бүр доторх эмнэлэгт хэвтсэн огноог хамгийн сүүлчээс хамгийн эртрүү чиглэлтэйгээр эрэмбэлЭмнэлэг тус бүрийн хамгийн эхний 5 мөрийг сугалж гаргаж ирнэslice_head() - n мөрийг дээрээс тоолж сонгоноslice_tail() - n мөрийг доороос тоолж сонгоно\nslice_sample() - n мөрийг санамсаргүй байдлаар сонгоноslice_min() - order_by = баганадах хамгийн их утгатай n мөрийг сонгоно (with_ties = TRUEгэж тохируул)\nslice_max() - order_by = баганадах хамгийн бага утгатай n мөрийг сонгоно (with_ties = TRUEгэж тохируул)[De-duplication] хуудаснаас slice()-ын талаар тайлбарласныг уншна уу.","code":"\nlinelist %>%\n  group_by(hospital) %>%\n  arrange(hospital, date_hospitalisation) %>%\n  slice_head(n = 5) %>% \n  arrange(hospital) %>%                            # харуулах\n  select(case_id, hospital, date_hospitalisation)  # харуулах## # A tibble: 30 x 3\n## # Groups:   hospital [6]\n##    case_id hospital          date_hospitalisation\n##    <chr>   <chr>             <date>              \n##  1 20b688  Central Hospital  2014-05-06          \n##  2 d58402  Central Hospital  2014-05-10          \n##  3 b8f2fd  Central Hospital  2014-05-13          \n##  4 acf422  Central Hospital  2014-05-28          \n##  5 275cc7  Central Hospital  2014-05-28          \n##  6 d1fafd  Military Hospital 2014-04-17          \n##  7 974bc1  Military Hospital 2014-05-13          \n##  8 6a9004  Military Hospital 2014-05-13          \n##  9 09e386  Military Hospital 2014-05-14          \n## 10 865581  Military Hospital 2014-05-15          \n## # ... with 20 more rows"},{"path":"датаг-бүлэглэх.html","id":"group_filter_grp_size","chapter":"13 Датаг бүлэглэх","heading":"Бүлгийн том жижигээр нь шүүх","text":"add_count() функц эх хүснэгтэд шинээр n гэсэн баганыг нэмдэг. Энэ баганын утга нь датандах мөр болгоны харьяалах бүлгийн хамрах хэмжээг зааж өгсөн байдаг.Доор уишээнд add_count() функцыг hospital багана дээр хэрэглэсэн байна. Тиймээс n багана дах утга бол тухайн мөрөнд бичигдсэн эмнэлэгийн бүлэгт ноогдох мөрний тоо юм. Тиймээс n баганын утгууд олон давтагдсан байна. Баганын нэр n -ийг add_count()-ын name =аргументээр өөрчилж болно. Харуулахад ойлгомжтой болгох үүднээс багануудыг select()-ээр эрэмбэлсэн.Ийм багана нэмэхэд жижиг (жишээ нь 500 аас доош хүн хэвтсэн) эмнэлэгт хэвтсэн тохиолдлуудыг шүүж гаргаж ирэхэд амар боллоо.##Бүлэглэсэн датаг хувиргахБүх багана мөрийг хэвээр нь байхад (нэгтгэхгүй) бүлгийн статистикийн тооцоо агуулсан шинэ багана нэмэх бол summarise()-ын оронд mutate()-ыг group_by() угсруулж хэрэглэ.Ингэснээр эх дата дээрээ бүлгийн статистикийг бусад баганын хамтаар харах боложмтой юм. Тухайлбал нэг мөрний утгыг бүлгийн утгатай нь харьцуулж болно.Доор жишээ код эмнэлэгт хожуу хэвтэлттэй мөрүүд болон хожуу хэвтэлтийн медиан үзүүлэлтүүдийг харьцуулж ялгааг харуулсан. Үүнийг хийх алхмууд нь:Датаг эмнэлэг тус бүрээр бүлэглэdays_onset_hosp (эмнэлэгт хожуу хэвтэх) баганыг ашиглан тухайн мөрөн дэх эмнэлэгийн хожуу хэвтэлийн дундаж үзүүлэлтийг тооцож бодсон шинэ багана үүсгэ.Хоёр баганын ялгааг тооцОйлгомжтой байлгахын тулд зөвхөн тодорхой багануудыг select() -ээр сонгож харуулав.","code":"\nlinelist %>% \n  as_tibble() %>% \n  add_count(hospital) %>%          # \"энэ эмнэлэгтэй адилхан эмнэлэгт хэвтсэн мөрийн тоог\" нэм \n  select(hospital, n, everything())## # A tibble: 5,888 x 31\n##    hospital                   n case_id generation date_infection date_onset\n##    <chr>                  <int> <chr>        <dbl> <date>         <date>    \n##  1 Other                    885 5fe599           4 2014-05-08     2014-05-13\n##  2 Missing                 1469 8689b7           4 NA             2014-05-13\n##  3 St. Mark's Maternity ~   422 11f8ea           2 NA             2014-05-16\n##  4 Port Hospital           1762 b8812a           3 2014-05-04     2014-05-18\n##  5 Military Hospital        896 893f25           3 2014-05-18     2014-05-21\n##  6 Port Hospital           1762 be99c8           3 2014-05-03     2014-05-22\n##  7 Missing                 1469 07e3e8           4 2014-05-22     2014-05-27\n##  8 Missing                 1469 369449           4 2014-05-28     2014-06-02\n##  9 Missing                 1469 f393b4           4 NA             2014-06-05\n## 10 Missing                 1469 1389ca           4 NA             2014-06-05\n## # ... with 5,878 more rows, and 25 more variables:\n## #   date_hospitalisation <date>, date_outcome <date>, outcome <chr>,\n## #   gender <chr>, age <dbl>, age_unit <chr>, age_years <dbl>,\n## #   age_cat <fct>, age_cat5 <fct>, lon <dbl>, lat <dbl>, infector <chr>,\n## #   source <chr>, wt_kg <dbl>, ht_cm <dbl>, ct_blood <dbl>, fever <chr>,\n## #   chills <chr>, cough <chr>, aches <chr>, vomit <chr>, temp <dbl>,\n## #   time_admission <chr>, bmi <dbl>, days_onset_hosp <dbl>\nlinelist %>% \n  add_count(hospital) %>% \n  filter(n < 500)\nlinelist %>% \n  # Датаг эмнэлэг тус бүрээр бүлэглэ (linelist -д өөрчлөлт гарахгүй)\n  group_by(hospital) %>% \n  \n  # Шинэ баганууд\n  mutate(\n    # Эмнэлэгт хэвтэх хүртэлх өдрийн дундаж (таслалтын ард нэг орон байхаар хураа)\n    group_delay_admit = round(mean(days_onset_hosp, na.rm=T), 1),\n    \n    # Тухайн мөрний хожуу хэвтэлт болон яг тэр мөрний эмнэлэгийн хожуу хэвтэлтийн дундаж хоёрын ялгаа (таслалтын ард нэг орон байхаар хураа)\n    diff_to_group     = round(days_onset_hosp - group_delay_admit, 1)) %>%\n  \n  # Ойлгомжтой байлгахын тулд зөвхөн тодорхой багануудыг л сонго\n  select(case_id, hospital, days_onset_hosp, group_delay_admit, diff_to_group)## # A tibble: 5,888 x 5\n## # Groups:   hospital [6]\n##    case_id hospital           days_onset_hosp group_delay_adm~ diff_to_group\n##    <chr>   <chr>                        <dbl>            <dbl>         <dbl>\n##  1 5fe599  Other                            2              2             0  \n##  2 8689b7  Missing                          1              2.1          -1.1\n##  3 11f8ea  St. Mark's Matern~               2              2.1          -0.1\n##  4 b8812a  Port Hospital                    2              2.1          -0.1\n##  5 893f25  Military Hospital                1              2.1          -1.1\n##  6 be99c8  Port Hospital                    1              2.1          -1.1\n##  7 07e3e8  Missing                          2              2.1          -0.1\n##  8 369449  Missing                          1              2.1          -1.1\n##  9 f393b4  Missing                          1              2.1          -1.1\n## 10 1389ca  Missing                          2              2.1          -0.1\n## # ... with 5,878 more rows"},{"path":"датаг-бүлэглэх.html","id":"бүлэглэсэн-дата-1","chapter":"13 Датаг бүлэглэх","heading":"13.9 Бүлэглэсэн дата","text":"select() функц мөн бүлэглэсэн датанд үйлчилдэг. Гэхдээ бүлэг үүссэн багана нь үргэлж сонгогдох болно (select() дотор зааж өгөөгүй байсан ч гэсэн). Бүлэг үүссэн баганыг оруулахгүй байхын тулд эхлээд ungroup() хийнэ.","code":""},{"path":"датаг-бүлэглэх.html","id":"нэмэлт-материал","chapter":"13 Датаг бүлэглэх","heading":"13.10 Нэмэлт материал","text":"Нэмэлт хэрэгтэй мэдээллүүдийг дараах линкуудээс үзнэ үү:Ямар ч нэгтгэж дүгнэсэн функцыг бүлэглэсэн датанд хийж болно; RStudio data transformation cheat sheet ээс харна уу.dplyr\ntidyverse reference pages group_by() хуудасны Data Carpentry хэсэг болон groupingData manipulation хуудасSummarize conditions dplyr","code":""}]
